{"title":"密钥对的相关操作（keytool、openSSL)","date":"2018-10-25T02:01:32.000Z","slug":"2018-10-25-密钥对的相关操作（keytool、openSSL)","tags":["密码学"],"updated":"2018-10-25T12:06:04.839Z","content":"<h2 id=\"cacerts\"><a href=\"#cacerts\" class=\"headerlink\" title=\"cacerts\"></a>cacerts</h2><h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><p>cacerts：trusted certificate authority (CA) certificates</p>\n<blockquote>\n<p>​    The <code>cacerts</code> file is a collection of trusted certificate authority (CA) certificates. Sun Microsystems™ includes a <code>cacerts</code> file with its SSL support in the Java™ Secure Socket Extension (JSSE) tool kit and JDK 1.4.x. It contains certificate references for well-known Certificate authorities, such as VeriSign™. Its format is the “keystore” format defined by Sun. An administrator can edit the <code>cacerts</code> file with a command line tool (also provided by Sun) called keytool. For more information about keytool, see the Sun Web site.</p>\n<p><strong>Note:</strong> The default password for the cacerts file supplied by Sun is <code>changeit</code>. You must use this password to view the contents or to import a new certificate. For security reasons, change the default password.</p>\n<p>The essential requirement is that the certificate authority that signed the HPE Service Manager server’s certificate must be in the list of certificate authorities named in this file. To use a self-issued server certificate created with OpenSSL or a tool such as Microsoft Certificate Server™, you must import the certificate for this private certificate authority into the <code>cacerts</code> file that the client uses for SSL. If you do not import the certificate, SSL connections fail because the Java SSL implementation does not recognize the certificate authority.</p>\n</blockquote>\n<p>​    简单的来说，cacerts是java用于接受受信任的证书已经证书链，cacerts默认包含有一些众所周知的权威证书，以及证书链。当你需要使用https协议，为你的服务添加ssl的时候，需要将你的证书和证书链导入cacerts（如果已经导入过了，就不需要了）。</p>\n<h2 id=\"keytool\"><a href=\"#keytool\" class=\"headerlink\" title=\"keytool\"></a>keytool</h2><h3 id=\"查看java自带的cacerts\"><a href=\"#查看java自带的cacerts\" class=\"headerlink\" title=\"查看java自带的cacerts\"></a>查看java自带的cacerts</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> Linux</span><br><span class=\"line\">cd $JAVA_HOME/jre/lib/security</span><br><span class=\"line\">keytool -list -storepass changeit -keystore \"./cacerts\"\t\t# 查询所有的证书</span><br><span class=\"line\">keytool -list -storepass changeit -keystore \"./cacerts\" |grep server </span><br><span class=\"line\"><span class=\"meta\">#</span> 查询alias带有server的证书</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> Windows</span><br><span class=\"line\">cd %JAVA_HOME%/jre/lib/security</span><br><span class=\"line\">keytool -list -storepass changeit -keystore \"./cacerts\"\t\t# 查询所有的证书</span><br><span class=\"line\">keytool -list -storepass changeit -keystore \"./cacerts\" |findstr /i server</span><br><span class=\"line\"><span class=\"meta\">#</span> 查询alias带有server的证书</span><br></pre></td></tr></table></figure>\n<h3 id=\"产生jks密钥对\"><a href=\"#产生jks密钥对\" class=\"headerlink\" title=\"产生jks密钥对\"></a>产生jks密钥对</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 产生一个签名算法为SHA256withRSA的，密钥长度为2048，的RSA密钥对，即软证书server.jks</span><br><span class=\"line\">keytool -keystore server.jks -genkey -alias xxx_server -keyalg RSA -sigalg SHA256withRSA -keysize 2048</span><br></pre></td></tr></table></figure>\n<h3 id=\"导出jks的证书\"><a href=\"#导出jks的证书\" class=\"headerlink\" title=\"导出jks的证书\"></a>导出jks的证书</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 证书，即公钥</span><br><span class=\"line\">keytool -export -alias server -keystore server.jks -rfc -file sign.cer</span><br></pre></td></tr></table></figure>\n<h3 id=\"导入证书到cacerts\"><a href=\"#导入证书到cacerts\" class=\"headerlink\" title=\"导入证书到cacerts\"></a>导入证书到cacerts</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd $JAVA_HOME/jre/lib/security</span><br><span class=\"line\"><span class=\"meta\">#</span> 将证书导入cacerts，并别名为server</span><br><span class=\"line\">keytool -import -keystore \"./cacerts\" -alias server -trustcacerts -storepass changeit -file /var/tmp/certs/Server.cer</span><br></pre></td></tr></table></figure>\n<h3 id=\"在cacerts上删除证书\"><a href=\"#在cacerts上删除证书\" class=\"headerlink\" title=\"在cacerts上删除证书\"></a>在cacerts上删除证书</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd $JAVA_HOME/jre/lib/security</span><br><span class=\"line\"><span class=\"meta\">#</span> 删除命名为server的证书</span><br><span class=\"line\">keytool -delete -alias server -keystore \"./cacerts\" -storepass changeit</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ol>\n<li>什么是cacerts： <a href=\"https://docs.microfocus.com/SM/9.50/Hybrid/Content/security/concepts/what_is_a_cacerts_file.htm\" target=\"_blank\" rel=\"noopener\">https://docs.microfocus.com/SM/9.50/Hybrid/Content/security/concepts/what_is_a_cacerts_file.htm</a></li>\n</ol>\n","prev":{"title":"网易入职路线","slug":"网易入职路线"},"next":{"title":"PKI技术","slug":"PKI技术"},"link":"https://pinksmallfan.github.io/WenChongAndJiaoKou/WenChongAndJiaoKou/2018/10/25/2018-10-25-密钥对的相关操作（keytool、openSSL)/","toc":[{"title":"cacerts","id":"cacerts","index":"1","children":[{"title":"概念","id":"概念","index":"1.1"}]},{"title":"keytool","id":"keytool","index":"2","children":[{"title":"查看java自带的cacerts","id":"查看java自带的cacerts","index":"2.1"},{"title":"产生jks密钥对","id":"产生jks密钥对","index":"2.2"},{"title":"导出jks的证书","id":"导出jks的证书","index":"2.3"},{"title":"导入证书到cacerts","id":"导入证书到cacerts","index":"2.4"},{"title":"在cacerts上删除证书","id":"在cacerts上删除证书","index":"2.5"}]},{"title":"参考","id":"参考","index":"3"}]}