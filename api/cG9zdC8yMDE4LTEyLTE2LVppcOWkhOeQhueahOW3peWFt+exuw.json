{"title":"Java下Zip处理的工具类","date":"2018-12-16T12:29:34.000Z","slug":"2018-12-16-Zip处理的工具类","tags":["Utils"],"updated":"2018-12-16T12:57:39.055Z","content":"<h2 id=\"简要介绍\"><a href=\"#简要介绍\" class=\"headerlink\" title=\"简要介绍\"></a>简要介绍</h2><p>​    通过工具类，读取zip压缩文件，获取被压缩的文件内容，工具类忽略压缩文件中含有文件夹的文件，只考虑压缩文件的内容仅限于文件。</p>\n<h2 id=\"Pom\"><a href=\"#Pom\" class=\"headerlink\" title=\"Pom\"></a>Pom</h2><h2 id=\"实现方式\"><a href=\"#实现方式\" class=\"headerlink\" title=\"实现方式\"></a>实现方式</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Enumeration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.tools.zip.ZipEntry;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.tools.zip.ZipFile;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 说明:</span></span><br><span class=\"line\"><span class=\"comment\"> *  * zip处理工具类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ZipUtil</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> FILE_LIMIT_SIZE = <span class=\"number\">1000</span> * <span class=\"number\">50</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 读取zip的文件，并转为map对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span>  zipFile     zip文件</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span>             返回map对象，键为文件名，值为文件</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Map&lt;String, Object&gt; <span class=\"title\">readZip2MapList</span><span class=\"params\">(File zipFile)</span> <span class=\"keyword\">throws</span> IOException, Exception </span>&#123;</span><br><span class=\"line\">        String fileEncode = checkEncoding(zipFile);</span><br><span class=\"line\">        ZipFile zf = <span class=\"keyword\">new</span> ZipFile(zipFile, fileEncode);</span><br><span class=\"line\"></span><br><span class=\"line\">        Map&lt;String, Object&gt; fileMap = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\">        InputStream is = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Enumeration&lt;ZipEntry&gt; entries = zf.getEntries();</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (entries.hasMoreElements()) &#123;</span><br><span class=\"line\">                ZipEntry ze = entries.nextElement();</span><br><span class=\"line\">                String filePath = ze.getName();</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (ze.isDirectory()) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                is = zf.getInputStream(ze);</span><br><span class=\"line\">                <span class=\"keyword\">byte</span>[] fileByteArr = toByteArray(is);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(fileByteArr.length &gt; FILE_LIMIT_SIZE)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(<span class=\"string\">\"文件\"</span> + filePath + <span class=\"string\">\"大小超过\"</span> + FILE_LIMIT_SIZE / <span class=\"number\">1000</span> + <span class=\"string\">\"KB\"</span>);</span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    fileMap.put(filePath, fileByteArr);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">finally</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(is != <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">                is.close();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> fileMap;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/** 检查文件的编码 */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String <span class=\"title\">checkEncoding</span><span class=\"params\">(File file)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        InputStream is = <span class=\"keyword\">new</span> FileInputStream(file);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] b = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">3</span>];</span><br><span class=\"line\">        is.read(b);</span><br><span class=\"line\">        is.close();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (b[<span class=\"number\">0</span>] == -<span class=\"number\">17</span> &amp;&amp; b[<span class=\"number\">1</span>] == -<span class=\"number\">69</span> &amp;&amp; b[<span class=\"number\">2</span>] == -<span class=\"number\">65</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">\"UTF-8\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">\"GBK\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 将inputStream读取位字节</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> input</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@throws</span> IOException</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">byte</span>[] toByteArray(InputStream input) <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            ByteArrayOutputStream output = <span class=\"keyword\">new</span> ByteArrayOutputStream();</span><br><span class=\"line\">            <span class=\"keyword\">long</span> count = <span class=\"number\">0L</span>;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> n;</span><br><span class=\"line\">            <span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">4096</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">boolean</span> var5 = <span class=\"keyword\">false</span>; -<span class=\"number\">1</span> != (n = input.read(buffer)); count += (<span class=\"keyword\">long</span>)n) &#123;</span><br><span class=\"line\">                output.write(buffer, <span class=\"number\">0</span>, n);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//count =(count &gt; 2147483647L ? -1 : (int)count) ;</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> output.toByteArray();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException ioe) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IOException(<span class=\"string\">\"Zip读取数据失败：\"</span>+ ioe.getMessage());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","next":{"title":"java获取证书对象、摘要、通用名","slug":"2018-12-16-java获取证书对象、摘要、通用名"},"link":"https://pinksmallfan.github.io/WenChongAndJiaoKou/WenChongAndJiaoKou/2018/12/16/2018-12-16-Zip处理的工具类/","toc":[{"title":"简要介绍","id":"简要介绍","index":"1"},{"title":"实现方式","id":"实现方式","index":"2"}]}