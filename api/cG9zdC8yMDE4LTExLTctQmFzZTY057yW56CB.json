{"title":"Base64编码","date":"2018-11-07T08:01:36.000Z","slug":"2018-11-7-Base64编码","tags":["密码学"],"updated":"2018-11-07T14:27:25.740Z","content":"<h2 id=\"伪代码流程\"><a href=\"#伪代码流程\" class=\"headerlink\" title=\"伪代码流程\"></a>伪代码流程</h2><h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Base64编解码器</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Base64Encoder</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">byte</span>[] encodingTable =</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t(<span class=\"keyword\">byte</span>) <span class=\"string\">'A'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'B'</span>,</span><br><span class=\"line\">\t\t(<span class=\"keyword\">byte</span>) <span class=\"string\">'C'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'D'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'E'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'F'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'G'</span>,</span><br><span class=\"line\">\t\t(<span class=\"keyword\">byte</span>) <span class=\"string\">'H'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'I'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'J'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'K'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'L'</span>,</span><br><span class=\"line\">\t\t(<span class=\"keyword\">byte</span>) <span class=\"string\">'M'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'N'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'O'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'P'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'Q'</span>,</span><br><span class=\"line\">\t\t(<span class=\"keyword\">byte</span>) <span class=\"string\">'R'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'S'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'T'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'U'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'V'</span>,</span><br><span class=\"line\">\t\t(<span class=\"keyword\">byte</span>) <span class=\"string\">'W'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'X'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'Y'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'Z'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'a'</span>,</span><br><span class=\"line\">\t\t(<span class=\"keyword\">byte</span>) <span class=\"string\">'b'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'c'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'d'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'e'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'f'</span>,</span><br><span class=\"line\">\t\t(<span class=\"keyword\">byte</span>) <span class=\"string\">'g'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'h'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'i'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'j'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'k'</span>,</span><br><span class=\"line\">\t\t(<span class=\"keyword\">byte</span>) <span class=\"string\">'l'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'m'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'n'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'o'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'p'</span>,</span><br><span class=\"line\">\t\t(<span class=\"keyword\">byte</span>) <span class=\"string\">'q'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'r'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'s'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'t'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'u'</span>,</span><br><span class=\"line\">\t\t(<span class=\"keyword\">byte</span>) <span class=\"string\">'v'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'w'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'x'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'y'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'z'</span>,</span><br><span class=\"line\">\t\t(<span class=\"keyword\">byte</span>) <span class=\"string\">'0'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'1'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'2'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'3'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'4'</span>,</span><br><span class=\"line\">\t\t(<span class=\"keyword\">byte</span>) <span class=\"string\">'5'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'6'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'7'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'8'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'9'</span>,</span><br><span class=\"line\">\t\t(<span class=\"keyword\">byte</span>) <span class=\"string\">'+'</span>, (<span class=\"keyword\">byte</span>) <span class=\"string\">'/'</span></span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t * set up the decoding table.</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">byte</span>[] decodingTable;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">\t\tdecodingTable = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">128</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"string\">'A'</span>; i &lt;= <span class=\"string\">'Z'</span>; i++) &#123;</span><br><span class=\"line\">\t\t\tdecodingTable[i] = (<span class=\"keyword\">byte</span>) (i - <span class=\"string\">'A'</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"string\">'a'</span>; i &lt;= <span class=\"string\">'z'</span>; i++) &#123;</span><br><span class=\"line\">\t\t\tdecodingTable[i] = (<span class=\"keyword\">byte</span>) (i - <span class=\"string\">'a'</span> + <span class=\"number\">26</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"string\">'0'</span>; i &lt;= <span class=\"string\">'9'</span>; i++) &#123;</span><br><span class=\"line\">\t\t\tdecodingTable[i] = (<span class=\"keyword\">byte</span>) (i - <span class=\"string\">'0'</span> + <span class=\"number\">52</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tdecodingTable[<span class=\"string\">'+'</span>] = <span class=\"number\">62</span>;</span><br><span class=\"line\">\t\tdecodingTable[<span class=\"string\">'/'</span>] = <span class=\"number\">63</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * BASE64编码</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> date : 二进制数组</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> 包含BASE64编码后的字符串</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">encode</span><span class=\"params\">(<span class=\"keyword\">byte</span>[] data)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">byte</span>[] bytes;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> modulus = data.length % <span class=\"number\">3</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (modulus == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\tbytes = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">4</span> * data.length / <span class=\"number\">3</span>];</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tbytes = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">4</span> * ((data.length / <span class=\"number\">3</span>) + <span class=\"number\">1</span>)];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> dataLength = (data.length - modulus);</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> a1, a2, a3;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>, j = <span class=\"number\">0</span>; i &lt; dataLength; i += <span class=\"number\">3</span>, j += <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">\t\t\ta1 = data[i] &amp; <span class=\"number\">0xff</span>;</span><br><span class=\"line\">\t\t\ta2 = data[i + <span class=\"number\">1</span>] &amp; <span class=\"number\">0xff</span>;</span><br><span class=\"line\">\t\t\ta3 = data[i + <span class=\"number\">2</span>] &amp; <span class=\"number\">0xff</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tbytes[j] = encodingTable[(a1 &gt;&gt;&gt; <span class=\"number\">2</span>) &amp; <span class=\"number\">0x3f</span>];</span><br><span class=\"line\">\t\t\tbytes[j + <span class=\"number\">1</span>] = encodingTable[((a1 &lt;&lt; <span class=\"number\">4</span>) | (a2 &gt;&gt;&gt; <span class=\"number\">4</span>)) &amp; <span class=\"number\">0x3f</span>];</span><br><span class=\"line\">\t\t\tbytes[j + <span class=\"number\">2</span>] = encodingTable[((a2 &lt;&lt; <span class=\"number\">2</span>) | (a3 &gt;&gt;&gt; <span class=\"number\">6</span>)) &amp; <span class=\"number\">0x3f</span>];</span><br><span class=\"line\">\t\t\tbytes[j + <span class=\"number\">3</span>] = encodingTable[a3 &amp; <span class=\"number\">0x3f</span>];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t\t * process the tail end.</span></span><br><span class=\"line\"><span class=\"comment\">\t\t */</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> b1, b2, b3;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> d1, d2;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">switch</span> (modulus) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">0</span>: <span class=\"comment\">/* nothing left to do */</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">\t\t\td1 = data[data.length - <span class=\"number\">1</span>] &amp; <span class=\"number\">0xff</span>;</span><br><span class=\"line\">\t\t\tb1 = (d1 &gt;&gt;&gt; <span class=\"number\">2</span>) &amp; <span class=\"number\">0x3f</span>;</span><br><span class=\"line\">\t\t\tb2 = (d1 &lt;&lt; <span class=\"number\">4</span>) &amp; <span class=\"number\">0x3f</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tbytes[bytes.length - <span class=\"number\">4</span>] = encodingTable[b1];</span><br><span class=\"line\">\t\t\tbytes[bytes.length - <span class=\"number\">3</span>] = encodingTable[b2];</span><br><span class=\"line\">\t\t\tbytes[bytes.length - <span class=\"number\">2</span>] = (<span class=\"keyword\">byte</span>) <span class=\"string\">'='</span>;</span><br><span class=\"line\">\t\t\tbytes[bytes.length - <span class=\"number\">1</span>] = (<span class=\"keyword\">byte</span>) <span class=\"string\">'='</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">\t\t\td1 = data[data.length - <span class=\"number\">2</span>] &amp; <span class=\"number\">0xff</span>;</span><br><span class=\"line\">\t\t\td2 = data[data.length - <span class=\"number\">1</span>] &amp; <span class=\"number\">0xff</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tb1 = (d1 &gt;&gt;&gt; <span class=\"number\">2</span>) &amp; <span class=\"number\">0x3f</span>;</span><br><span class=\"line\">\t\t\tb2 = ((d1 &lt;&lt; <span class=\"number\">4</span>) | (d2 &gt;&gt;&gt; <span class=\"number\">4</span>)) &amp; <span class=\"number\">0x3f</span>;</span><br><span class=\"line\">\t\t\tb3 = (d2 &lt;&lt; <span class=\"number\">2</span>) &amp; <span class=\"number\">0x3f</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tbytes[bytes.length - <span class=\"number\">4</span>] = encodingTable[b1];</span><br><span class=\"line\">\t\t\tbytes[bytes.length - <span class=\"number\">3</span>] = encodingTable[b2];</span><br><span class=\"line\">\t\t\tbytes[bytes.length - <span class=\"number\">2</span>] = encodingTable[b3];</span><br><span class=\"line\">\t\t\tbytes[bytes.length - <span class=\"number\">1</span>] = (<span class=\"keyword\">byte</span>) <span class=\"string\">'='</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> String(bytes);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 判断字符串是否base64字符串</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> str : 字符串</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> boolean</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isbase64str</span><span class=\"params\">(String str)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;str.length();i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">char</span> t= str.charAt(i);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(t&gt;=<span class=\"string\">'A'</span> &amp;&amp; t&lt;=<span class=\"string\">'Z'</span>)<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(t&gt;=<span class=\"string\">'a'</span> &amp;&amp; t&lt;=<span class=\"string\">'z'</span>)<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(t&gt;=<span class=\"string\">'0'</span> &amp;&amp; t&lt;=<span class=\"string\">'9'</span>)<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">switch</span>(t)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"string\">'+'</span>:</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"string\">'/'</span>:</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"string\">'='</span>:</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"string\">' '</span>:</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"string\">'\\t'</span>:</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"string\">'\\n'</span>:</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"string\">'\\f'</span>:</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"string\">'\\r'</span>:</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * BASE64解码</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> base64 : base64字符串</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> 解码后的原始二进制数据</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">byte</span>[] decode(String base64)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tbase64= base64.replaceAll(<span class=\"string\">\"\\\\s\"</span>,<span class=\"string\">\"\"</span>);\t<span class=\"comment\">//去除所有空格 \"[ \\t\\n\\x0B\\f\\r]\"</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">byte</span>[] data= base64.getBytes();</span><br><span class=\"line\">\t\t<span class=\"keyword\">byte</span>[] bytes;</span><br><span class=\"line\">\t\t<span class=\"keyword\">byte</span> b1, b2, b3, b4;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(data[data.length - <span class=\"number\">2</span>] == <span class=\"string\">'='</span>) &#123;</span><br><span class=\"line\">\t\t\tbytes = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[(((data.length / <span class=\"number\">4</span>) - <span class=\"number\">1</span>) * <span class=\"number\">3</span>) + <span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (data[data.length - <span class=\"number\">1</span>] == <span class=\"string\">'='</span>) &#123;</span><br><span class=\"line\">\t\t\tbytes = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[(((data.length / <span class=\"number\">4</span>) - <span class=\"number\">1</span>) * <span class=\"number\">3</span>) + <span class=\"number\">2</span>];</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tbytes = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[((data.length / <span class=\"number\">4</span>) * <span class=\"number\">3</span>)];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>, j = <span class=\"number\">0</span>; i &lt; data.length - <span class=\"number\">4</span>; i += <span class=\"number\">4</span>, j += <span class=\"number\">3</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tb1 = decodingTable[data[i]];</span><br><span class=\"line\">\t\t\tb2 = decodingTable[data[i + <span class=\"number\">1</span>]];</span><br><span class=\"line\">\t\t\tb3 = decodingTable[data[i + <span class=\"number\">2</span>]];</span><br><span class=\"line\">\t\t\tb4 = decodingTable[data[i + <span class=\"number\">3</span>]];</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tbytes[j] = (<span class=\"keyword\">byte</span>) ((b1 &lt;&lt; <span class=\"number\">2</span>) | (b2 &gt;&gt; <span class=\"number\">4</span>));</span><br><span class=\"line\">\t\t\tbytes[j + <span class=\"number\">1</span>] = (<span class=\"keyword\">byte</span>) ((b2 &lt;&lt; <span class=\"number\">4</span>) | (b3 &gt;&gt; <span class=\"number\">2</span>));</span><br><span class=\"line\">\t\t\tbytes[j + <span class=\"number\">2</span>] = (<span class=\"keyword\">byte</span>) ((b3 &lt;&lt; <span class=\"number\">6</span>) | b4);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (data[data.length - <span class=\"number\">2</span>] == <span class=\"string\">'='</span>) &#123;</span><br><span class=\"line\">\t\t\tb1 = decodingTable[data[data.length - <span class=\"number\">4</span>]];</span><br><span class=\"line\">\t\t\tb2 = decodingTable[data[data.length - <span class=\"number\">3</span>]];</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tbytes[bytes.length - <span class=\"number\">1</span>] = (<span class=\"keyword\">byte</span>) ((b1 &lt;&lt; <span class=\"number\">2</span>) | (b2 &gt;&gt; <span class=\"number\">4</span>));</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (data[data.length - <span class=\"number\">1</span>] == <span class=\"string\">'='</span>) &#123;</span><br><span class=\"line\">\t\t\tb1 = decodingTable[data[data.length - <span class=\"number\">4</span>]];</span><br><span class=\"line\">\t\t\tb2 = decodingTable[data[data.length - <span class=\"number\">3</span>]];</span><br><span class=\"line\">\t\t\tb3 = decodingTable[data[data.length - <span class=\"number\">2</span>]];</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tbytes[bytes.length - <span class=\"number\">2</span>] = (<span class=\"keyword\">byte</span>) ((b1 &lt;&lt; <span class=\"number\">2</span>) | (b2 &gt;&gt; <span class=\"number\">4</span>));</span><br><span class=\"line\">\t\t\tbytes[bytes.length - <span class=\"number\">1</span>] = (<span class=\"keyword\">byte</span>) ((b2 &lt;&lt; <span class=\"number\">4</span>) | (b3 &gt;&gt; <span class=\"number\">2</span>));</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tb1 = decodingTable[data[data.length - <span class=\"number\">4</span>]];</span><br><span class=\"line\">\t\t\tb2 = decodingTable[data[data.length - <span class=\"number\">3</span>]];</span><br><span class=\"line\">\t\t\tb3 = decodingTable[data[data.length - <span class=\"number\">2</span>]];</span><br><span class=\"line\">\t\t\tb4 = decodingTable[data[data.length - <span class=\"number\">1</span>]];</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tbytes[bytes.length - <span class=\"number\">3</span>] = (<span class=\"keyword\">byte</span>) ((b1 &lt;&lt; <span class=\"number\">2</span>) | (b2 &gt;&gt; <span class=\"number\">4</span>));</span><br><span class=\"line\">\t\t\tbytes[bytes.length - <span class=\"number\">2</span>] = (<span class=\"keyword\">byte</span>) ((b2 &lt;&lt; <span class=\"number\">4</span>) | (b3 &gt;&gt; <span class=\"number\">2</span>));</span><br><span class=\"line\">\t\t\tbytes[bytes.length - <span class=\"number\">1</span>] = (<span class=\"keyword\">byte</span>) ((b3 &lt;&lt; <span class=\"number\">6</span>) | b4);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> bytes;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","prev":{"title":"微服务实践笔记","slug":"2018-11-8-微服务实践笔记"},"next":{"title":"python常用","slug":"2018-11-4-python常用"},"link":"http://wenchongjiaokou.info./2018/11/07/2018-11-7-Base64编码/","toc":[{"title":"代码","id":"代码","index":"1"}]}