{"title":"高并发测试","date":"2018-10-11T13:36:24.000Z","slug":"highConcurrencyTest","tags":["代码","测试","高并发"],"updated":"2018-10-18T14:47:09.821Z","content":"<h2 id=\"高并发\"><a href=\"#高并发\" class=\"headerlink\" title=\"高并发\"></a>高并发</h2><h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testConcurrency</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> threadSize = <span class=\"number\">100</span>;</span><br><span class=\"line\">       <span class=\"keyword\">final</span> CountDownLatch countDownLatch = <span class=\"keyword\">new</span> CountDownLatch(<span class=\"number\">1</span>);</span><br><span class=\"line\">       <span class=\"comment\">// 创建一个刚好有100个线程槽的线程池</span></span><br><span class=\"line\">       <span class=\"keyword\">final</span> ExecutorService executorService = Executors.newFixedThreadPool(threadSize);</span><br><span class=\"line\">       <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;threadSize; i++)&#123;</span><br><span class=\"line\">           <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> number = i+<span class=\"number\">1</span>;</span><br><span class=\"line\">           Runnable runnable = <span class=\"keyword\">new</span> Runnable() &#123;</span><br><span class=\"line\">               <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                   <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                       countDownLatch.await();</span><br><span class=\"line\"></span><br><span class=\"line\">                       <span class=\"comment\">// TODO 需要进行并发测试的函数</span></span><br><span class=\"line\">                       </span><br><span class=\"line\">                   &#125; <span class=\"keyword\">catch</span> (Exception e)&#123;</span><br><span class=\"line\">                       e.printStackTrace();</span><br><span class=\"line\">                   &#125;</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">           &#125;;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 线程池的申请线程</span></span><br><span class=\"line\">           executorService.submit(runnable);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       System.out.println(<span class=\"string\">\"Start!!\"</span>);</span><br><span class=\"line\">       <span class=\"comment\">// 开始执行并发测试</span></span><br><span class=\"line\">       countDownLatch.countDown();</span><br><span class=\"line\">       <span class=\"comment\">// 等待之前申请线程的时间</span></span><br><span class=\"line\">       executorService.awaitTermination(<span class=\"number\">1000</span>,TimeUnit.MILLISECONDS);</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p>### </p>\n<h2 id=\"任务\"><a href=\"#任务\" class=\"headerlink\" title=\"任务\"></a>任务</h2><ol>\n<li>通过IDEA构建一个spring-boot的maven项目</li>\n<li>连接mysql数据库，能够进行简单的增删改查，搭建为一个模板项目[Spring-boot_mysql]</li>\n<li>进行高并发sql的查询测试</li>\n<li>添加mybatis模块</li>\n<li>nexus私服搭建</li>\n<li>添加redis模块</li>\n<li></li>\n<li>添加zookeeper模块</li>\n<li></li>\n<li>添加dubbo模块</li>\n<li></li>\n<li>添加webSocket模块</li>\n<li>添加netty模块-&gt;与tomcat切入（对比）</li>\n<li>未完待续</li>\n</ol>\n<h2 id=\"idea\"><a href=\"#idea\" class=\"headerlink\" title=\"idea\"></a>idea</h2><ol>\n<li>项目搭建、部署的流程步骤</li>\n<li>技术原理的执行步骤</li>\n<li>业务的流程步骤</li>\n</ol>\n<p>​    </p>\n","prev":{"title":"idea使用技巧大放送","slug":"idea-use-tips"},"next":{"title":"故事化应用","slug":"tellAYarn"},"link":"https://pinksmallfan.github.io/WenChongAndJiaoKou/WenChongAndJiaoKou/2018/10/11/highConcurrencyTest/","toc":[{"title":"高并发","id":"高并发","index":"1","children":[{"title":"代码","id":"代码","index":"1.1"}]},{"title":"任务","id":"任务","index":"2"},{"title":"idea","id":"idea","index":"3"}]}