<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>R语言的基础学习</title>
      <link href="./2018/11/22/2018-11-22-R%E8%AF%AD%E8%A8%80%E7%9A%84%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/"/>
      <url>./2018/11/22/2018-11-22-R%E8%AF%AD%E8%A8%80%E7%9A%84%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><h3 id="五种基本类型"><a href="#五种基本类型" class="headerlink" title="五种基本类型"></a>五种基本类型</h3><h4 id="字符"><a href="#字符" class="headerlink" title="字符"></a>字符</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x &lt;- <span class="string">"233"</span></span><br></pre></td></tr></table></figure><h4 id="数值"><a href="#数值" class="headerlink" title="数值"></a>数值</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x &lt;- <span class="number">3.14</span></span><br><span class="line">x &lt;- <span class="number">1</span></span><br></pre></td></tr></table></figure><h4 id="整数"><a href="#整数" class="headerlink" title="整数"></a>整数</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x &lt;- <span class="number">3L</span></span><br></pre></td></tr></table></figure><h4 id="复数"><a href="#复数" class="headerlink" title="复数"></a>复数</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x &lt;- <span class="number">1</span>+<span class="number">2i</span></span><br></pre></td></tr></table></figure><h4 id="逻辑"><a href="#逻辑" class="headerlink" title="逻辑"></a>逻辑</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x &lt;- <span class="literal">TRUE</span></span><br></pre></td></tr></table></figure><h3 id="向量"><a href="#向量" class="headerlink" title="向量"></a>向量</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  Vector</span></span><br><span class="line"><span class="comment"># 三种表达方式</span></span><br><span class="line">x &lt;- vector(<span class="string">"character"</span>, length=<span class="number">10</span>)</span><br><span class="line">x1 &lt;- <span class="number">1</span>:<span class="number">4</span></span><br><span class="line">x2 &lt;- c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">x3 &lt;- c(<span class="literal">TRUE</span>,<span class="number">10</span>,<span class="string">"a"</span>)</span><br><span class="line">x4 &lt;- c(<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>)</span><br><span class="line">x5 &lt;- c(<span class="literal">TRUE</span>,<span class="literal">FALSE</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 转换</span></span><br><span class="line">as.numeric(x2)</span><br><span class="line">as.logical(x5)</span><br><span class="line">as.character(x4)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重命名</span></span><br><span class="line">class(x1)</span><br><span class="line">names(x2) &lt;- c(<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>,<span class="string">"d"</span>)</span><br><span class="line">x2</span><br></pre></td></tr></table></figure><h3 id="矩阵"><a href="#矩阵" class="headerlink" title="矩阵"></a>矩阵</h3><p>矩阵=向量+纬度</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># matrix</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建方法1</span></span><br><span class="line">x &lt;- matrix(<span class="number">1</span>:<span class="number">6</span>, nrow = <span class="number">3</span>, ncol = <span class="number">2</span>)</span><br><span class="line"><span class="comment"># 创建方法2</span></span><br><span class="line">y &lt;- <span class="number">1</span>:<span class="number">6</span></span><br><span class="line">dim(y) &lt;- c(<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 属性与纬度的查看</span></span><br><span class="line">dim(x)</span><br><span class="line">attributes(x)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 矩阵扩展</span></span><br><span class="line">y2 &lt;- matrix(<span class="number">1</span>:<span class="number">6</span>, nrow = <span class="number">2</span>, ncol = <span class="number">3</span>)</span><br><span class="line">rbind(y,y2)</span><br><span class="line">cbind(y,y2)</span><br><span class="line">y</span><br></pre></td></tr></table></figure><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><p>数组 = 矩阵+n纬度</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 数组</span></span><br><span class="line"></span><br><span class="line">x &lt;- array(<span class="number">1</span>:<span class="number">24</span>, dim = c(<span class="number">4</span>,<span class="number">6</span>))</span><br><span class="line">x</span><br><span class="line"></span><br><span class="line">x2 &lt;- array(<span class="number">1</span>:<span class="number">24</span>, dim = c(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>))</span><br><span class="line">x2</span><br></pre></td></tr></table></figure><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列表</span></span><br><span class="line"><span class="comment"># 可以添加不同类型的变量</span></span><br><span class="line">listvalue &lt;- list(<span class="string">"a"</span>, <span class="number">2</span>, <span class="number">10L</span>, <span class="number">1</span>+<span class="number">2i</span>, <span class="literal">TRUE</span>)</span><br><span class="line">listvalue</span><br><span class="line"></span><br><span class="line">listvalue2 &lt;- list(c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>), c(<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>))</span><br><span class="line">listvalue2</span><br><span class="line"></span><br><span class="line">x &lt;- matrix(<span class="number">1</span>:<span class="number">6</span>, nrow = <span class="number">2</span>, ncol = <span class="number">3</span>)</span><br><span class="line">dimnames(x) &lt;- list(c(<span class="string">"a"</span>,<span class="string">"b"</span>), c(<span class="string">"c"</span>,<span class="string">"d"</span>,<span class="string">"e"</span>))</span><br><span class="line">x</span><br></pre></td></tr></table></figure><h3 id="因子"><a href="#因子" class="headerlink" title="因子"></a>因子</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 因子</span></span><br><span class="line"><span class="comment"># 整数向量+标签</span></span><br><span class="line"></span><br><span class="line">x &lt;- factor(c(<span class="string">"female"</span>,<span class="string">"female"</span>,<span class="string">"male"</span>,<span class="string">"female"</span>,<span class="string">"male"</span>))</span><br><span class="line">x</span><br><span class="line">y &lt;- factor(c(<span class="string">"female"</span>,<span class="string">"female"</span>,<span class="string">"male"</span>,<span class="string">"female"</span>,<span class="string">"male"</span>),levels = c(<span class="string">"male"</span>, <span class="string">'female'</span>))</span><br><span class="line">y</span><br><span class="line"></span><br><span class="line">table(x)</span><br><span class="line">table(y)</span><br><span class="line"></span><br><span class="line">unclass(x)</span><br><span class="line">class(x)</span><br><span class="line">class(unclass(x))</span><br></pre></td></tr></table></figure><h3 id="缺失值"><a href="#缺失值" class="headerlink" title="缺失值"></a>缺失值</h3><p>NA</p><p>NaN</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 缺失值</span></span><br><span class="line"></span><br><span class="line">x &lt;- c(<span class="number">1</span>, <span class="literal">NA</span>, <span class="number">2</span>, <span class="literal">NA</span>, <span class="number">3</span>)</span><br><span class="line">is.na(x)</span><br><span class="line">is.nan(x)</span><br><span class="line"></span><br><span class="line">y &lt;- c(<span class="number">1</span>, <span class="literal">NaN</span>, <span class="number">2</span>, <span class="literal">NaN</span>, <span class="number">3</span>)</span><br><span class="line">is.na(y)</span><br><span class="line">is.nan(y)</span><br></pre></td></tr></table></figure><h3 id="数据框"><a href="#数据框" class="headerlink" title="数据框"></a>数据框</h3><p>存储表格数据，视为各元素长度相同的列表</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 数据框</span></span><br><span class="line"></span><br><span class="line">df &lt;- data.frame(id = c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>), name = c(<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>,<span class="string">"d"</span>), gender=c(<span class="literal">TRUE</span>, <span class="literal">TRUE</span>, <span class="literal">FALSE</span>, <span class="literal">FALSE</span>))</span><br><span class="line">df</span><br><span class="line"></span><br><span class="line">nrow(df)</span><br><span class="line">ncol(df)</span><br><span class="line"></span><br><span class="line">df2 &lt;- data.frame(id = c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>), name = c(<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>,<span class="string">"d"</span>), score=c(<span class="number">80</span>, <span class="number">90</span>, <span class="number">100</span>, <span class="number">60</span>))</span><br><span class="line">df2</span><br><span class="line">data.matrix(df2)</span><br></pre></td></tr></table></figure><h3 id="日期与时间"><a href="#日期与时间" class="headerlink" title="日期与时间"></a>日期与时间</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 日期与时间</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># character</span></span><br><span class="line">x &lt;- date()</span><br><span class="line">x</span><br><span class="line">class(x)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Date</span></span><br><span class="line">x2 &lt;- Sys.Date()</span><br><span class="line">x2</span><br><span class="line">class(x2)</span><br><span class="line"></span><br><span class="line">x3 &lt;- as.Date(<span class="string">"2018-11-23"</span>)</span><br><span class="line">x3</span><br><span class="line">class(x3)</span><br><span class="line"></span><br><span class="line">weekdays(x3)</span><br><span class="line">months(x3)</span><br><span class="line">quarters(x3)</span><br><span class="line"></span><br><span class="line">julian(x3)</span><br><span class="line"></span><br><span class="line">x4 &lt;- as.Date(<span class="string">"2018-04-25"</span>)</span><br><span class="line">x3-x4</span><br><span class="line">as.numeric(x3-x4)</span><br><span class="line"></span><br><span class="line"><span class="comment"># -----------------------</span></span><br><span class="line">x &lt;- Sys.time()</span><br><span class="line">x</span><br><span class="line">class(x)</span><br><span class="line">p &lt;- as.POSIXlt(x)</span><br><span class="line">p</span><br><span class="line">class(p)</span><br><span class="line"><span class="comment"># 获取p下的属性名称</span></span><br><span class="line">names(unclass(p))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取p下对应属性的值</span></span><br><span class="line">p$sec</span><br></pre></td></tr></table></figure><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><div class="article-img"><p><img src="..\uploads\1542977904779.png" alt="1542977904779"></p></div><h2 id="构建子集"><a href="#构建子集" class="headerlink" title="构建子集"></a>构建子集</h2><h3 id="获取预处理数据"><a href="#获取预处理数据" class="headerlink" title="获取预处理数据"></a>获取预处理数据</h3><ol><li>原始数据，经过预处理后的数据</li><li>[]：提取一个或多个类型相同的元素<br>[[]]：从列表或数据框中提取元素<br>$：按名字从列表或数据框中提取元素</li></ol><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 构建子集</span></span><br><span class="line"></span><br><span class="line">x &lt;- <span class="number">1</span>:<span class="number">10</span></span><br><span class="line">x[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取大于5的数据</span></span><br><span class="line">x[<span class="number">6</span>:<span class="number">10</span>]</span><br><span class="line">x&gt;<span class="number">5</span></span><br><span class="line">x[x&gt;<span class="number">5</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取大于5且小于7的数据</span></span><br><span class="line">x[x&gt;<span class="number">5</span> &amp; x&lt;<span class="number">7</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取大于5，与小于3的数据</span></span><br><span class="line">x[x&gt;<span class="number">5</span> | x&lt;<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">y &lt;- <span class="number">1</span>:<span class="number">4</span></span><br><span class="line">names(y) &lt;- c(<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>,<span class="string">"d"</span>)</span><br><span class="line">y</span><br><span class="line">y[<span class="number">1</span>]</span><br><span class="line">y[<span class="string">"a"</span>]</span><br></pre></td></tr></table></figure><h3 id="构建矩阵子集"><a href="#构建矩阵子集" class="headerlink" title="构建矩阵子集"></a>构建矩阵子集</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 构建矩阵子集</span></span><br><span class="line"></span><br><span class="line">x &lt;- matrix(<span class="number">1</span>:<span class="number">6</span>, nrow = <span class="number">3</span>, ncol = <span class="number">2</span>)</span><br><span class="line">x</span><br><span class="line"></span><br><span class="line">x[<span class="number">1</span>,<span class="number">2</span>]</span><br><span class="line">x[<span class="number">1</span>,]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取第1、3行的第2列</span></span><br><span class="line">x[c(<span class="number">1</span>,<span class="number">3</span>), <span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">class(x[<span class="number">1</span>,<span class="number">2</span>])</span><br><span class="line"><span class="comment"># 只显示行</span></span><br><span class="line">x[<span class="number">1</span>,<span class="number">2</span>]</span><br><span class="line"><span class="comment"># 将行和列都显示出来</span></span><br><span class="line">x[<span class="number">1</span>,<span class="number">2</span>, drop=<span class="literal">FALSE</span>]</span><br></pre></td></tr></table></figure><h3 id="构建数据框的子集"><a href="#构建数据框的子集" class="headerlink" title="构建数据框的子集"></a>构建数据框的子集</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 构建数据框的子集</span></span><br><span class="line">x &lt;- data.frame(v1=<span class="number">1</span>:<span class="number">5</span>, v2=<span class="number">6</span>:<span class="number">10</span>, v3=<span class="number">11</span>:<span class="number">15</span>)</span><br><span class="line">x</span><br><span class="line"></span><br><span class="line">x$v1</span><br><span class="line"></span><br><span class="line">x$v1[c(<span class="number">1</span>,<span class="number">3</span>)]</span><br><span class="line"></span><br><span class="line">x[,<span class="number">2</span>]</span><br><span class="line">x[,<span class="string">"v2"</span>]</span><br><span class="line">x[<span class="number">1</span>,<span class="string">"v2"</span>]</span><br><span class="line"></span><br><span class="line">x[(x$v1&lt;<span class="number">4</span> &amp; x$v2&gt;<span class="number">7</span>),]</span><br><span class="line"></span><br><span class="line">x$v1&lt;<span class="number">4</span></span><br><span class="line">which(x$v1&lt;<span class="number">4</span>)</span><br><span class="line">x[x$v1&lt;<span class="number">4</span>,]</span><br><span class="line">x[which(x$v1&lt;<span class="number">4</span>),]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法2</span></span><br><span class="line">subset(x, x$v1&gt;<span class="number">3</span>)</span><br></pre></td></tr></table></figure><h3 id="构建列表的子集"><a href="#构建列表的子集" class="headerlink" title="构建列表的子集"></a>构建列表的子集</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 构建矩列表子集</span></span><br><span class="line"></span><br><span class="line">x &lt;- list(id=<span class="number">1</span>:<span class="number">4</span>, height=<span class="number">170</span>, gender=<span class="string">"male"</span>)</span><br><span class="line"></span><br><span class="line">x[<span class="number">1</span>]</span><br><span class="line">x[<span class="string">"id"</span>]</span><br><span class="line"></span><br><span class="line">x[[<span class="number">1</span>]]</span><br><span class="line">x[[<span class="string">"id"</span>]]</span><br><span class="line">x$id</span><br><span class="line"></span><br><span class="line">x[c(<span class="number">1</span>,<span class="number">3</span>)]</span><br><span class="line"></span><br><span class="line">y &lt;- list(a = list(<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>), b=c(<span class="string">"Monday"</span>, <span class="string">"Tuesday"</span>))</span><br><span class="line">y</span><br><span class="line">y[[<span class="number">1</span>]]</span><br><span class="line"><span class="comment"># 获取第一个列表中含有列表的元素</span></span><br><span class="line">y[[<span class="number">1</span>]][<span class="number">2</span>]</span><br><span class="line"><span class="comment"># 获取第一个列表中含有列表的对应值</span></span><br><span class="line">y[[<span class="number">1</span>]][[<span class="number">2</span>]]</span><br><span class="line"></span><br><span class="line">y[[c(<span class="number">1</span>,<span class="number">3</span>)]]</span><br><span class="line">y[[c(<span class="number">2</span>,<span class="number">2</span>)]]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列表的不完全匹配</span></span><br><span class="line">z &lt;- list(abcdefg=<span class="number">1</span>:<span class="number">10</span>, abcd=<span class="number">1</span>:<span class="number">4</span>)</span><br><span class="line">z$abcdefg</span><br><span class="line">z$abcde</span><br><span class="line"></span><br><span class="line">z[[<span class="string">"abcde"</span>]]</span><br><span class="line">z[[<span class="string">"abcde"</span>, exact = <span class="literal">FALSE</span>]]</span><br></pre></td></tr></table></figure><h3 id="处理缺失值"><a href="#处理缺失值" class="headerlink" title="处理缺失值"></a>处理缺失值</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 处理缺失值</span></span><br><span class="line"></span><br><span class="line">x &lt;- c(<span class="number">1</span>, <span class="literal">NA</span>, <span class="number">2</span>, <span class="literal">NA</span>, <span class="number">3</span>)</span><br><span class="line">is.na(x)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取不是缺失值的值</span></span><br><span class="line">x[!is.na(x)]</span><br><span class="line"></span><br><span class="line">y &lt;- c(<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="literal">NA</span>, <span class="string">"c"</span>, <span class="literal">NA</span>)</span><br><span class="line">z &lt;- complete.cases(x,y)</span><br><span class="line">z</span><br><span class="line">x[z]</span><br><span class="line">y[z]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据集</span></span><br><span class="line"><span class="keyword">library</span>(datasets)</span><br><span class="line">head(airquality)</span><br><span class="line">g &lt;- complete.cases(airquality)</span><br><span class="line">g</span><br><span class="line"><span class="comment"># 获取没有缺失值的前1-10行数据</span></span><br><span class="line">airquality[g,][<span class="number">1</span>:<span class="number">10</span>,]</span><br></pre></td></tr></table></figure><h3 id="向量化操作"><a href="#向量化操作" class="headerlink" title="向量化操作"></a>向量化操作</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 向量化操作</span></span><br><span class="line"></span><br><span class="line">x &lt;- <span class="number">1</span>:<span class="number">5</span></span><br><span class="line">y &lt;- <span class="number">6</span>:<span class="number">10</span></span><br><span class="line"></span><br><span class="line">z &lt;- x+y</span><br><span class="line">z</span><br><span class="line">x*y</span><br><span class="line">y/x</span><br><span class="line"></span><br><span class="line">x &lt;- matrix(<span class="number">1</span>:<span class="number">4</span>, nrow=<span class="number">2</span>, ncol=<span class="number">2</span>)</span><br><span class="line">y &lt;- matrix(rep(<span class="number">2</span>,<span class="number">4</span>), nrow=<span class="number">2</span>, ncol=<span class="number">2</span>)</span><br><span class="line">x</span><br><span class="line">y</span><br><span class="line">x*y</span><br><span class="line">y/x</span><br><span class="line"></span><br><span class="line"><span class="comment"># 矩阵乘法</span></span><br><span class="line">x %*% y</span><br></pre></td></tr></table></figure><h3 id="小结-1"><a href="#小结-1" class="headerlink" title="小结"></a>小结</h3><div class="article-img"><p><img src="..\uploads\1542981534131.png" alt="1542981534131"></p></div><h2 id="R语言函数"><a href="#R语言函数" class="headerlink" title="R语言函数"></a>R语言函数</h2><h3 id="lapply"><a href="#lapply" class="headerlink" title="lapply"></a>lapply</h3><p>lapply<br>-可以循环处理列表中的每一个元素<br>-lapply（参数）：lapply（列表，函数/函数名，其他参数）<br>-总是返回一个列表<br>-sapply：简化结果<br>·结果列表元素长度均为1，返回向量<br>·结果列表元素长度相同且大于1，返回矩阵</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># lapply函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取函数参数值</span></span><br><span class="line">str(lapply)</span><br><span class="line"></span><br><span class="line">x &lt;- list(a=<span class="number">1</span>:<span class="number">10</span>, b=c(<span class="number">11</span>,<span class="number">21</span>,<span class="number">31</span>,<span class="number">41</span>,<span class="number">51</span>))</span><br><span class="line"><span class="comment"># 求列表中的平均值</span></span><br><span class="line">lapply(x, mean)</span><br><span class="line"></span><br><span class="line">x &lt;- <span class="number">1</span>:<span class="number">4</span></span><br><span class="line">lapply(x,runif)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 依次循环获取</span></span><br><span class="line">x &lt;- list(a = matrix(<span class="number">1</span>:<span class="number">6</span>, <span class="number">2</span>,<span class="number">3</span>), b = matrix(<span class="number">4</span>:<span class="number">7</span>,<span class="number">2</span>,<span class="number">2</span>))</span><br><span class="line">lapply(x, <span class="keyword">function</span>(m) m[<span class="number">1</span>,])</span><br><span class="line"></span><br><span class="line">x &lt;- list(a=<span class="number">1</span>:<span class="number">10</span>, b=c(<span class="number">11</span>,<span class="number">21</span>,<span class="number">31</span>,<span class="number">41</span>,<span class="number">51</span>))</span><br><span class="line"><span class="comment"># 求列表中的平均值</span></span><br><span class="line">lapply(x, mean)</span><br><span class="line"><span class="comment"># 简化理解</span></span><br><span class="line">sapply(x, mean)</span><br></pre></td></tr></table></figure><h3 id="apply"><a href="#apply" class="headerlink" title="apply"></a>apply</h3><p>-沿着数组的某一维度处理数据<br>·例如：将函数用于矩阵的行或列<br>·虽然与for/while循环的效率相似，但是只用一句话就可以完成<br>-apply（参数）：apply（数组，维度，函数/函数名）</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># apply函数</span></span><br><span class="line"></span><br><span class="line">x &lt;- matrix(<span class="number">1</span>:<span class="number">16</span>, <span class="number">4</span>, <span class="number">4</span>)</span><br><span class="line">x</span><br><span class="line"><span class="comment"># 行</span></span><br><span class="line">apply(x, <span class="number">1</span>, mean)</span><br><span class="line">rowMeans(x)</span><br><span class="line">apply(x, <span class="number">1</span>, sum)</span><br><span class="line">rowSums(x)</span><br><span class="line"><span class="comment"># 列</span></span><br><span class="line">apply(x, <span class="number">2</span>, mean)</span><br><span class="line">colMeans(x)</span><br><span class="line">apply(x, <span class="number">2</span>, sum)</span><br><span class="line">colSums(x)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">x&lt;-matrix(rnorm(<span class="number">100</span>),<span class="number">10</span>,<span class="number">10</span>)</span><br><span class="line">x&lt;-matrix(<span class="number">1</span>:<span class="number">8</span>,<span class="number">2</span>,<span class="number">4</span>)</span><br><span class="line">apply(x,<span class="number">1</span>,quantile,probs=c(<span class="number">0.25</span>,<span class="number">0.75</span>))</span><br><span class="line"></span><br><span class="line">x&lt;-array(rnorm(<span class="number">2</span>*<span class="number">3</span>*<span class="number">4</span>), c(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>))</span><br><span class="line">apply(x,c(<span class="number">1</span>,<span class="number">2</span>),mean)</span><br><span class="line">apply(x,c(<span class="number">1</span>,<span class="number">3</span>),mean)</span><br><span class="line">apply(x,c(<span class="number">2</span>,<span class="number">3</span>),mean)</span><br></pre></td></tr></table></figure><h3 id="mapply"><a href="#mapply" class="headerlink" title="mapply"></a>mapply</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mapply</span></span><br><span class="line"></span><br><span class="line">list(rep(<span class="number">1</span>,<span class="number">4</span>),rep(<span class="number">2</span>,<span class="number">3</span>),rep(<span class="number">3</span>,<span class="number">2</span>),rep(<span class="number">4</span>,<span class="number">1</span>))</span><br><span class="line">mapply(rep, <span class="number">1</span>:<span class="number">4</span>, <span class="number">4</span>:<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">s &lt;- <span class="keyword">function</span>(n ,mean, std)&#123;</span><br><span class="line">  rnorm(n ,mean, std)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">s(<span class="number">4</span>, <span class="number">0</span> ,<span class="number">1</span>)</span><br><span class="line">mapply(s, <span class="number">1</span>:<span class="number">5</span>, <span class="number">5</span>:<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">list(s(<span class="number">1</span>,<span class="number">5</span>,<span class="number">2</span>), s(<span class="number">2</span>,<span class="number">4</span>,<span class="number">2</span>), s(<span class="number">3</span>,<span class="number">3</span>,<span class="number">2</span>), s(<span class="number">4</span>,<span class="number">2</span>,<span class="number">2</span>), s(<span class="number">5</span>,<span class="number">1</span>,<span class="number">2</span>))</span><br></pre></td></tr></table></figure><h3 id="tapply"><a href="#tapply" class="headerlink" title="tapply"></a>tapply</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tapply</span></span><br><span class="line"></span><br><span class="line">x&lt;-c(rnorm(<span class="number">5</span>),runif(<span class="number">5</span>),rnorm(<span class="number">5</span>,<span class="number">1</span>))</span><br><span class="line">f&lt;-gl(<span class="number">3</span>,<span class="number">5</span>)</span><br><span class="line">tapply(x,f,mean)</span><br><span class="line">tapply(x,f,mean,simplify=<span class="literal">FALSE</span>)</span><br></pre></td></tr></table></figure><h3 id="split"><a href="#split" class="headerlink" title="split"></a>split</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><div class="article-img"><p><img src="..\uploads\1543022766048.png" alt="1543022766048"></p></div><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>视频：<a href="https://www.imooc.com/learn/546" target="_blank" rel="noopener">https://www.imooc.com/learn/546</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>实践路线（微服务预习）</title>
      <link href="./2018/11/16/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%A2%84%E4%B9%A0/"/>
      <url>./2018/11/16/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%A2%84%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="实践路线（github）"><a href="#实践路线（github）" class="headerlink" title="实践路线（github）"></a>实践路线（github）</h2><p>github管理项目，呈现一个项目学习路线的面貌。打造个人品牌</p><ul><li><p>[x] 【宿舍】使用SpringBoot快速构建RESTful API应用</p></li><li><p>[ ] 【公司】业务平台Spring改为SpringBoot项目</p></li><li><p>[ ] 【公司】SpringBoot的单元测试</p></li><li><p>[x] 【宿舍】SpringBoot的热部署等配置</p></li><li><p>[ ] 【宿舍】SpringCloud的初体验</p></li><li><p>[ ] 【公司】建立activeMQ，并与redis做结合</p></li><li><p>[ ] 【公司】将SpringBoot项目拆分为微服务</p></li><li><p>[ ] 【宿舍】实现将微服务注册到EurkaServer上</p></li><li><p>[ ] 【宿舍】SpringBoot容错处理搭建Hystrix</p></li><li><p>[ ] 【宿舍】使用Ribbin实现客户端负载均衡</p></li><li><p>[ ] 【宿舍】实现Hystrix Dashboard可视化监控数据</p></li><li><p>[ ] 【公司】Elasticsearch日志存储系统搭建</p></li><li><p>[ ] 【公司】Logstash日志收集系统搭建</p></li><li><p>[ ] 【公司】Kiaabna日志查询系统搭建</p></li><li><p>[ ] 【宿舍】ELK日志中心搭建</p></li><li><p>[ ] 【宿舍】自主搭建系统监控中心</p></li><li><p>[ ] 【宿舍】Dubbo的初体验</p></li><li><p>[ ] 【宿舍】jenkins的持续集成搭建</p></li><li><p>[ ] 【宿舍】Docker镜像下载与构建</p></li><li><p>[ ] 【宿舍】使用Docker Registry打造私有镜像仓库</p></li><li><p>[ ] 【宿舍】使用Spring Cloud Bus实现配置的自动刷新</p></li></ul><h3 id="方式"><a href="#方式" class="headerlink" title="方式"></a>方式</h3><ol><li>3天制实现以上功能的每一个点</li><li>第一天，学习理论知识，并找如何搭建（前提：在公司也需要储备学习资源）</li><li>第二天，实践为主，完成以上的搭建任务（前提：在公司查看其他人怎么实现）</li><li>第三天，完善实践，标注学习日期，课本回顾（前提：完成实践内容）</li></ol><h2 id="传统单体架构及其面临的挑战"><a href="#传统单体架构及其面临的挑战" class="headerlink" title="传统单体架构及其面临的挑战"></a><strong>传统单体架构及其面临的挑战</strong></h2><h3 id="传统单体架构分析"><a href="#传统单体架构分析" class="headerlink" title="传统单体架构分析"></a>传统单体架构分析</h3><p>​    一个典型的单体应用就是将所有的业务场景的表示层、业务逻辑层和数据访问层放在一个工程中，最终经过编译、打包，部署在一台服务器上。例如典型的J2EE工程，它是将表示层的JSP、业务逻辑层的Service、Controller和数据访问层的Dao，打成war包，部署在Tomcat、Jetty或者其他Servlet容器中运行。</p><p>​    在一个小型应用的初始阶段，访问量较小，应用只需要一台服务器就能够部署所有的资源，例如将应用程序、数据库、文件资源等部署在同一台服务器上。最典型的就是LAMP系统，即服务器采用Linux系统，开发应用程序的语言为PHP，部署在Apache服务器上，采用MySQL数据库。在应用程序的初始阶段，采用这种架构的性价比是非常高的，开发速度快，开发成本低，只需要一台廉价的服务器。</p><h3 id="单体架构的优势"><a href="#单体架构的优势" class="headerlink" title="单体架构的优势"></a>单体架构的优势</h3><ol><li>开发特别快</li><li>开发初期，成本低，性价比高</li><li>根据MVC等标准风格，功能层次拆分清楚 </li><li>部署简单，直接一个war包就能解决</li><li>技术单一，项目不需要复杂的技术栈，往往一套就可以开发完</li></ol><h3 id="单体架构局限性与面临的挑战"><a href="#单体架构局限性与面临的挑战" class="headerlink" title="单体架构局限性与面临的挑战"></a>单体架构局限性与面临的挑战</h3><ol><li><p>复杂性</p><p>​    整个项目包含的模块非常多，模块的边界模糊，依赖关系不清晰，代码质量参差不齐……整个项目非常复杂。每次修改代码都心惊胆战，甚至添加一个简单的功能，或者修改一个BUG都会造成隐含的缺陷。</p></li><li><p>开发效率</p><p>​    单体式架构下的组织通常来说技术选型非常单一，团队技术能力相对单薄，团队的吸引力一般。</p><p>​    整个系统一个团队。如果系统变得庞大，成员就需要学习大量的代码和领域知识，团队内的沟通和协作也变得低效。</p></li><li><p>稳定性</p><p>​    某个功能模块出现bug，或者某个库出现问题，都可能导致整个进程宕机，影响整体的应用。</p></li><li><p>部署与运维成本</p><p>​    传统的单体架构，一长串的本地接口或者方法调用，冗长而臃肿，往往是一个人负责整个的开发和维护。随着业务的发展和需求的变化，本地代码的不断迭代和变更，会导致只有原来的开发者才能理解接口的逻辑顺序，调用关系和功能需求，一旦开发者离职，那么功能模块运维就会非常困难。</p><p>​    测试、部署成本高，系统中任何功能的改变，都需要整个系统重新测试并部署。</p></li><li><p>新功能交付</p><p>​    直接本地API接口调用，不存在业务的拆分和相互调用，不需要依赖其他功能模块，这样子，开发只需要对自己开发的模块负责。这会导致代码重复率变高，功能变更或者新需求的加入会变得困难。</p></li><li><p>扩展能力</p><p>​    单体应用作为一个强耦合的整体，无法根据业务功能伸缩。只能再整体的系统进行扩展，而无法针对某一个功能模块按照需求扩展，比如计算密集型服务，IO密集型服务。</p><p>​    单体应用往往使用统一的技术平台或方案解决所有问题，团队的每个成员都必须使用相同的开发语言和架构，想要引入新的框架或技术平台非常困难。</p></li></ol><h3 id="如何解决上述问题？"><a href="#如何解决上述问题？" class="headerlink" title="如何解决上述问题？"></a>如何解决上述问题？</h3><ol><li><p>拆分</p><p>​    将应用进行水平和垂直的拆分，可以按照功能、技术群进行拆分（例如：商品中心、订单中心、审计）。</p></li><li><p>解耦</p><p>​    通过服务化和订阅、发布机制对应用调用关系解耦，支持服务的自动注册和发现</p></li><li><p>透明</p><p>​    通过服务注册中心管理服务的发布和消费、调用关系</p></li><li><p>独立</p><p>​    服务可以独立打包、发布、部署、启停、扩容和升级，核心服务独立集群部署</p></li><li><p>分层</p><p>​    梳理和抽取核心应用、公共应用，作为独立的服务下沉到核心和公共能力层，逐渐形成稳定的服务中心，使前端应用能更快速的响应多变的市场需求</p></li></ol><h3 id="结合某案例分析传统单体架构面临问题【案例】"><a href="#结合某案例分析传统单体架构面临问题【案例】" class="headerlink" title="结合某案例分析传统单体架构面临问题【案例】"></a>结合某案例分析传统单体架构面临问题【案例】</h3><h2 id="单体架构拆分"><a href="#单体架构拆分" class="headerlink" title="单体架构拆分"></a>单体架构拆分</h2><h3 id="服务水平拆分"><a href="#服务水平拆分" class="headerlink" title="服务水平拆分"></a>服务水平拆分</h3><p>​    按照数据的查询、存储、展示、采集的方向来进行拆分。</p><ol><li><p>数据模型能否彻底分开，决定了微服务的边界功能是否彻底划清。</p></li><li><p>实践过程中强烈推荐的原则是<strong>一个微服务对应一个库</strong></p></li><li><p>随着微服务规模壮大，可以针对性的做读写分离；如果单表数据庞大，可以分表来解决。</p></li></ol><h3 id="服务水平拆分面临问题"><a href="#服务水平拆分面临问题" class="headerlink" title="服务水平拆分面临问题"></a>服务水平拆分面临问题</h3><ol><li>对于无法修改的遗留系统，推荐采用绞杀者模式：在遗留系统外面增加新的功能做成微服务方式，而不是直接修改原有系统，逐步的实现对老系统替换</li><li>规范整个系统而非微服务的日志体系，采用标准的日志格式非常便于后续的日志聚合检索，便于整体的视角分析、监控、查看系统；</li><li>同时做两件不可控的事情（微服务改造、新技术的冲击）注定项目成功概率较低，千万避免自己重复发明轮子，尽量选择市面上成熟的开源技术框架进行支撑，比如Spring Boot、Spring Cloud、Netflix、WildFly Swarm、Docker、Kubernetes等框架；</li></ol><h3 id="服务垂直拆分"><a href="#服务垂直拆分" class="headerlink" title="服务垂直拆分"></a>服务垂直拆分</h3><p>​    按照展示层、应用层、领域层、基础设施层进行拆分。</p><h3 id="服务拆分之后各模块间通信与交互"><a href="#服务拆分之后各模块间通信与交互" class="headerlink" title="服务拆分之后各模块间通信与交互"></a>服务拆分之后各模块间通信与交互</h3><h3 id="服务的设计原则"><a href="#服务的设计原则" class="headerlink" title="服务的设计原则"></a>服务的设计原则</h3><ol><li><p>复用性</p></li><li><p>耦合性</p></li><li><p>服务编排</p></li><li><p>自治</p></li><li><p>无状态</p></li><li><p>自动发现</p></li></ol><h3 id="服务拆分后面临挑战"><a href="#服务拆分后面临挑战" class="headerlink" title="服务拆分后面临挑战"></a>服务拆分后面临挑战</h3><ol><li><p>调用性能</p><p>​    在服务化之前，业务通常都是本地API调用，本地方法调用性能损耗较小。服务化之后，服务提供者和消费者之间采用远程网络通信，增加了额外的性能损耗。</p></li><li><p>线性扩展</p><p>​    </p></li><li><p>服务监控</p></li><li><p>故障定位</p><p>​    在分布式环境下，如何快速有效的进行故障问题定界定位</p></li><li><p>日志搜索</p><p>​    在分布式环境下，如何方便的进行对服务调用日志做高效的检索</p></li><li><p>流控</p><p>​    服务化、分布式部署之后，有逻辑关联关系的多个数据库操作被打散成各自独立的服务实例上去，引入分布式环境下的事务一致性问题</p><ol><li>客户端需求和每个微服务暴露的细粒度API不匹配</li><li>微服务使用的RPC私有协议，不是浏览器友好或防火墙友好的</li><li>微服务难以重构。随着时间推移，我们可能想要更改系统划分成服务的方式。如果客户端与微服务直接通信，那么执行这类重构就非常困难了</li></ol></li></ol><h2 id="微服务架构综述"><a href="#微服务架构综述" class="headerlink" title="微服务架构综述"></a><strong>微服务架构综述</strong></h2><h3 id="什么是微服务？"><a href="#什么是微服务？" class="headerlink" title="什么是微服务？"></a>什么是微服务？</h3><p>​<br>​     简而言之，微服务架构风格的开发方法，是以开发一组小型服务的方式来开发一个独立的应用系统的。其中每个小型服务都运行在自己的进程中，并经常采用HTTP资源API轻量的机制来相互通信。</p><p>​    这些服务围绕业务功能进行构建，并能通过全自动的部署机制来进行独立部署。这些微服务可以使用不同的语言来编写，并且可以使用不同的数据存储技术。对这些微服务我们仅做最低限度的集中管理。    </p><p>​    每个微服务可独立运行在自己的进程里；</p><p>​    一系列独立运行的微服务共同构建起整个系统；</p><p>​    服务为独立的业务开发，一个微服务只关注某个特定的功能，如订单管理、用户管理等；</p><p>​    微服务之间通过一些轻量的通信机制进行通信，如REST API进行调用；</p><p>​    使用不同的语言与存储技术；</p><p>​    全自动的部署机制；    </p><h3 id="微服务架构"><a href="#微服务架构" class="headerlink" title="微服务架构"></a>微服务架构</h3><p>出处：<a href="https://www.jianshu.com/p/ae55e444c3a7" target="_blank" rel="noopener">微服务架构</a></p><div class="article-img"><p><img src="E:\blog\lmg\PinkSmallFan\project\source\uploads\9005929-6919de42324fe107.webp" alt="img"></p></div><p>网关集群：数据的聚合、实现对接入客户端的身份认证、防报文重放与防数据篡改、功能调用的业务鉴权、响应数据的脱敏、流量与并发控制等</p><p>业务集群：一般情况下移动端访问和浏览器访问的网关需要隔离，防止业务耦合</p><p>Local Cache：由于客户端访问业务可能需要调用多个服务聚合，所以本地缓存有效的降低了服务调用的频次，同时也提示了访问速度。本地缓存一般使用自动过期方式，业务场景中允许有一定的数据延时。</p><p>服务层：原子服务层，实现基础的增删改查功能，如果需要依赖其他服务需要在Service层主动调用</p><p>Remote Cache：访问DB前置一层分布式缓存，减少DB交互次数，提升系统的TPS</p><p>DAL：数据访问层，如果单表数据量过大则需要通过DAL层做数据的分库分表处理。</p><p>MQ：消息队列用来解耦服务之间的依赖，异步调用可以通过MQ的方式来执行</p><p>数据库主从：服务化过程中毕竟的阶段，用来提升系统的TPS</p><h3 id="微服务架构优点"><a href="#微服务架构优点" class="headerlink" title="微服务架构优点"></a>微服务架构优点</h3><p>​    易于开发和维护。一个微服务只关注一个特定的业务功能，所以它的业务清晰、代码量较少。开发和维护单个微服务相对比较简单，整个应用是由若干个微服务构建而成，所以整个应用也会维持在可控状态；</p><p>​    单个微服务启动较快。单个微服务代码量较少，所以启动会比较快；<br>​    修改容易部署。单体应用只要有修改，就要重新部署整个应用，微服务解决了这样的问题。一般来说，对某个微服务进行修改，只需要重新部署这个服务即可；</p><p>​    技术栈不受限。在微服务中，我们可以结合项目业务及团队的特点，合理地选择技术栈；</p><p><a href="https://www.jianshu.com/p/ae55e444c3a7" target="_blank" rel="noopener">出处：微服务优势</a></p><p><strong>1、降低复杂度</strong></p><p>将原来偶合在一起的复杂业务拆分为单个服务，规避了原本复杂度无止境的积累。每一个微服务专注于单一功能，并通过定义良好的接口清晰表述服务边界。每个服务开发者只专注服务本身，通过使用缓存、DAL等各种技术手段来提升系统的性能，而对于消费方来说完全透明。</p><p><strong>2、可独立部署</strong></p><p>由于微服务具备独立的运行进程，所以每个微服务可以独立部署。当业务迭代时只需要发布相关服务的迭代即可，降低了测试的工作量同时也降低了服务发布的风险。</p><p><strong>3、容错</strong></p><p>在微服务架构下，当某一组件发生故障时，故障会被隔离在单个服务中。 通过限流、熔断等方式降低错误导致的危害，保障核心业务正常运行。</p><p><strong>4、扩展</strong></p><p>单块架构应用也可以实现横向扩展，就是将整个应用完整的复制到不同的节点。当应用的不同组件在扩展需求上存在差异时，微服务架构便体现出其灵活性，因为每个服务可以根据实际需求独立进行扩展。</p><h3 id="微服务架构面临的挑战有哪些？"><a href="#微服务架构面临的挑战有哪些？" class="headerlink" title="微服务架构面临的挑战有哪些？"></a>微服务架构面临的挑战有哪些？</h3><p>​    <img src="E:\blog\lmg\PinkSmallFan\project\source\uploads\24015312f806d3b5ff5b6d45711f5df1" alt="img"></p><p>​    运维要求较高。更多的服务意味着更多的运维投入。在单体架构中只需要保证一个应用的正常运行；而在微服务中，需要保证几十甚至几百个服务的正常运行与协作，带来了巨大的挑战；</p><p>​    分布式固有的复杂性。使用微服务构建的是分布式系统。对于一个分布式系统，系统容错、网络延迟、分布式事务等都带来了巨大的挑战；<br>​    成本高。微服务之间通过接口进行通信。如果修改某个微服务的API，可能所有使用了该接口的微服务都需要做调整；</p><p>​    重复劳动。很多服务可能都会使用到相同的功能。而这个功能并没有达到分解为一个微服务的程度，这个时候，可能各个服务都会开发这一功能，导致代码重复。</p><h3 id="微服务生命周期与交付流程"><a href="#微服务生命周期与交付流程" class="headerlink" title="微服务生命周期与交付流程"></a><strong>微服务生命周期与交付流程</strong></h3><div class="article-img"><p><img src="E:\blog\lmg\PinkSmallFan\project\source\uploads\7c1bd0d58a7a1a356b905110bff67cd9" alt="img"></p></div><div class="article-img"><p><img src="E:\blog\lmg\PinkSmallFan\project\source\uploads\b5a87249002f4b0201f1f4ebf9ec71f1" alt="img"></p></div><h3 id="微服务管理规范"><a href="#微服务管理规范" class="headerlink" title="微服务管理规范"></a>微服务管理规范</h3><p>​    微服务带来的依赖管理问题，我们可以通过平台提供的API管理能力来解决。说到API管理，那首先就用提到服务契约。平台开发工具中提供了方便的服务发布能力，能够快速的将业务功能对外发布，生成服务的规格契约，当然也可以先设计服务契约，在根据契约来生成服务的默认实现代码。</p><p>​    这里强调一下，我们提到的服务契约是一个很重要的东西，他有点类似web service的wsdl描述，主要描述服务接口的输入输出规格标准和其他一些服务调用集成相关的规格内容。</p><h3 id="微服务框架对比"><a href="#微服务框架对比" class="headerlink" title="微服务框架对比"></a><strong>微服务框架对比</strong></h3><p>Spring Cloud与Dubbo</p><h4 id="性能对比"><a href="#性能对比" class="headerlink" title="性能对比"></a>性能对比</h4><p><a href="https://cloud.tencent.com/developer/article/1177574" target="_blank" rel="noopener">图片出处</a></p><div class="article-img"><p><img src="E:\blog\lmg\PinkSmallFan\project\source\uploads\6jmlhrz2to.jpeg" alt="img"></p></div><p>​    Spring Cloud 抛弃了 Dubbo 的 RPC 通信，采用的是基于 HTTP 的 REST 方式。严格来说，这两种方式各有优劣。虽然从一定程度上来说，基于 HTTP 的 REST 方式牺牲了服务调用的性能，但也避免了上面提到的原生 RPC 带来的问题。而且 REST 相比 RPC 更为灵活，服务提供方和调用方的依赖只依靠一纸契约，不存在代码级别的强依赖，这在强调快速演化的微服务环境下，显得更加合适。</p><h4 id="服务对比"><a href="#服务对比" class="headerlink" title="服务对比"></a>服务对比</h4><p><a href="https://cloud.tencent.com/developer/article/1177574" target="_blank" rel="noopener">图片出处</a></p><div class="article-img"><p><img src="E:\blog\lmg\PinkSmallFan\project\source\uploads\gy1tppfw1d.jpeg" alt="img"></p></div><p><strong>Dubbo 专注 RPC 和服务治理，Spring Cloud 则是一个微服务架构生态</strong></p><h4 id="组件对比"><a href="#组件对比" class="headerlink" title="组件对比"></a>组件对比</h4><p>出处：<a href="https://www.jianshu.com/p/ae55e444c3a7" target="_blank" rel="noopener">组件对比</a></p><p>Dubbo组件运行流程</p><div class="article-img"><p><img src="E:\blog\lmg\PinkSmallFan\project\source\uploads\9005929-c7db3aef000f1927-1540943395067.webp" alt="img"></p></div><p>gateWay:前置网关，具体业务操作，gateWay通过dubbo提供的负载均衡机制自动完成</p><p>Service：原子服务，只提供该业务相关的原子服务</p><p>Zookeeper：原子服务注册到zk上</p><p>Spring Could组件运行流程</p><div class="article-img"><p><img src="E:\blog\lmg\PinkSmallFan\project\source\uploads\9005929-5bf161de38a9a62d.webp" alt="img"></p></div><p>所有请求都统一通过 API 网关（Zuul）来访问内部服务。</p><p>网关接收到请求后，从注册中心（Eureka）获取可用服务。</p><p>由 Ribbon 进行均衡负载后，分发到后端的具体实例。</p><p>微服务之间通过 Feign 进行通信处理业务。</p><h4 id="服务依赖方式"><a href="#服务依赖方式" class="headerlink" title="服务依赖方式"></a>服务依赖方式</h4><p>出处：<a href="https://www.jianshu.com/p/ae55e444c3a7" target="_blank" rel="noopener">服务依赖方式</a></p><p>Dubbo：</p><p>​    因此需要为每个微服务定义了各自的interface接口，并通过持续集成发布到私有仓库中，调用方应用对微服务提供的抽象接口存在强依赖关系，开发、测试、集成环境都需要严格的管理版本依赖。</p><p>通过maven的install &amp; deploy命令把interface和Model层发布到仓库中，服务调用方只需要依赖interface和model层即可。在开发调试阶段只发布Snapshot版本。等到服务调试完成再发布Release版本，通过版本号来区分每次迭代的版本。通过xml配置方式即可方面接入dubbo，对程序无入侵。</p><div class="article-img"><p><img src="E:\blog\lmg\PinkSmallFan\project\source\uploads\9005929-e1cd60672c7a3c21.webp" alt="img"></p></div><p>Spring Cloud：</p><p>​    服务提供方和服务消费方通过json方式交互，因此只需要定义好相关json字段即可，消费方和提供方无接口依赖。通过注解方式来实现服务配置，对于程序有一定入侵。</p><div class="article-img"><p><img src="E:\blog\lmg\PinkSmallFan\project\source\uploads\9005929-e798a5a86e2da786.webp" alt="img"></p></div><p>对比：</p><p>​    Dubbo服务依赖略重，需要有完善的版本管理机制，但是程序入侵少。而Spring Cloud通过Json交互，省略了版本管理的问题，但是具体字段含义需要统一管理，自身Rest API方式交互，为跨平台调用奠定了基础。</p><h3 id="微服务架构及常用组件"><a href="#微服务架构及常用组件" class="headerlink" title="微服务架构及常用组件"></a><strong>微服务架构及常用组件</strong></h3><h2 id="微服务开发之Dubbo"><a href="#微服务开发之Dubbo" class="headerlink" title="微服务开发之Dubbo"></a><strong>微服务开发之Dubbo</strong></h2><h3 id="Dubbo介绍"><a href="#Dubbo介绍" class="headerlink" title="Dubbo介绍"></a>Dubbo介绍</h3><p>Dubbo 是一个分布式服务框架，是国内互联网公司开源做的比较不错的阿里开放的微服务化治理框架，致力于提供高性能和透明化的RPC远程服务调用方案，以及SOA服务治理方案。 其核心部分包含（官网）:</p><ul><li><p>远程通讯: 提供对多种基于长连接的NIO框架抽象封装，包括多种线程模型，序列化，以及“请求-响应”模式的信息交换方式；</p></li><li><p>集群容错: 提供基于接口方法的透明远程过程调用，包括多协议支持，以及软负载均衡，失败容错，地址路由，动态配置等集群支持；</p></li><li><p>自动发现: 基于注册中心目录服务，使服务消费方能动态的查找服务提供方，使地址透明，使服务提供方可以平滑增加或减少机器。</p></li></ul><h3 id="为什么选择Dubbo"><a href="#为什么选择Dubbo" class="headerlink" title="为什么选择Dubbo?"></a>为什么选择Dubbo?</h3><ul><li><p>Dubbo 支持 <strong>RPC 调用</strong>，服务之间的调用性能会很好。</p></li><li><p><strong>支持多种序列化协议</strong>，如 Hessian、HTTP、WebService。</p></li><li><p><strong>Dobbo Admin后台管理功能强大</strong>，提供了路由规则、动态配置、访问控制、权重调节、均衡负载等功能。</p></li><li><p>在国内影响力比较大，<strong>中文社区文档较为全面</strong>。</p></li><li><p>阿里最近<strong>重启维护</strong>。</p></li></ul><h3 id="Dubbo架构剖析"><a href="#Dubbo架构剖析" class="headerlink" title="Dubbo架构剖析"></a><strong>Dubbo架构剖析</strong></h3><p>出处：<a href="https://cloud.tencent.com/developer/article/1177574" target="_blank" rel="noopener">结构剖析</a></p><p>Dubbo 核心部件（如下图）:</p><p>Provider： 暴露服务的提供方，可以通过jar或者容器的方式启动服务</p><p>Consumer：调用远程服务的服务消费方。</p><p>Registry： 服务注册中心和发现中心。</p><p>Monitor： 统计服务和调用次数，调用时间监控中心。（dubbo的控制台页面中可以显示，目前只有一个简单版本）</p><p>Container：服务运行的容器。</p><div class="article-img"><p><img src="E:\blog\lmg\PinkSmallFan\project\source\uploads\nxfywqs12h.jpeg" alt="img"></p></div><p>流程详解：</p><ul><li>0 服务容器负责启动，加载，运行服务提供者（Standalone 容器）。</li><li>1 服务提供者在启动时，向注册中心注册自己提供的服务（Zookeeper/Redis）。</li><li>2 服务消费者在启动时，向注册中心订阅自己所需的服务。</li><li>3 注册中心返回服务提供者地址列表给消费者，如果有变更，注册中心将基于长连接推送变更数据给消费者。</li><li>4 服务消费者，从提供者地址列表中，基于软负载均衡算法，选一台提供者进行调用，如果调用失败，再选另一台调用。</li><li>5 服务消费者和提供者，在内存中累计调用次数和调用时间，定时每分钟发送一次统计数据到监控中心（根据数据可以动态调整权重）。</li></ul><h3 id="Dubbo优缺点分析"><a href="#Dubbo优缺点分析" class="headerlink" title="Dubbo优缺点分析"></a><strong>Dubbo优缺点分析</strong></h3><p>出处：<a href="https://cloud.tencent.com/developer/article/1177574" target="_blank" rel="noopener">Dubbo 优缺点分析</a></p><ul><li><p><strong>Registry 严重依赖第三方组件</strong>（zookeeper 或者 redis），当这些组件出现问题时，服务调用很快就会中断。</p></li><li><p>Dubbo 只支持 RPC 调用。使得服务提供方（抽象接口）与调用方在代码上产生了<strong>强依赖</strong>，服务提供者需要不断将包含抽象接口的 jar 包打包出来供消费者使用。一旦打包出现问题，就会导致服务调用出错，并且以后发布部署会成很大问题（太强的依赖关系）。</p></li><li><p>另外，以后要兼容 .NET Core 服务，<strong>Dubbo RPC 本身不支持跨语言</strong>（可以用跨语言 RPC 框架解决，比如 Thrift、gRPC（重复封装了），或者自己再包一层 REST 服务，提供跨平台的服务调用实现，但相对麻烦很多）</p></li><li><p>Dubbo <strong>只是实现了服务治理</strong>，其他微服务框架并未包含，如果需要使用，需要结合第三方框架实现（比如分布式配置用淘宝的 Diamond、服务跟踪用京东的 Hydra，但使用相对麻烦些），开发成本较高，且风险较大。</p></li><li><p>社区更新不及时（虽然最近在疯狂更新），但也难免阿里以后又不更新了，就尴尬了。</p></li><li><p>主要是国内公司使用，但阿里内部使用 HSF，相对于 Spring Cloud，企业应用会差一些。</p></li></ul><h3 id="Dubbo调用地址与负载均衡"><a href="#Dubbo调用地址与负载均衡" class="headerlink" title="Dubbo调用地址与负载均衡"></a><strong>Dubbo调用地址与负载均衡</strong></h3><p>出处：<a href="https://blog.csdn.net/li_xiao_dai/article/details/80077181" target="_blank" rel="noopener">Dubbo的URL参数</a></p><div class="article-bounded"><div class="article-table"><table><thead><tr><th>name</th><th>desc</th></tr></thead><tbody><tr><td>mock</td><td>配置此method在客户端调用时是直接调用，还是强制使用mock，还是调用失败后使用mock</td></tr><tr><td>mock</td><td>配置此method在客户端调用时是直接调用，还是强制使用mock，还是调用失败后使用mock</td></tr><tr><td>retries</td><td>调用Provider失败后的重试其他Provider的次数</td></tr><tr><td>forks</td><td>并发调用时Provider的个数</td></tr><tr><td>timeout</td><td>调用的Provider的超时时间，毫秒</td></tr><tr><td>merger</td><td>MergeableClusterInvoker调用时，指定的merge方式或者merge方法</td></tr><tr><td>reference.filter</td><td>用于Consumer端控制、指定过滤器名称</td></tr><tr><td>service.filter</td><td>用于Provider端控制、指定过滤器名称</td></tr><tr><td>accesslog</td><td>用于控制AccessLogFilter是否加载进FilterChain中</td></tr><tr><td>actives</td><td>用于控制ActiveLimitFilter是否加载进FilterChain中</td></tr><tr><td>cache</td><td>用于控制CacheFilter是否加载进FilterChain中</td></tr><tr><td>deprecated</td><td>用于控制DeprecatedFilter是否加载进FilterChain中</td></tr><tr><td>executes</td><td>用于控制ExecuteLimitFilter是否加载进FilterChain中，以及指定信号量初始值单个Provider最大可并发数</td></tr><tr><td>generic</td><td>用于控制GenericImplFilter是否加载进FilterChain中</td></tr><tr><td>token</td><td>用于控制TokenFilter是否加载进FilterChain中</td></tr><tr><td>tps</td><td>用于控制TpsLimitFilter是否加载进FilterChain中</td></tr><tr><td>validation</td><td>用于控制ValidationFilter是否加载进FilterChain中</td></tr><tr><td>invoker.listener</td><td>用于控制invoker过程中的监听器名称</td></tr><tr><td>exporter.listener</td><td>用于控制export过程中的监听器名称</td></tr><tr><td>async</td><td>Consumer端控制本地调用是否是异步调用</td></tr><tr><td>return</td><td>Consumer端控制本地调用是否不需要调用返回值</td></tr><tr><td>connections</td><td>用于控制Consumer在调用多个Provider时，自身的connneticon是否共享或最大个数</td></tr><tr><td>codec</td><td>指定编码器</td></tr><tr><td>heartbeat</td><td>指定是否发送心跳，以及心跳的发送间隔</td></tr><tr><td>exchanger</td><td>指定exchanger扩展点的实现类</td></tr><tr><td>heartbeat.timeout</td><td>心跳超时时间</td></tr><tr><td>sent</td><td>Consumer端发送时，Consumer的等待超时时间</td></tr><tr><td>codec</td><td>指定编码器</td></tr><tr><td>dispather</td><td>指定分发器</td></tr><tr><td>channel.handler</td><td>控制、指定handler处理器</td></tr><tr><td>threadname</td><td>Provider端指定的线程池扩展点中线程名称</td></tr><tr><td>threads</td><td>Provider端指定的线程池扩展点中核心线程数和最大线程数的数量</td></tr><tr><td>queues</td><td>Provider端指定的线程池扩展点中队列的大小，0为使用SynchronousQueue，小于0为无限</td></tr><tr><td>dump.directory</td><td>Provider端线程池线程越界时，jstack命令dump线程文件快照存储的路径</td></tr><tr><td>corethreads</td><td>Provider端指定的线程池扩展点中cache/limited线程池核心线程数</td></tr><tr><td>alive</td><td>Provider端指定的线程池扩展点中cache线程池线程空闲时间，毫秒</td></tr><tr><td>connect.queue.capacity</td><td>Provider端dispatcher为connection时，指定线程池队列容量</td></tr><tr><td>connect.queue.warning.size</td><td>Provider端dispatcher为connection时，指定线程池队列容量告警阈值</td></tr></tbody></table></div></div><p>出处：<a href="https://blog.csdn.net/jnqqls/article/details/46702103" target="_blank" rel="noopener">负载均衡策略</a></p><p>Dubbo提供了多种均衡策略，缺省为random随机调用。</p><div class="article-bounded"><div class="article-table"><table><thead><tr><th>均衡策略</th><th>描述</th></tr></thead><tbody><tr><td>Random LoadBalance</td><td>随机，按权重设置随机概率。<br>在一个截面上碰撞的概率高，但调用量越大分布越均匀，而且按概率使用权重后也比较均匀，有利于动态调整提供者权重。</td></tr><tr><td>RoundRobin LoadBalance</td><td>轮循，按公约后的权重设置轮循比率。<br>存在慢的提供者累积请求问题，比如：第二台机器很慢，但没挂，当请求调到第二台时就卡在那，久而久之，所有请求都卡在调到第二台上。</td></tr><tr><td>LeastActive LoadBalance</td><td>最少活跃调用数，相同活跃数的随机，活跃数指调用前后计数差。<br>使慢的提供者收到更少请求，因为越慢的提供者的调用前后计数差会越大。</td></tr><tr><td>ConsistentHash LoadBalance</td><td>一致性Hash，相同参数的请求总是发到同一提供者。<br>当某一台提供者挂时，原本发往该提供者的请求，基于虚拟节点，平摊到其它提供者，不会引起剧烈变动</td></tr></tbody></table></div></div><h3 id="Dubbo高可用机制"><a href="#Dubbo高可用机制" class="headerlink" title="Dubbo高可用机制"></a>Dubbo高可用机制</h3><h3 id="Dubbo管控台与监控"><a href="#Dubbo管控台与监控" class="headerlink" title="Dubbo管控台与监控"></a>Dubbo管控台与监控</h3><p>出处：<a href="https://blog.csdn.net/shangmingtao/article/details/78049479" target="_blank" rel="noopener">Dubbo管控台和监控中心</a></p><h4 id="管理控制台"><a href="#管理控制台" class="headerlink" title="管理控制台"></a>管理控制台</h4><p>Dubbo-Admin管理控制台是一个可以直观看到并管理生产者消费者的平台.Dubbo-Admin本身就是一个java项目.</p><p>下载地址: <a href="https://github.com/alibaba/dubbo" target="_blank" rel="noopener">https://github.com/alibaba/dubbo</a> 在dubbo-admin上用mvn package就可以了</p><p>打好包后我们需要将war包解压缩到tomcat webapps的ROOT目录下.并更改配置文件,启动tomcat</p><p>配置文件:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#zookeeper地址</span><br><span class="line">dubbo.registry.address=zookeeper://127.0.0.1:2181 </span><br><span class="line">#管理员密码 管理账号root</span><br><span class="line">dubbo.admin.root.password=root</span><br><span class="line">#访客密码</span><br><span class="line">dubbo.admin.guest.password=guest</span><br></pre></td></tr></table></figure><p>验证是否安装成功,访问<a href="http://localhost:8080/" target="_blank" rel="noopener">http://localhost:8080</a> 出现如下页面证明安装成功 </p><div class="article-img"><p><img src="E:\blog\lmg\PinkSmallFan\project\source\uploads\dubbo管理控制台.png" alt="dubbo管理控制台.png"></p></div><h4 id="Dubbo监控中心"><a href="#Dubbo监控中心" class="headerlink" title="Dubbo监控中心"></a>Dubbo监控中心</h4><p>Dubbo监控中心monitor主要是用来计数的,它所处的位置如下图,比如某个生产者被访问了多少次,当然官方提供的是一个简易的监控中心,我们也可以利用官方给出的api定制自己的监控中心.</p><div class="article-img"><p><img src="E:\blog\lmg\PinkSmallFan\project\source\uploads\nxfywqs12h.jpeg" alt="img"></p></div><h3 id="基于Dubbo的项目应用案例分析【案例】"><a href="#基于Dubbo的项目应用案例分析【案例】" class="headerlink" title="基于Dubbo的项目应用案例分析【案例】"></a>基于Dubbo的项目应用案例分析【案例】</h3><p>安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf dubbo-monitor-simple-2.5.3-assembly.tar.gz</span><br></pre></td></tr></table></figure><p>更改dubbo-monitor-simple-2.5.3-assembly/dubbo-monitor-simple-2.5.3/conf下的dubbo.properties</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">dubbo.container=log4j,spring,registry,jetty</span><br><span class="line">dubbo.application.name=simple-monitor</span><br><span class="line">dubbo.application.owner=</span><br><span class="line">#dubbo.registry.address=multicast://224.5.6.7:1234</span><br><span class="line">#zookeeper地址</span><br><span class="line">dubbo.registry.address=zookeeper://127.0.0.1:2181 </span><br><span class="line">#dubbo.registry.address=redis://127.0.0.1:6379</span><br><span class="line">#dubbo.registry.address=dubbo://127.0.0.1:9090</span><br><span class="line">dubbo.protocol.port=7070</span><br><span class="line">#注意这里,因为我们的管理控制台用tomcat启动,tomcat默认端口8080,所以这里我们用8090,可以看出官方给的简易监控中心使用jetty启动的.</span><br><span class="line">dubbo.jetty.port=8090 </span><br><span class="line">dubbo.jetty.directory=$&#123;user.home&#125;/monitor</span><br><span class="line">dubbo.charts.directory=$&#123;dubbo.jetty.directory&#125;/charts</span><br><span class="line">dubbo.statistics.directory=$&#123;user.home&#125;/monitor/statistics</span><br><span class="line">dubbo.log4j.file=logs/dubbo-monitor-simple.log</span><br><span class="line">dubbo.log4j.level=WARN</span><br></pre></td></tr></table></figure><p>接下来我们启动,进入dubbo-monitor-simple-2.5.3-assembly/dubbo-monitor-simple-2.5.3/bin目录,通过如下命令启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">start.sh #linux</span><br><span class="line">start.bat #windows</span><br></pre></td></tr></table></figure><p>访问:<a href="http://localhost:8090/" target="_blank" rel="noopener">http://localhost:8090</a> 如下页面启动成功: </p><div class="article-img"><p><img src="E:\blog\lmg\PinkSmallFan\project\source\uploads\监控中心.png" alt="监控中心"></p></div><h2 id="微服务之Spring-Cloud"><a href="#微服务之Spring-Cloud" class="headerlink" title="微服务之Spring Cloud"></a><strong>微服务之Spring Cloud</strong></h2><h3 id="Spring-Cloud介绍"><a href="#Spring-Cloud介绍" class="headerlink" title="Spring Cloud介绍"></a>Spring Cloud介绍</h3><p>​    基于 Spring boot</p><p>​    云服务、分布式框架集合</p><p>​    Spring Cloud，来源于 Spring Source ，具有 Spring 社区的强大背书外，还有 Netflix 强大的后盾与技术输出。Netflix 作为一家成功实践微服务架构的互联网公司，在几年前就把几乎整个微服务框架栈开源贡献给了社区，这些框架开源的整套微服务架构套件是 Spring Cloud 的核心。</p><h3 id="为什么选择Spring-Cloud？"><a href="#为什么选择Spring-Cloud？" class="headerlink" title="为什么选择Spring Cloud？"></a>为什么选择Spring Cloud？</h3><p>出处：<a href="https://cloud.tencent.com/developer/article/1177574" target="_blank" rel="noopener">Spring Cloud优缺点</a></p><ul><li><p>有强大的 Spring 社区、Netflix 等公司支持，并且<strong>开源社区贡献非常活跃</strong>。</p></li><li><p><strong>标准化</strong>的将微服务的成熟产品和框架结合一起，Spring Cloud 提供<strong>整套的微服务解决方案，开发成本较低，且风险较小</strong>。</p></li><li><p><strong>基于 Spring Boot</strong>，具有简单配置、快速开发、轻松部署、方便测试的特点。</p></li><li><p>支持 REST 服务调用，相比于 RPC，更加<strong>轻量化和灵活</strong>（服务之间只依赖一纸契约，不存在代码级别的强依赖），有利于<strong>跨语言服务的实现</strong>，以及<strong>服务的发布部署</strong>。另外，结合 Swagger，也使得<strong>服务的文档一体化</strong>。</p></li><li><p>提供了 Docker 及 Kubernetes 微服务编排支持。</p></li><li><p>国内外企业应用非常多，经受了大公司的应用考验（比如 Netfilx 公司），以及强大的开源社区支持。</p></li></ul><h3 id="Spring-Cloud架构剖析"><a href="#Spring-Cloud架构剖析" class="headerlink" title="Spring Cloud架构剖析"></a>Spring Cloud架构剖析</h3><p>出处：<a href="https://www.jianshu.com/p/ae55e444c3a7" target="_blank" rel="noopener">Spring Colud完整技术与组件架构</a></p><div class="article-img"><p><img src="E:\blog\lmg\PinkSmallFan\project\source\uploads\pe0rv90aoc.jpeg" alt="img"></p></div><div class="article-img"><p><img src="E:\blog\lmg\PinkSmallFan\project\source\uploads\0gc7v2gapy.jpeg" alt="img"></p></div><ul><li>常用组件：<ul><li>Eureka:　服务注册发现框架；</li><li>Zuul:　服务网关；</li><li>Karyon:　服务端框架；</li><li>Ribbon:　客户端框架；</li><li>Hystrix: 服务容错组件；</li><li>Archaius: 服务配置组件；</li><li>Servo: Metrics组件；</li><li>Blitz4j: 日志组件</li></ul></li><li>流程：<ul><li>请求统一通过 API 网关（Zuul）来访问内部服务。</li><li>网关接收到请求后，从注册中心（Eureka）获取可用服务。</li><li>由 Ribbon 进行均衡负载后，分发到后端具体实例。</li><li>微服务之间通过 Feign 进行通信处理业务。</li><li>Hystrix 负责处理服务超时熔断。</li><li>Turbine 监控服务间的调用和熔断相关指标。</li></ul></li></ul><h3 id="Spring-Cloud的工具框架"><a href="#Spring-Cloud的工具框架" class="headerlink" title="Spring Cloud的工具框架"></a>Spring Cloud的工具框架</h3><p>出处：<a href="https://cloud.tencent.com/developer/article/1177574" target="_blank" rel="noopener">工具框架</a></p><ul><li><strong>Spring Cloud Config 配置中心</strong>，利用 Git 集中管理程序的配置。</li><li>Spring Cloud Netflix 集成众多Netflix的开源软件。</li><li><strong>Spring Cloud Netflix Eureka 服务中心</strong>（类似于管家的概念，需要什么直接从这里取，就可以了），一个基于 REST 的服务，用于定位服务，以实现云端中间层服务发现和故障转移。</li><li><strong>Spring Cloud Netflix Hystrix 熔断器</strong>，容错管理工具，旨在通过熔断机制控制服务和第三方库的节点，从而对延迟和故障提供更强大的容错能力。</li><li><strong>Spring Cloud Netflix Zuul 网关</strong>，是在云平台上提供动态路由，监控，弹性，安全等边缘服务的框架。Web 网站后端所有请求的前门。</li><li>Spring Cloud Netflix Archaius 配置管理 API，包含一系列配置管理API，提供动态类型化属性、线程安全配置操作、轮询框架、回调机制等功能。</li><li><strong>Spring Cloud Netflix Ribbon 负载均衡</strong>。</li><li><strong>Spring Cloud Netflix Fegin REST客户端</strong>。</li><li><strong>Spring Cloud Bus 消息总线</strong>，利用分布式消息将服务和服务实例连接在一起，用于在一个集群中传播状态的变化。</li><li>Spring Cloud for Cloud Foundry 利用 Pivotal Cloudfoundry 集成你的应用程序。</li><li>Spring Cloud Cloud Foundry Service Broker 为建立管理云托管服务的服务代理提供了一个起点。</li><li><strong>Spring Cloud Cluster 集群工具</strong>，基于 Zookeeper, Redis, Hazelcast, Consul 实现的领导选举和平民状态模式的抽象和实现。</li><li>Spring Cloud Consul 基于 Hashicorp Consul 实现的服务发现和配置管理。</li><li><strong>Spring Cloud Security 安全控制</strong>，在 Zuul 代理中为 OAuth2 REST 客户端和认证头转发提供负载均衡。</li><li><strong>Spring Cloud Sleuth 分布式链路监控</strong>，SpringCloud 应用的分布式追踪系统，和 Zipkin，HTrace，ELK 兼容。</li><li>Spring Cloud Data Flow 一个云本地程序和操作模型，组成数据微服务在一个结构化的平台上。</li><li><strong>Spring Cloud Stream 消息组件</strong>，基于 Redis，Rabbit，Kafka 实现的消息微服务，简单声明模型用以在 Spring Cloud 应用中收发消息。</li><li>Spring Cloud Stream App Starters 基于 Spring Boot 为外部系统提供 Spring 的集成。</li><li>Spring Cloud Task 短生命周期的微服务，为 Spring Booot 应用简单声明添加功能和非功能特性。</li><li>Spring Cloud Task App Starters。</li><li>Spring Cloud Zookeeper 服务发现和配置管理基于 Apache Zookeeper。</li><li>Spring Cloud for Amazon Web Services 快速和亚马逊网络服务集成。</li><li>Spring Cloud Connectors 便于PaaS应用在各种平台上连接到后端像数据库和消息经纪服务。</li><li>Spring Cloud Starters （项目已经终止并且在 Angel.SR2 后的版本和其他项目合并）</li><li><strong>Spring Cloud CLI 命令行工具</strong>，插件用 Groovy 快速的创建 Spring Cloud 组件应用。</li></ul><h3 id="Spring-Cloud优缺点分析"><a href="#Spring-Cloud优缺点分析" class="headerlink" title="Spring Cloud优缺点分析"></a>Spring Cloud优缺点分析</h3><p>出处：<a href="https://cloud.tencent.com/developer/article/1177574" target="_blank" rel="noopener">Spring Cloud优缺点</a></p><ul><li><p>支持 REST 服务调用，可能因为<strong>接口定义过轻</strong>，导致定义文档与实际实现不一致导致服务集成时的问题（可以使用统一文档和版本管理解决，比如 Swagger）。</p></li><li><p>另外，<strong>REST 服务调用性能会比 RPC 低一些</strong>（但也不是强绑定）</p></li><li><p>Spring Cloud 整合了大量组件，<strong>相关文档比较复杂</strong>，需要针对性的进行阅读。</p></li></ul><h3 id="Spring-Cloud负载均衡"><a href="#Spring-Cloud负载均衡" class="headerlink" title="Spring Cloud负载均衡"></a>Spring Cloud负载均衡</h3><p>出处：<a href="https://www.jianshu.com/p/d815f0c3820d" target="_blank" rel="noopener">SppringCloud负载均衡实践</a></p><p>出处：<a href="https://blog.csdn.net/u012702547/article/details/77978845" target="_blank" rel="noopener">SpringCloud负载均衡策略</a></p><div class="article-bounded"><div class="article-table"><table><thead><tr><th>策略接口</th><th>描述</th></tr></thead><tbody><tr><td>IRule</td><td>这是所有负载均衡策略的父接口，里边的核心方法就是choose方法，用来选择一个服务实例。</td></tr><tr><td>AbstractLoad<br>BalancerRule</td><td>AbstractLoadBalancerRule是一个抽象类，里边主要定义了一个ILoadBalancer，就是我们上文所说的负载均衡器，负载均衡器的功能我们在上文已经说的很详细了，这里就不再赘述，这里定义它的目的主要是辅助负责均衡策略选取合适的服务端实例。</td></tr><tr><td>RandomRule</td><td>看名字就知道，这种负载均衡策略就是随机选择一个服务实例，看源码我们知道，在RandomRule的无参构造方法中初始化了一个Random对象，然后在它重写的choose方法又调用了choose(ILoadBalancer lb, Object key)这个重载的choose方法，在这个重载的choose方法中，每次利用random对象生成一个不大于服务实例总数的随机数，并将该数作为下标所以获取一个服务实例。</td></tr><tr><td>RoundRobinRule</td><td>RoundRobinRule这种负载均衡策略叫做线性负载均衡策略，也就是我们在上文所说的BaseLoadBalancer负载均衡器中默认采用的负载均衡策略。这个类的choose(ILoadBalancer lb, Object key)函数整体逻辑是这样的：开启一个计数器count，在while循环中遍历服务清单，获取清单之前先通过incrementAndGetModulo方法获取一个下标，这个下标是一个不断自增长的数先加1然后和服务清单总数取模之后获取到的（所以这个下标从来不会越界），拿着下标再去服务清单列表中取服务，每次循环计数器都会加1，如果连续10次都没有取到服务，则会报一个警告No available alive servers after 10 tries from load balancer: XXXX。</td></tr><tr><td>RetryRule</td><td>看名字就知道这种负载均衡策略带有重试功能。首先RetryRule中又定义了一个subRule，它的实现类是RoundRobinRule，然后在RetryRule的choose(ILoadBalancer lb, Object key)方法中，每次还是采用RoundRobinRule中的choose规则来选择一个服务实例，如果选到的实例正常就返回，如果选择的服务实例为null或者已经失效，则在失效时间deadline之前不断的进行重试（重试时获取服务的策略还是RoundRobinRule中定义的策略），如果超过了deadline还是没取到则会返回一个null。</td></tr><tr><td>WeightedResponse<br>TimeRule</td><td>WeightedResponseTimeRule是RoundRobinRule的一个子类，在WeightedResponseTimeRule中对RoundRobinRule的功能进行了扩展，WeightedResponseTimeRule中会根据每一个实例的运行情况来给计算出该实例的一个权重，然后在挑选实例的时候则根据权重进行挑选，这样能够实现更优的实例调用。WeightedResponseTimeRule中有一个名叫DynamicServerWeightTask的定时任务，默认情况下每隔30秒会计算一次各个服务实例的权重，权重的计算规则也很简单，如果一个服务的平均响应时间越短则权重越大，那么该服务实例被选中执行任务的概率也就越大。</td></tr><tr><td>ClientConfigEnabled<br>RoundRobinRule</td><td>ClientConfigEnabledRoundRobinRule选择策略的实现很简单，内部定义了RoundRobinRule，choose方法还是采用了RoundRobinRule的choose方法，所以它的选择策略和RoundRobinRule的选择策略一致，不赘述。</td></tr><tr><td>BestAvailableRule</td><td>BestAvailableRule继承自ClientConfigEnabledRoundRobinRule，它在ClientConfigEnabledRoundRobinRule的基础上主要增加了根据loadBalancerStats中保存的服务实例的状态信息来过滤掉失效的服务实例的功能，然后顺便找出并发请求最小的服务实例来使用。然而loadBalancerStats有可能为null，如果loadBalancerStats为null，则BestAvailableRule将采用它的父类即ClientConfigEnabledRoundRobinRule的服务选取策略（线性轮询）。</td></tr><tr><td>PredicateBasedRule</td><td>PredicateBasedRule是ClientConfigEnabledRoundRobinRule的一个子类，它先通过内部定义的一个过滤器过滤出一部分服务实例清单，然后再采用线性轮询的方式从过滤出来的结果中选取一个服务实例。</td></tr><tr><td>ZoneAvoidanceRule</td><td>ZoneAvoidanceRule是PredicateBasedRule的一个实现类，只不过这里多一个过滤条件，ZoneAvoidanceRule中的过滤条件是以ZoneAvoidancePredicate为主过滤条件和以AvailabilityPredicate为次过滤条件组成的一个叫做CompositePredicate的组合过滤条件，过滤成功之后，继续采用线性轮询的方式从过滤结果中选择一个出来。</td></tr></tbody></table></div></div><h3 id="Spring-Cloud管理与监控"><a href="#Spring-Cloud管理与监控" class="headerlink" title="Spring Cloud管理与监控"></a>Spring Cloud管理与监控</h3><p>出处：<a href="https://blog.csdn.net/Axela30W/article/details/81117788" target="_blank" rel="noopener">SpringCloud管理与监控的实践</a></p><h2 id="微服务开发之Spring-Boot"><a href="#微服务开发之Spring-Boot" class="headerlink" title="微服务开发之Spring Boot"></a><strong>微服务开发之Spring Boot</strong></h2><h3 id="什么是SpringBoot？"><a href="#什么是SpringBoot？" class="headerlink" title="什么是SpringBoot？"></a>什么是SpringBoot？</h3><p>出处：<a href="https://jimmysong.io/posts/spring-boot-quick-start-guide/" target="_blank" rel="noopener">SpringBoot概念</a></p><p>Spring boot的技术栈</p><div class="article-img"><p><img src="E:\blog\lmg\PinkSmallFan\project\source\uploads/spring-stack.png" alt="spring-stack"> </p></div><div class="article-img"><p><img src="E:\blog\lmg\PinkSmallFan\project\source\uploads/spring-boot-note-spots.png" alt="spring-boot-note-spots"></p></div><h3 id="SpringBoot适应场景"><a href="#SpringBoot适应场景" class="headerlink" title="SpringBoot适应场景"></a><strong>SpringBoot适应场景</strong></h3><p>出处：<a href="https://juejin.im/entry/598951d76fb9a03c350a58d9" target="_blank" rel="noopener">SpringBoot应用场景</a></p><div class="article-img"><p><img src="E:\blog\lmg\PinkSmallFan\project\source\uploads\SpringBoot应用场景.jpg" alt="SpringBoot应用场景"></p></div><h3 id="SpringBoot优势"><a href="#SpringBoot优势" class="headerlink" title="SpringBoot优势"></a>SpringBoot优势</h3><p>出处：<a href="https://blog.csdn.net/fly_zhyu/article/details/76407830" target="_blank" rel="noopener">Spring boot浅谈</a></p><ul><li><p>Spring boot能够使编码变精简、配置变简单、部署变快捷、监控变容易</p></li><li><p>Spring boot默认快速启动一个web容器，不需要外置web容器，将注意力集中在编码上，而不是配置容器等方面上。</p></li><li><p>Spring boot是Spring框架扬长避短的杰作，简化了spring冗余的配置，从xml配置到java Config配置，从setBean的方式配置到自动注解，从多个properties+xml到只要一个yml就完成了配置。</p></li><li><p>Spring boot 默认配置；额很多框架的使用方式，整合了所有框架</p></li><li><p>Spring boot能够对主流开发的框架，进行无配置集成，提高了开发、部署的效率，不用再花额外的时间，研究不同框架的整合与集成上</p></li><li><p>Spring boot支持的配置文件application.yml，减少了传统的properties的链式麻烦</p></li><li><p>Spring boot提供了热部署，实时刷新后台服务，能将服务改动后的效果，呈现出来</p></li><li><p>Spring boot一键启动，只需要一个jar、war，甚至一段代码就可以了，不需要预部署应用服务器</p></li><li><p>configprops：属性配置、dump：线程工作状态、env/name：环境变量、metrics/name：JVM性能指标、mapping：RESTful path与服务类的映射关系</p></li></ul><h3 id="SpringBoot的包版本管理"><a href="#SpringBoot的包版本管理" class="headerlink" title="SpringBoot的包版本管理"></a>SpringBoot的包版本管理</h3><p>pom??</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">spring-boot-dependencies</span><br><span class="line">spring-boot-parent</span><br><span class="line">spring-boot-tools</span><br><span class="line">spring-boot</span><br><span class="line">spring-boot-test</span><br><span class="line">spring-boot-autoconfigure</span><br><span class="line">spring-boot-test-autoconfigure</span><br><span class="line">spring-boot-actuator</span><br><span class="line">spring-boot-devtools</span><br><span class="line">spring-boot-docs</span><br><span class="line">spring-boot-starters</span><br><span class="line">spring-boot-actuator-docs</span><br><span class="line">spring-boot-cli</span><br></pre></td></tr></table></figure><p>出处：<a href="https://www.jianshu.com/p/346cac67bfcc" target="_blank" rel="noopener">SpringBoot Module</a></p><h4 id="spring-boot"><a href="#spring-boot" class="headerlink" title="spring-boot"></a>spring-boot</h4><p>SpringBoot核心工程。</p><h4 id="spring-boot-starters"><a href="#spring-boot-starters" class="headerlink" title="spring-boot-starters"></a>spring-boot-starters</h4><p>是SpringBoot的启动服务工程。</p><h4 id="spring-boot-autoconfigure"><a href="#spring-boot-autoconfigure" class="headerlink" title="spring-boot-autoconfigure"></a>spring-boot-autoconfigure</h4><p>是SpringBoot实现自动配置的核心工程。</p><h4 id="spring-boot-actuator"><a href="#spring-boot-actuator" class="headerlink" title="spring-boot-actuator"></a>spring-boot-actuator</h4><p>提供SpringBoot应用的外围支撑性功能。 比如：</p><ul><li>Endpoints，SpringBoot应用状态监控管理</li><li>HealthIndicator，SpringBoot应用健康指示表</li><li>提供metrics支持</li><li>提供远程shell支持</li></ul><h4 id="spring-boot-tools"><a href="#spring-boot-tools" class="headerlink" title="spring-boot-tools"></a>spring-boot-tools</h4><p>提供了SpringBoot开发者的常用工具集。诸如，spring-boot-gradle-plugin，spring-boot-maven-plugin就是这个工程里面的。</p><h4 id="spring-boot-cli"><a href="#spring-boot-cli" class="headerlink" title="spring-boot-cli"></a>spring-boot-cli</h4><p>是Spring Boot命令行交互工具，可用于使用Spring进行快速原型搭建。你可以用它直接运行Groovy脚本。如果你不喜欢Maven或Gradle，Spring提供了CLI（Command Line Interface）来开发运行Spring应用程序。你可以使用它来运行Groovy脚本，甚至编写自定义命令。</p><h3 id="SpringBoot自动配置"><a href="#SpringBoot自动配置" class="headerlink" title="SpringBoot自动配置"></a><strong>SpringBoot自动配置</strong></h3><p>出处：<a href="https://www.bysocket.com/?p=2001" target="_blank" rel="noopener">SpringBoot自动部署</a> 、<a href="http://ifeve.com/spring-boot-autoconfiguration/" target="_blank" rel="noopener">SpringBoot官方文档</a></p><p>​    Spring Boot <code>spring-boot-autoconfigure</code> 依赖做了很多默认的配置项，即应用默认值。这种模式叫做 “自动配置”。Spring Boot 自动配置会根据添加的依赖，自动加载依赖相关的配置属性并启动依赖。例如默认用的内嵌式容器是 Tomcat ，端口默认设置为 8080。</p><p>​    为什么需要自动配置？顾名思义，自动配置的意义是利用这种模式代替了配置 XML 繁琐模式。以前使用 Spring MVC ，需要进行配置组件扫描、调度器、视图解析器等，使用 Spring Boot 自动配置后，只需要添加 MVC 组件即可自动配置所需要的 Bean。所有自动配置的实现都在 <code>spring-boot-autoconfigure</code> 依赖中，包括 Spring MVC 、Data 和其它框架的自动配置。</p><p>​    Spring Boot的自动配置会尝试根据你添加进来的jar依赖来自动配置你的Spring应用。例如，如果HSQLDB在你的classpath路径上，你没有手动配置任何数据库连接实体类，我们还会自动配置内存数据库。</p><p>你可以有选择的实现自动配置，可以向 @Configuration上添加@EnableAutoConfiguration或者@SpringBootApplication注解来实现。</p><p>逐步覆盖自动配置</p><p>​    自动配置是非入侵式的，任何时候你都可以使用你自定义的配置来覆盖自动配置的特定部分。例如，如果你要添加自己的DataSource bean，默认的内嵌数据库会无效。</p><p>​    如果你需要查找当前应用的自动配置，你可以启动应用时加上–debug开关。它会为核心日志记录器开启debug日志记录，并且会打印自动配置日志信息到控制台。</p><p><strong>禁用特定自动配置</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableAutoConfiguration</span>的排除属性来禁用它们。</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.jdbc.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.*;</span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableAutoConfiguration</span>(exclude=&#123;DataSourceAutoConfiguration.class&#125;) <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyConfiguration</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果这个类不在classpath路径下，你可以使用该注解的excludeName属性以及指定全限定名 来替代。最终，你也可以控制自动配置类的列表来额除spring.autoconfigure.exclude属性。</p><p>你可以通过注解级别以及使用属性来定义排除项。</p><p>Starter 组件</p><p>Spring Boot 提供了很多 “开箱即用” 的 Starter 组件。Starter 组件是可被加载在应用中的 Maven 依赖项。只需要在 Maven 配置中添加对应的依赖配置，即可使用对应的 Starter 组件。例如，添加 <code>spring-boot-starter-web</code> 依赖，就可用于构建 REST API 服务，其包含了 Spring MVC 和 Tomcat 内嵌容器等。</p><p>一个完整的 Starter 组件包括以下两点：</p><ul><li>提供自动配置功能的自动配置模块。</li><li>提供依赖关系管理功能的组件模块，即封装了组件所有功能，开箱即用</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">spring-boot-starter</span><br><span class="line">spring-boot-starter-activemq</span><br><span class="line">spring-boot-starter-actuator</span><br><span class="line">spring-boot-starter-amqp</span><br><span class="line">spring-boot-starter-aop</span><br><span class="line">spring-boot-starter-artemis</span><br><span class="line">spring-boot-starter-batch</span><br><span class="line">spring-boot-starter-cache</span><br><span class="line">spring-boot-starter-cloud-connectors</span><br><span class="line">spring-boot-starter-data-cassandra</span><br><span class="line">spring-boot-starter-data-couchbase</span><br><span class="line">spring-boot-starter-data-elasticsearch</span><br><span class="line">spring-boot-starter-data-jpa</span><br><span class="line">spring-boot-starter-data-ldap</span><br><span class="line">spring-boot-starter-data-mongodb</span><br><span class="line">spring-boot-starter-data-mongodb-reactive</span><br><span class="line">spring-boot-starter-data-neo4j</span><br><span class="line">spring-boot-starter-data-redis</span><br><span class="line">spring-boot-starter-data-rest</span><br><span class="line">spring-boot-starter-data-solr</span><br><span class="line">spring-boot-starter-freemarker</span><br><span class="line">spring-boot-starter-groovy-templates</span><br><span class="line">spring-boot-starter-hateoas</span><br><span class="line">spring-boot-starter-integration</span><br><span class="line">spring-boot-starter-jdbc</span><br><span class="line">spring-boot-starter-jersey</span><br><span class="line">spring-boot-starter-jetty</span><br><span class="line">spring-boot-starter-jooq</span><br><span class="line">spring-boot-starter-jta-atomikos</span><br><span class="line">spring-boot-starter-jta-bitronix</span><br><span class="line">spring-boot-starter-jta-narayana</span><br><span class="line">spring-boot-starter-log4j2</span><br><span class="line">spring-boot-starter-logging</span><br><span class="line">spring-boot-starter-mail</span><br><span class="line">spring-boot-starter-mobile</span><br><span class="line">spring-boot-starter-mustache</span><br><span class="line">spring-boot-starter-parent</span><br><span class="line">spring-boot-starter-reactor-netty</span><br><span class="line">spring-boot-starter-security</span><br><span class="line">spring-boot-starter-social-facebook</span><br><span class="line">spring-boot-starter-social-linkedin</span><br><span class="line">spring-boot-starter-social-twitter</span><br><span class="line">spring-boot-starter-test</span><br><span class="line">spring-boot-starter-thymeleaf</span><br><span class="line">spring-boot-starter-tomcat</span><br><span class="line">spring-boot-starter-undertow</span><br><span class="line">spring-boot-starter-validation</span><br><span class="line">spring-boot-starter-web</span><br><span class="line">spring-boot-starter-web-services</span><br><span class="line">spring-boot-starter-webflux</span><br><span class="line">spring-boot-starter-websocket</span><br></pre></td></tr></table></figure><p>自动部署的一些不足：</p><p>​    Spring Boot 工程添加某些 Starter 组件依赖，但不想触发组件自动配置<br>​    Spring Boot 配置多个不同数据源配置时，比如使用 XML 配置多数据源，但其默认数据源配置会触发自动配置出现问题。    </p><h3 id="SpringBoot热部署机制"><a href="#SpringBoot热部署机制" class="headerlink" title="SpringBoot热部署机制"></a><strong>SpringBoot热部署机制</strong></h3><p>出处：<a href="https://www.jianshu.com/p/31440633f967" target="_blank" rel="noopener">SpringBoot热部署</a></p><p>原理：</p><p>​    spring-boot-devtools 是一个为开发者服务的模块，其中最重要的功能就是自动应用代码更改到最新的App上面去。原理 是在发现代码有更改之后，重新启动应用，但是速度比手动停止后再启动还要更快，更快指的不是节省出来的手动操作的时间。</p><p>​    其深层原理是使用了两个ClassLoader，一个Classloader加载那些不会改变的类（第三方的jar包），另外一个ClassLoader加载会更改的类，称为restart ClassLoader</p><p>​    这样在有代码更改的时候，，原来的restart ClassLoader被丢弃，重新创建一个restart ClassLoader，由于需要加载的类相比较少，所以实现了更快的重启时间（5秒左右）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 添加spring boot devtools --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>true<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 添加plugin --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!-- fork:如果没有该配置，这个devtools不会起作用，即应用不会restart --&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">fork</span>&gt;</span>true<span class="tag">&lt;/<span class="name">fork</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><p>出处：<a href="https://www.cnblogs.com/jiangbei/p/8438733.html" target="_blank" rel="noopener">热部署与热加载的区别</a></p><p>​    热部署就是在服务器运行时重新部署项目，——生产环境</p><p>​    热加载即在在运行时重新加载class，从而升级应用。——开发环境</p><p>　    热加载的实现原理主要依赖java的类加载机制，在实现方式可以概括为在容器启动的时候起一条后台线程，定时的检测类文件的时间戳变化，如果类的时间戳变掉了，则将类重新载入。</p><p>　　对比反射机制，反射是在运行时获取类信息，通过动态的调用来改变程序行为； 热加载则是在运行时通过重新加载改变类信息，直接改变程序行为。</p><p>　　热部署原理类似，但它是直接重新加载整个应用，这种方式会释放内存，比热加载更加干净彻底，但同时也更费时间。</p><h3 id="如何自定义配置参数？"><a href="#如何自定义配置参数？" class="headerlink" title="如何自定义配置参数？"></a>如何自定义配置参数？</h3><p>出处：<a href="https://www.jianshu.com/p/fbb32298d1fa" target="_blank" rel="noopener">SpringBoot自定义配置参数</a></p><p>yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 测试中使用的作者信息</span></span><br><span class="line"><span class="attr">author:</span></span><br><span class="line">  <span class="comment"># 姓名</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">xxx</span></span><br><span class="line">  <span class="comment"># 性别</span></span><br><span class="line">  <span class="comment"># gender: man</span></span><br><span class="line">  <span class="comment"># 年龄</span></span><br><span class="line"><span class="attr">  age:</span> <span class="number">22</span></span><br></pre></td></tr></table></figure><h3 id="外部化配置"><a href="#外部化配置" class="headerlink" title="外部化配置"></a>外部化配置</h3><p>出处：<a href="https://www.jianshu.com/p/fbb32298d1fa" target="_blank" rel="noopener">SpringBoot自定义配置参数</a></p><p>实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 配置文件对应的实体</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AuthorValue</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用户名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 通过 value 注解获取 properties 文件中的内容</span></span><br><span class="line"><span class="comment">     * $&#123;属性的全称&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;author.name&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 若配置文件中没有配置相应的属性, 而在类中又通过 @Value的形式获取, 系统启动时会报错</span></span><br><span class="line"><span class="comment">     * 所以, 我们可以通过设定默认值的形式避免这样的问题</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;author.age:10&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// getter and setter</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通过 value 的方式获取配置文件内容的测试方法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RunWith</span>(SpringRunner.class)</span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AuthorValueTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AuthorValue authorValue;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUserMessage</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Integer age = <span class="number">10</span>;</span><br><span class="line">        Assert.assertEquals(authorValue.getName(), <span class="string">"xxx"</span>);</span><br><span class="line">        Assert.assertEquals(authorValue.getAge(), age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>@ConfigurationProperties 直接封装对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 配置文件对应的实体</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"author"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AuthorObject</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用户名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 年龄</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="comment">// getter and setter</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="多环境配置"><a href="#多环境配置" class="headerlink" title="多环境配置"></a>多环境配置</h3><p>出处：<a href="https://blog.csdn.net/yy756127197/article/details/78193398" target="_blank" rel="noopener">SpringBoot多环境配置</a></p><p>一个yml文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  profiles:</span></span><br><span class="line"><span class="attr">    active:</span> <span class="string">dev</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">#开发环境配置</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  profiles:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">1000</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">#测试环境配置</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  profiles:</span> <span class="string">stg</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">1001</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">#生产环境配置</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  profiles:</span> <span class="string">prd</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">1002</span></span><br></pre></td></tr></table></figure><p>多个yml文件（比较实用）</p><p>application.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  profiles:</span></span><br><span class="line"><span class="attr">    active:</span> <span class="string">dev</span></span><br></pre></td></tr></table></figure><p>application-dev.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">1000</span></span><br></pre></td></tr></table></figure><p>application-test.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">1001</span></span><br></pre></td></tr></table></figure><p>application-prd.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">1002</span></span><br></pre></td></tr></table></figure><h3 id="Spring-Boot常用注解"><a href="#Spring-Boot常用注解" class="headerlink" title="Spring Boot常用注解"></a>Spring Boot常用注解</h3><p>出处：<a href="https://www.jianshu.com/p/e335923270f0" target="_blank" rel="noopener">SprintBoot常用注解</a></p><div class="article-img"><p><img src="E:\blog\lmg\PinkSmallFan\project\source\uploads\SpringBoot常用注解1.png" alt="SpringBoot常用注解1"></p></div><div class="article-img"><p><img src="E:\blog\lmg\PinkSmallFan\project\source\uploads\SpringBoot常用注解2.png" alt="SpringBoot常用注2"></p></div><h3 id="Spring-Boot发布之jar与war"><a href="#Spring-Boot发布之jar与war" class="headerlink" title="Spring Boot发布之jar与war"></a>Spring Boot发布之jar与war</h3><p>出处：<a href="https://blog.csdn.net/qq_38623459/article/details/80790859" target="_blank" rel="noopener">SpringBoot发布中jar与war的区别</a></p><p>jar包：直接通过内置tomcat运行，不需要额外安装tomcat。如需修改内置tomcat的配置，只需要在spring boot的配置文件中配置。内置tomcat没有自己的日志输出，全靠jar包应用输出日志。但是比较方便，快速，比较简单。</p><p>war包：传统的应用交付方式，需要安装tomcat，然后放到waeapps目录下运行war包，可以灵活选择tomcat版本，可以直接修改tomcat的配置，有自己的tomcat日志输出，可以灵活配置安全策略。相对打成jar包来说没那么快速方便</p><h3 id="生产级特性"><a href="#生产级特性" class="headerlink" title="生产级特性"></a>生产级特性</h3><p>出处：<a href="https://www.jianshu.com/p/c785764c7c80" target="_blank" rel="noopener">SpringBoot生产级特性</a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">&lt;!-- 监控 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="endpoint"><a href="#endpoint" class="headerlink" title="endpoint"></a>endpoint</h4><p>我们可以通过一系列的HTTP请求获得应用程序的相关信息，这些请求就是endpoint，具体有如下几个</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">autoconfig  : 获取自动配置信息</span><br><span class="line">beans  ：获取Spring Bean基本信息</span><br><span class="line">configprops ：获取配置项信息</span><br><span class="line">dump ： 获取当前线程基本信息</span><br><span class="line">env ：获取环境变量信息</span><br><span class="line">health ： 获取健康检查信息</span><br><span class="line">info ： 获取应用的基本信息</span><br><span class="line">metrics ： 获取性能指标信息</span><br><span class="line">mappings ： 获取请求映射信息</span><br><span class="line">trace ： 获取请求调用信息</span><br></pre></td></tr></table></figure><p>可以通过application.properties配置文件进行精准控制</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 放弃安全限制</span><br><span class="line">management.security.enabled=false</span><br><span class="line"># 关闭一个endpoint：beans</span><br><span class="line">endpoints.beans.enabled=false</span><br><span class="line"># 关闭所有endpoint，仅打开beans</span><br><span class="line">endpoints.enable=false</span><br><span class="line">endpoints.beans.enabled=false</span><br><span class="line"># 修改endpoint名称</span><br><span class="line">endpoints.beans.id=mybeans</span><br><span class="line"># 修改请求路径</span><br><span class="line">endpoints.beans.path=/endpoints/mybeans</span><br></pre></td></tr></table></figure><h4 id="信息聚合"><a href="#信息聚合" class="headerlink" title="信息聚合"></a>信息聚合</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- actuator聚合插件 /actuator --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-hateoas<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- actuator聚合图形化插件 /actuator --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.data<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-data-rest-hal-browser<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="应用信息"><a href="#应用信息" class="headerlink" title="应用信息"></a>应用信息</h4><p>通过/info可以查看应用信息，信息可以在application.properties文件中配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">info.app.name=应用名称，使用POM中的信息，@project.modelVersion@</span><br><span class="line">info.app.description=对应用的描述</span><br><span class="line">info.app.version=1.0.0</span><br><span class="line"># 自定义用户信息</span><br><span class="line">info.user.name=hutou</span><br><span class="line">info.user.sex=男</span><br><span class="line">info.user.age=22</span><br></pre></td></tr></table></figure><h4 id="健康检查"><a href="#健康检查" class="headerlink" title="健康检查"></a>健康检查</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 暴露磁盘空间信息</span><br><span class="line">endpoints.health.sensitive=true</span><br><span class="line"># 健康信息缓存时间，设置太短会影响性能</span><br><span class="line">endpoints.health.time-to-live=500</span><br></pre></td></tr></table></figure><p>spring boot提供了很多内置的监控检查功能，都放置在：org.springframework.boot.actuate.health包下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ApplicationHealthIndicator</span><br><span class="line">DiskSpaceHealthIndicator</span><br><span class="line">DataSourceHealthIndicator    检查数据库连接</span><br><span class="line">MailHealthIndicator                检查邮件服务器</span><br><span class="line">MongoHealthIndicator            检查MongoDB数据库</span><br><span class="line">....</span><br></pre></td></tr></table></figure><h4 id="跨域访问"><a href="#跨域访问" class="headerlink" title="跨域访问"></a>跨域访问</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">## 跨域访问</span><br><span class="line">endpoints.cors.allowed-origins=http://www.baidu.com</span><br><span class="line">endpoints.cors.allowed-methods=GET,PUT,POST,DELETE</span><br></pre></td></tr></table></figure><p>在应用中增加@CrossOrigin注解来实现跨域</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** 自定义配置</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableWebMvc</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebConfig</span> <span class="keyword">extends</span> <span class="title">WebMvcConfigurerAdapter</span></span>&#123;</span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> </span>&#123;</span><br><span class="line">     registry.addMapping(<span class="string">"/**"</span>)</span><br><span class="line">         .allowedOrigins(<span class="string">"http://www.baidu.com"</span>)</span><br><span class="line">         .allowedMethods(<span class="string">"GET"</span>,<span class="string">"PUT"</span>,<span class="string">"POST"</span>,<span class="string">"DELETE"</span>);</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="监控"><a href="#监控" class="headerlink" title="监控"></a>监控</h3><p>出处：<a href="https://blog.csdn.net/wh_ouyangshuang/article/details/48048111" target="_blank" rel="noopener">SpringBoot监控</a></p><p>spring-boot-actuator模块提供了一个监控和管理生产环境的模块，可以使用http、jmx、ssh、telnet等拉管理和监控应用。审计（Auditing）、<br>健康（health）、数据采集（metrics gathering）会自动加入到应用里面。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 添加依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="article-img"><p><img src="E:\blog\lmg\PinkSmallFan\project\source\uploads\SpringBoot监控.png" alt="SpringBoot监控"></p></div><h3 id="【实战】使用SpringBoot快速构建RESTful-API应用"><a href="#【实战】使用SpringBoot快速构建RESTful-API应用" class="headerlink" title="【实战】使用SpringBoot快速构建RESTful API应用"></a>【实战】使用SpringBoot快速构建RESTful API应用</h3><h2 id="微服务之注册中心"><a href="#微服务之注册中心" class="headerlink" title="微服务之注册中心"></a><strong>微服务之注册中心</strong></h2><h3 id="服务调用端与服务提供端之间透明通信"><a href="#服务调用端与服务提供端之间透明通信" class="headerlink" title="服务调用端与服务提供端之间透明通信"></a>服务调用端与服务提供端之间透明通信</h3><h3 id="如何实现服务的动态注册与发现"><a href="#如何实现服务的动态注册与发现" class="headerlink" title="如何实现服务的动态注册与发现"></a>如何实现服务的动态注册与发现</h3><h3 id="注册中心引入"><a href="#注册中心引入" class="headerlink" title="注册中心引入"></a>注册中心引入</h3><h3 id="注册中心之zookeeper"><a href="#注册中心之zookeeper" class="headerlink" title="注册中心之zookeeper"></a><strong>注册中心之zookeeper</strong></h3><h3 id="注册中心底层实现剖析"><a href="#注册中心底层实现剖析" class="headerlink" title="注册中心底层实现剖析"></a>注册中心底层实现剖析</h3><h3 id="SpringCloud之注册中心Eurka"><a href="#SpringCloud之注册中心Eurka" class="headerlink" title="SpringCloud之注册中心Eurka"></a><strong>SpringCloud之注册中心Eurka</strong></h3><h3 id="Eurka介绍与原理分析"><a href="#Eurka介绍与原理分析" class="headerlink" title="Eurka介绍与原理分析"></a>Eurka介绍与原理分析</h3><h3 id="【实战】实现将微服务注册到EurkaServer上"><a href="#【实战】实现将微服务注册到EurkaServer上" class="headerlink" title="【实战】实现将微服务注册到EurkaServer上"></a>【实战】实现将微服务注册到EurkaServer上</h3><h2 id="微服务之负载均衡"><a href="#微服务之负载均衡" class="headerlink" title="微服务之负载均衡"></a><strong>微服务之负载均衡</strong></h2><h3 id="负载均衡应用场景"><a href="#负载均衡应用场景" class="headerlink" title="负载均衡应用场景"></a>负载均衡应用场景</h3><h3 id="常用的负载均衡实现方案"><a href="#常用的负载均衡实现方案" class="headerlink" title="常用的负载均衡实现方案"></a>常用的负载均衡实现方案</h3><h3 id="客户端负载均衡"><a href="#客户端负载均衡" class="headerlink" title="客户端负载均衡"></a><strong>客户端负载均衡</strong></h3><h3 id="服务端负载均衡"><a href="#服务端负载均衡" class="headerlink" title="服务端负载均衡"></a><strong>服务端负载均衡</strong></h3><h3 id="【实战】使用Ribbin实现客户端负载均衡"><a href="#【实战】使用Ribbin实现客户端负载均衡" class="headerlink" title="【实战】使用Ribbin实现客户端负载均衡"></a>【实战】使用Ribbin实现客户端负载均衡</h3><h2 id="微服务之容错处理"><a href="#微服务之容错处理" class="headerlink" title="微服务之容错处理"></a><strong>微服务之容错处理</strong></h2><h3 id="雪崩效应场景分析"><a href="#雪崩效应场景分析" class="headerlink" title="雪崩效应场景分析"></a>雪崩效应场景分析</h3><h3 id="如何应对雪崩效应下的容错处理"><a href="#如何应对雪崩效应下的容错处理" class="headerlink" title="如何应对雪崩效应下的容错处理"></a>如何应对雪崩效应下的容错处理</h3><h3 id="Spring-Cloud体系下之容错处理解决方案断路器Hystrix"><a href="#Spring-Cloud体系下之容错处理解决方案断路器Hystrix" class="headerlink" title="Spring Cloud体系下之容错处理解决方案断路器Hystrix"></a><strong>Spring Cloud体系下之容错处理解决方案断路器Hystrix</strong></h3><h3 id="应用如何接入Hystrix"><a href="#应用如何接入Hystrix" class="headerlink" title="应用如何接入Hystrix"></a>应用如何接入Hystrix</h3><h3 id="如何监控Hystrix状态"><a href="#如何监控Hystrix状态" class="headerlink" title="如何监控Hystrix状态"></a>如何监控Hystrix状态</h3><h3 id="【实战】实现Hystrix-Dashboard可视化监控数据"><a href="#【实战】实现Hystrix-Dashboard可视化监控数据" class="headerlink" title="【实战】实现Hystrix Dashboard可视化监控数据"></a>【实战】实现Hystrix Dashboard可视化监控数据</h3><h2 id="微服务之网关"><a href="#微服务之网关" class="headerlink" title="微服务之网关"></a><strong>微服务之网关</strong></h2><h3 id="微服务网关定义"><a href="#微服务网关定义" class="headerlink" title="微服务网关定义"></a>微服务网关定义</h3><h3 id="微服务网关引入能解决什么问题"><a href="#微服务网关引入能解决什么问题" class="headerlink" title="微服务网关引入能解决什么问题"></a>微服务网关引入能解决什么问题</h3><h3 id="SpringCloud之微服务网关zuul"><a href="#SpringCloud之微服务网关zuul" class="headerlink" title="SpringCloud之微服务网关zuul"></a>SpringCloud之微服务网关zuul</h3><h3 id="如何编写zuul微服务网关"><a href="#如何编写zuul微服务网关" class="headerlink" title="如何编写zuul微服务网关"></a>如何编写zuul微服务网关</h3><h3 id="zuul过滤器的应用"><a href="#zuul过滤器的应用" class="headerlink" title="zuul过滤器的应用"></a>zuul过滤器的应用</h3><h3 id="zuul的容错与回退处理"><a href="#zuul的容错与回退处理" class="headerlink" title="zuul的容错与回退处理"></a>zuul的容错与回退处理</h3><h3 id="【实战】使用zuul聚合微服务"><a href="#【实战】使用zuul聚合微服务" class="headerlink" title="【实战】使用zuul聚合微服务"></a>【实战】使用zuul聚合微服务</h3><h2 id="微服务之配置中心"><a href="#微服务之配置中心" class="headerlink" title="微服务之配置中心"></a>微服务之配置中心</h2><h3 id="服务配置中心介绍与应用场景分析"><a href="#服务配置中心介绍与应用场景分析" class="headerlink" title="服务配置中心介绍与应用场景分析"></a>服务配置中心介绍与应用场景分析</h3><h3 id="微服务配置之Ansible"><a href="#微服务配置之Ansible" class="headerlink" title="微服务配置之Ansible"></a>微服务配置之Ansible</h3><h3 id="如何管理微服务中的配置"><a href="#如何管理微服务中的配置" class="headerlink" title="如何管理微服务中的配置"></a>如何管理微服务中的配置</h3><h3 id="Spring-Cloud下之微服务配置解决方案Spring-Cloud-Config"><a href="#Spring-Cloud下之微服务配置解决方案Spring-Cloud-Config" class="headerlink" title="Spring Cloud下之微服务配置解决方案Spring Cloud Config"></a>Spring Cloud下之微服务配置解决方案Spring Cloud Config</h3><h3 id="Config-Server与Config-Client的实现"><a href="#Config-Server与Config-Client的实现" class="headerlink" title="Config Server与Config Client的实现"></a>Config Server与Config Client的实现</h3><h3 id="Config-Server仓库配置与应用流程"><a href="#Config-Server仓库配置与应用流程" class="headerlink" title="Config Server仓库配置与应用流程"></a>Config Server仓库配置与应用流程</h3><h3 id="如何实现配置端点的刷新"><a href="#如何实现配置端点的刷新" class="headerlink" title="如何实现配置端点的刷新"></a>如何实现配置端点的刷新</h3><h3 id="如何确保配置中心内容的安全性？"><a href="#如何确保配置中心内容的安全性？" class="headerlink" title="如何确保配置中心内容的安全性？"></a>如何确保配置中心内容的安全性？</h3><h3 id="如何实现配置刷新后自动下发？"><a href="#如何实现配置刷新后自动下发？" class="headerlink" title="如何实现配置刷新后自动下发？"></a>如何实现配置刷新后自动下发？</h3><h3 id="【实战】使用Spring-Cloud-Config打造微服务配置中心"><a href="#【实战】使用Spring-Cloud-Config打造微服务配置中心" class="headerlink" title="【实战】使用Spring Cloud Config打造微服务配置中心"></a>【实战】使用Spring Cloud Config打造微服务配置中心</h3><h2 id="微服务之封装"><a href="#微服务之封装" class="headerlink" title="微服务之封装"></a>微服务之封装</h2><h3 id="容器化技术"><a href="#容器化技术" class="headerlink" title="容器化技术"></a><strong>容器化技术</strong></h3><h3 id="Docker简介"><a href="#Docker简介" class="headerlink" title="Docker简介"></a>Docker简介</h3><h3 id="Docker架构剖析"><a href="#Docker架构剖析" class="headerlink" title="Docker架构剖析"></a>Docker架构剖析</h3><h3 id="虚拟机与Docker的对比"><a href="#虚拟机与Docker的对比" class="headerlink" title="虚拟机与Docker的对比"></a><strong>虚拟机与Docker的对比</strong></h3><h3 id="Docker的优点"><a href="#Docker的优点" class="headerlink" title="Docker的优点"></a>Docker的优点</h3><h3 id="Docker安装系统要求"><a href="#Docker安装系统要求" class="headerlink" title="Docker安装系统要求"></a>Docker安装系统要求</h3><h3 id="Docker的安装与卸载"><a href="#Docker的安装与卸载" class="headerlink" title="Docker的安装与卸载"></a>Docker的安装与卸载</h3><h3 id="Docker镜像常用命令"><a href="#Docker镜像常用命令" class="headerlink" title="Docker镜像常用命令"></a><strong>Docker镜像常用命令</strong></h3><h3 id="Docker容器常用命令"><a href="#Docker容器常用命令" class="headerlink" title="Docker容器常用命令"></a><strong>Docker容器常用命令</strong></h3><h3 id="如何配置Docker镜像地址"><a href="#如何配置Docker镜像地址" class="headerlink" title="如何配置Docker镜像地址"></a>如何配置Docker镜像地址</h3><h3 id="Docker镜像下载与构建"><a href="#Docker镜像下载与构建" class="headerlink" title="Docker镜像下载与构建"></a>Docker镜像下载与构建</h3><h3 id="使用Docker-Registry打造私有镜像仓库"><a href="#使用Docker-Registry打造私有镜像仓库" class="headerlink" title="使用Docker Registry打造私有镜像仓库"></a>使用Docker Registry打造私有镜像仓库</h3><h2 id="微服务部署"><a href="#微服务部署" class="headerlink" title="微服务部署"></a>微服务部署</h2><h3 id="持续集成"><a href="#持续集成" class="headerlink" title="持续集成"></a>持续集成</h3><h3 id="Jenkins简介"><a href="#Jenkins简介" class="headerlink" title="Jenkins简介"></a>Jenkins简介</h3><h3 id="使用Jenkins实现自动化发布"><a href="#使用Jenkins实现自动化发布" class="headerlink" title="使用Jenkins实现自动化发布"></a>使用Jenkins实现自动化发布</h3><h3 id="搭建版本控制系统"><a href="#搭建版本控制系统" class="headerlink" title="搭建版本控制系统"></a>搭建版本控制系统</h3><h3 id="搭建Jenkins持续集成系统"><a href="#搭建Jenkins持续集成系统" class="headerlink" title="搭建Jenkins持续集成系统"></a>搭建Jenkins持续集成系统</h3><h3 id="持续集成实现自动化构建"><a href="#持续集成实现自动化构建" class="headerlink" title="持续集成实现自动化构建"></a>持续集成实现自动化构建</h3><h2 id="微服务日志"><a href="#微服务日志" class="headerlink" title="微服务日志"></a>微服务日志</h2><h3 id="为什么需要搭建应用日志中心"><a href="#为什么需要搭建应用日志中心" class="headerlink" title="为什么需要搭建应用日志中心"></a>为什么需要搭建应用日志中心</h3><h3 id="开源日志中心ELK介绍"><a href="#开源日志中心ELK介绍" class="headerlink" title="开源日志中心ELK介绍"></a><strong>开源日志中心ELK介绍</strong></h3><h3 id="日志存储系统之Elasticsearch"><a href="#日志存储系统之Elasticsearch" class="headerlink" title="日志存储系统之Elasticsearch"></a><strong>日志存储系统之Elasticsearch</strong></h3><h3 id="日志收集系统之Logstash"><a href="#日志收集系统之Logstash" class="headerlink" title="日志收集系统之Logstash"></a><strong>日志收集系统之Logstash</strong></h3><h3 id="日志查询系统之Kibana"><a href="#日志查询系统之Kibana" class="headerlink" title="日志查询系统之Kibana"></a><strong>日志查询系统之Kibana</strong></h3><h3 id="ELK日志中心搭建"><a href="#ELK日志中心搭建" class="headerlink" title="ELK日志中心搭建"></a>ELK日志中心搭建</h3><h2 id="微服务监控"><a href="#微服务监控" class="headerlink" title="微服务监控"></a>微服务监控</h2><h3 id="Spring-Boot自带的开源监控系统Spring-Boot-Admin"><a href="#Spring-Boot自带的开源监控系统Spring-Boot-Admin" class="headerlink" title="Spring Boot自带的开源监控系统Spring Boot Admin"></a>Spring Boot自带的开源监控系统Spring Boot Admin</h3><h3 id="自主搭建系统监控中心"><a href="#自主搭建系统监控中心" class="headerlink" title="自主搭建系统监控中心"></a><strong>自主搭建系统监控中心</strong></h3><h3 id="分布式调用链中心"><a href="#分布式调用链中心" class="headerlink" title="分布式调用链中心"></a><strong>分布式调用链中心</strong></h3><h3 id="开源调用链中心Zipkin"><a href="#开源调用链中心Zipkin" class="headerlink" title="开源调用链中心Zipkin"></a><strong>开源调用链中心Zipkin</strong></h3><h3 id="微服务调用链追踪"><a href="#微服务调用链追踪" class="headerlink" title="微服务调用链追踪"></a>微服务调用链追踪</h3><h3 id="Spring-Cloud-Sleuth简介"><a href="#Spring-Cloud-Sleuth简介" class="headerlink" title="Spring Cloud Sleuth简介"></a>Spring Cloud Sleuth简介</h3><h3 id="Spring-Cloud-Sleuth与Zipkin结合应用"><a href="#Spring-Cloud-Sleuth与Zipkin结合应用" class="headerlink" title="Spring Cloud Sleuth与Zipkin结合应用"></a>Spring Cloud Sleuth与Zipkin结合应用</h3><h2 id="微服务之异步化"><a href="#微服务之异步化" class="headerlink" title="微服务之异步化"></a><strong>微服务之异步化</strong></h2><h3 id="使用MQ实现异步调用"><a href="#使用MQ实现异步调用" class="headerlink" title="使用MQ实现异步调用"></a><strong>使用MQ实现异步调用</strong></h3><h3 id="分布式事务解决方案剖析"><a href="#分布式事务解决方案剖析" class="headerlink" title="分布式事务解决方案剖析"></a>分布式事务解决方案剖析</h3><h3 id="Spring-Cloud-Bus的应用"><a href="#Spring-Cloud-Bus的应用" class="headerlink" title="Spring Cloud Bus的应用"></a><strong>Spring Cloud Bus的应用</strong></h3><h3 id="【实战】使用Spring-Cloud-Bus实现配置的自动刷新"><a href="#【实战】使用Spring-Cloud-Bus实现配置的自动刷新" class="headerlink" title="【实战】使用Spring Cloud Bus实现配置的自动刷新"></a>【实战】使用Spring Cloud Bus实现配置的自动刷新</h3><h2 id="微服务测试"><a href="#微服务测试" class="headerlink" title="微服务测试"></a>微服务测试</h2><h3 id="Spring-Boot单元测试"><a href="#Spring-Boot单元测试" class="headerlink" title="Spring Boot单元测试"></a>Spring Boot单元测试</h3><h3 id="Service层测试"><a href="#Service层测试" class="headerlink" title="Service层测试"></a><strong>Service层测试</strong></h3><h3 id="REST-API测试"><a href="#REST-API测试" class="headerlink" title="REST API测试"></a><strong>REST API测试</strong></h3><h3 id="【综合案例】-某大型的跨境电商项目"><a href="#【综合案例】-某大型的跨境电商项目" class="headerlink" title="【综合案例】 某大型的跨境电商项目"></a>【综合案例】 某大型的跨境电商项目</h3><h3 id="【综合案例】-某服务治理平台"><a href="#【综合案例】-某服务治理平台" class="headerlink" title="【综合案例】 某服务治理平台"></a>【综合案例】 某服务治理平台</h3><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li>单体架构简介：<a href="http://book.51cto.com/art/201803/567370.htm" target="_blank" rel="noopener">http://book.51cto.com/art/201803/567370.htm</a></li><li>单体架构到微服务的演进：<a href="https://my.oschina.net/zhanghaiyang/blog/725728" target="_blank" rel="noopener">https://my.oschina.net/zhanghaiyang/blog/725728</a></li><li>从单体架构迁移微服务：<a href="http://www.infoq.com/cn/news/2016/08/Monomer-architecture-Micro-servi" target="_blank" rel="noopener">http://www.infoq.com/cn/news/2016/08/Monomer-architecture-Micro-servi</a></li><li>单体与微服务架构：<a href="https://blog.csdn.net/hu_zhiting/article/details/77036914" target="_blank" rel="noopener">https://blog.csdn.net/hu_zhiting/article/details/77036914</a> </li><li>微服务的4大设计原则和19个解决方案：<a href="https://juejin.im/entry/59bf30876fb9a00a583176a1" target="_blank" rel="noopener">https://juejin.im/entry/59bf30876fb9a00a583176a1</a></li><li>微服务对比：<a href="https://segmentfault.com/a/1190000010953144" target="_blank" rel="noopener">https://segmentfault.com/a/1190000010953144</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 微服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计划 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>about</title>
      <link href="./2018/11/15/about/about/"/>
      <url>./2018/11/15/about/about/</url>
      
        <content type="html"><![CDATA[<p><a href="http://wenchongjiaokou.info">blog</a></p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>不成文规定</title>
      <link href="./2018/11/14/%E6%AF%8F%E5%A4%A9%E4%B8%80%E7%AF%87(%E5%A4%A7%E7%BA%B2)/"/>
      <url>./2018/11/14/%E6%AF%8F%E5%A4%A9%E4%B8%80%E7%AF%87(%E5%A4%A7%E7%BA%B2)/</url>
      
        <content type="html"><![CDATA[<h1 id="不成文规定："><a href="#不成文规定：" class="headerlink" title="不成文规定："></a>不成文规定：</h1><p>离职or求职期间才可以公布到blog上，暂时存放到自己的本地目录下。不公开！</p><h2 id="PKI-内容分解"><a href="#PKI-内容分解" class="headerlink" title="PKI 内容分解"></a>PKI 内容分解</h2><ul><li style="list-style: none"><input type="checkbox"> ASN.1 语法</li><li style="list-style: none"><input type="checkbox"> 证书编码、格式</li><li style="list-style: none"><input type="checkbox"> 数字证书的概念</li><li style="list-style: none"><input type="checkbox"> 数字证书的信息：基本项、扩展项</li><li style="list-style: none"><input type="checkbox"> 数字签名</li><li style="list-style: none"><input type="checkbox"> 证书验证</li><li style="list-style: none"><input type="checkbox"> 证书申请与签发的流程</li><li style="list-style: none"><input type="checkbox"> PKI应用（这个需要模糊化，不能涉及公司）</li><li style="list-style: none"><input type="checkbox"> 证书与CA的关系</li><li style="list-style: none"><input type="checkbox"> CRL</li><li style="list-style: none"><input type="checkbox"> OCSP</li><li style="list-style: none"><input type="checkbox"> 时间戳</li><li style="list-style: none"><input type="checkbox"> RSA</li><li style="list-style: none"><input type="checkbox"> 加密、公开密钥</li></ul><p>（可以看教科书+阮一峰）</p><ul><li style="list-style: none"><input type="checkbox"> 密钥的生命周期</li></ul><p>（<a href="http://www.docin.com/p-743210632.html）" target="_blank" rel="noopener">http://www.docin.com/p-743210632.html）</a></p><ul><li style="list-style: none"><input type="checkbox"> SHA1、MD5、SHA256等算法原理</li></ul><p>-&gt;这部分可以等刷LintCode到某种层次的时候开始自己造个轮子玩一玩（估计需要2年时间，才有这个能力</p><ul><li style="list-style: none"><input type="checkbox"> P1的结构</li><li style="list-style: none"><input type="checkbox"> P7的结构，SignedData,2018年10月30日</li><li style="list-style: none"><input type="checkbox"> </li></ul><h2 id="java基础分解"><a href="#java基础分解" class="headerlink" title="java基础分解"></a>java基础分解</h2><ul><li style="list-style: none"><input type="checkbox"> HashMap的源码（bolg）</li><li style="list-style: none"><input type="checkbox"> ArrayList对比LinkList（bolg）</li><li style="list-style: none"><input type="checkbox"> 锁</li><li style="list-style: none"><input type="checkbox"> equals</li><li style="list-style: none"><input type="checkbox"> wait() 与sleep()和notify() 的区别</li><li style="list-style: none"><input type="checkbox"> 抽象类和接口的区别</li><li style="list-style: none"><input type="checkbox"> 生产者消费者</li><li style="list-style: none"><input type="checkbox"> 单向链表</li><li style="list-style: none"><input type="checkbox"> InputStream 和reader流的区别</li><li style="list-style: none"><input type="checkbox"> 单例模式</li><li style="list-style: none"><input type="checkbox"> 设计模式</li><li style="list-style: none"><input type="checkbox"> </li></ul><h2 id="java进阶分解"><a href="#java进阶分解" class="headerlink" title="java进阶分解"></a>java进阶分解</h2><ul><li style="list-style: none"><input type="checkbox"> GC机制</li><li style="list-style: none"><input type="checkbox"> 内存模型</li><li style="list-style: none"><input type="checkbox"> 高并发</li><li style="list-style: none"><input type="checkbox"> 连接池</li><li style="list-style: none"><input type="checkbox"> JVM</li><li style="list-style: none"><input type="checkbox"> 线程同步</li><li style="list-style: none"><input type="checkbox"> Java的IO</li><li style="list-style: none"><input type="checkbox"> java调用jdbc连接数据库</li><li style="list-style: none"><input type="checkbox"> preStatement和Statement的区别</li><li style="list-style: none"><input type="checkbox"> Spring如何实现事务</li><li style="list-style: none"><input type="checkbox"> HTTP2.0与1.0的区别</li><li style="list-style: none"><input type="checkbox"> </li></ul><h2 id="java技术经验分解"><a href="#java技术经验分解" class="headerlink" title="java技术经验分解"></a>java技术经验分解</h2><ul><li style="list-style: none"><input type="checkbox"> JAVA_GC日志分析，2018年10月30日</li><li style="list-style: none"><input type="checkbox"> 跳过导航链接一个不错的测试并发Java代码</li><li style="list-style: none"><input type="checkbox"> JAVA命令行工具的使用</li><li style="list-style: none"><input type="checkbox"> lombok介绍</li><li style="list-style: none"><input type="checkbox"> BTrace介绍</li><li style="list-style: none"><input type="checkbox"> ActiveMQ_基础学习</li><li style="list-style: none"><input type="checkbox"> Maven私服-nexus简介</li><li style="list-style: none"><input type="checkbox"> 配置Linux的DNS</li><li style="list-style: none"><input type="checkbox"> Wireshark使用分享</li><li style="list-style: none"><input type="checkbox"> RMI结合Spring使用</li><li style="list-style: none"><input type="checkbox"> chrome浏览器插件postman测试接口</li><li style="list-style: none"><input type="checkbox"> Java下HttpClient访问https的两种方式</li><li style="list-style: none"><input type="checkbox"> Spring事务管理介绍</li><li style="list-style: none"><input type="checkbox"> Spring事务管理基本使用</li><li style="list-style: none"><input type="checkbox"> 常见开源协议大白话说明</li><li style="list-style: none"><input type="checkbox"> mysql Innodb 表空间初步认识</li><li style="list-style: none"><input type="checkbox"> docker基本知识以及应用</li><li style="list-style: none"><input type="checkbox"> 六种方式实现hibernate查询</li><li style="list-style: none"><input type="checkbox"> java 客户端-服务端 证书信任</li><li style="list-style: none"><input type="checkbox"> 使用Toad比对数据库</li><li style="list-style: none"><input type="checkbox"> OpenSSL部分使用方法</li></ul><h2 id="微服务培训"><a href="#微服务培训" class="headerlink" title="微服务培训"></a>微服务培训</h2><h3 id="课程实战"><a href="#课程实战" class="headerlink" title="课程实战"></a>课程实战</h3><ul><li style="list-style: none"><input type="checkbox"> 【案例】结合某案例分析传统单体架构面临问题</li><li style="list-style: none"><input type="checkbox"> 【案例】基于Dubbo的项目应用案例分析</li><li style="list-style: none"><input type="checkbox"> 【实战】使用SpringBoot快速构建RESTful API应用</li><li style="list-style: none"><input type="checkbox"> 【实战】实现将微服务注册到EurkaServer上</li><li style="list-style: none"><input type="checkbox"> 【实战】使用Ribbin实现客户端负载均衡</li><li style="list-style: none"><input type="checkbox"> 【实战】实现Hystrix Dashboard可视化监控数据</li><li style="list-style: none"><input type="checkbox"> 【实战】使用zuul聚合微服务</li><li style="list-style: none"><input type="checkbox"> 【实战】使用Spring Cloud Config打造微服务配置中心</li><li style="list-style: none"><input type="checkbox"> 【实战】使用Spring Cloud Bus实现配置的自动刷新</li><li style="list-style: none"><input type="checkbox"> 【综合案例】 某大型的跨境电商项目</li><li style="list-style: none"><input type="checkbox"> 【综合案例】 某服务治理平台</li></ul><h3 id="分解"><a href="#分解" class="headerlink" title="分解"></a>分解</h3><ul><li style="list-style: none"><input type="checkbox"> Dubbo与Spring Cloud</li></ul><div class="article-img"><p><img src="https://pinksmallfan.github.io/WenChongAndJiaoKou/uploads/换位思考.png" alt="换位思考"></p></div>]]></content>
      
      
      
        <tags>
            
            <tag> Other </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>实验吧（Decode）</title>
      <link href="./2018/11/11/2018-11-11-%E5%AE%9E%E9%AA%8C%E5%90%A7%EF%BC%88Decode%EF%BC%89/"/>
      <url>./2018/11/11/2018-11-11-%E5%AE%9E%E9%AA%8C%E5%90%A7%EF%BC%88Decode%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>Decode</p><blockquote><p>0xp></blockquote><h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h3><p>首先，查看这段编码，有什么异常，我们可以发现253x出现得比较频繁，16进制25转为十进制为37，在ASCII即%，那么可以想到的是URL</p><h4 id="十六进制转ASCII编码"><a href="#十六进制转ASCII编码" class="headerlink" title="十六进制转ASCII编码"></a>十六进制转ASCII编码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">hex16=<span class="numberspan></span><br><span class="line">d = [chr(int(b, <span class="number">16</span>)) <span class="keyword">for</span> b <span class="keyword">in</span> [hex16[i:i+<span class="number">2</span>] <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(hex16), <span class="number">2</span>)]]</span><br><span class="line"><span class="comment"># ['%', '4', 'd', '%', '5', '4', '%', '4', '5', '%', '3', '5', '%', '4', '3', '%', '6', 'a', '%', '4', '5', '%', '7', '7', '%', '4', 'd', '%', '5', '1', '%', '6', 'f', '%', '7', '8', '%', '4', 'd', '%', '4', '4', '%', '6', '7', '%', '4', 'b', '%', '4', 'f', '%', '5', '4', '%', '6', 'b', '%', '4', 'b', '%', '4', 'd', '%', '5', '4', '%', '4', '5', '%', '7', '8', '%', '4', '3', '%', '6', 'a', '%', '4', '5', '%', '7', '7', '%', '4', 'f', '%', '5', '1', '%', '6', 'f', '%', '7', '8', '%', '4', 'd', '%', '4', '4', '%', '4', '5', '%', '4', 'b', '%', '4', 'd', '%', '5', '4', '%', '4', '5', '%', '3', '2', '%', '4', '3', '%', '6', 'a', '%', '4', '5', '%', '7', '8', '%', '4', 'd', '%', '5', '1', '%', '6', 'f', '%', '7', '8', '%', '4', 'd', '%', '5', '4', '%', '5', '5', '%', '4', 'b', '%', '4', 'd', '%', '5', '4', '%', '4', '1', '%', '3', '0', '%', '4', '3', '%', '6', 'a', '%', '4', '5', '%', '7', '7', '%', '4', 'e', '%', '5', '1', '%', '6', 'f', '%', '7', '8', '%', '4', 'd', '%', '6', 'a', '%', '4', '5', '%', '4', 'b', '%', '4', 'f', '%', '5', '4', '%', '6', '3', '%', '4', 'b', '%', '4', 'd', '%', '5', '4', '%', '4', '5', '%', '7', '7', '%', '4', '3', '%', '6', 'a', '%', '6', 'b', '%', '3', '4', '%', '4', '3', '%', '6', 'a', '%', '6', 'b', '%', '3', '3', '%', '4', '3', '%', '6', 'a', '%', '4', '5', '%', '7', '8', '%', '4', 'e', '%', '4', '1', '%', '3', 'd', '%', '3', 'd']"</span></span><br><span class="line"></span><br><span class="line">a=<span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(len(d)):</span><br><span class="line">    a+=d[j]</span><br><span class="line">a</span><br><span class="line"><span class="comment"># %4d%54%45%35%43%6a%45%77%4d%51%6f%78%4d%44%67%4b%4f%54%6b%4b%4d%54%45%78%43%6a%45%77%4f%51%6f%78%4d%44%45%4b%4d%54%45%32%43%6a%45%78%4d%51%6f%78%4d%54%55%4b%4d%54%41%30%43%6a%45%77%4e%51%6f%78%4d%6a%45%4b%4f%54%63%4b%4d%54%45%77%43%6a%6b%34%43%6a%6b%33%43%6a%45%78%4e%41%3d%3d</span></span><br></pre></td></tr></table></figure><h4 id="ASCII编码转URL编码"><a href="#ASCII编码转URL编码" class="headerlink" title="ASCII编码转URL编码"></a>ASCII编码转URL编码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> unquote</span><br><span class="line">a=<span class="string">'%4d%54%45%35%43%6a%45%77%4d%51%6f%78%4d%44%67%4b%4f%54%6b%4b%4d%54%45%78%43%6a%45%77%4f%51%6f%78%4d%44%45%4b%4d%54%45%32%43%6a%45%78%4d%51%6f%78%4d%54%55%4b%4d%54%41%30%43%6a%45%77%4e%51%6f%78%4d%6a%45%4b%4f%54%63%4b%4d%54%45%77%43%6a%6b%34%43%6a%6b%33%43%6a%45%78%4e%41%3d%3d'</span></span><br><span class="line">test=unquote(a,<span class="string">'utf-8'</span>)</span><br><span class="line">test</span><br><span class="line"><span class="comment"># 'MTE5CjEwMQoxMDgKOTkKMTExCjEwOQoxMDEKMTE2CjExMQoxMTUKMTA0CjEwNQoxMjEKOTcKMTEwCjk4Cjk3CjExNA=='</span></span><br></pre></td></tr></table></figure><h4 id="Base64值解码"><a href="#Base64值解码" class="headerlink" title="Base64值解码"></a>Base64值解码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">import</span> base64</span><br><span class="line">test = <span class="string">'MTE5CjEwMQoxMDgKOTkKMTExCjEwOQoxMDEKMTE2CjExMQoxMTUKMTA0CjEwNQoxMjEKOTcKMTEwCjk4Cjk3CjExNA=='</span></span><br><span class="line">data = base64.b64decode(test)</span><br><span class="line">data</span><br><span class="line"><span class="string">b'119\n101\n108\n99\n111\n109\n101\n116\n111\n115\n104\n105\n121\n97\n110\n98\n97\n114'</span></span><br></pre></td></tr></table></figure><h4 id="ASCII编码"><a href="#ASCII编码" class="headerlink" title="ASCII编码"></a>ASCII编码</h4><p>对比ASCII表，可得</p><p>welcometoshiyanbar</p><div class="article-img"><p><img src="E:\blog\lmg\PinkSmallFan\project\source\uploads\c2fdfc039245d688c56332adacc27d1ed21b2451.jpg" alt="img"></p></div><blockquote><p>b = 123<br>bin(int(b))<br>‘0b1111011’<br>oct(int(b))<br>‘0o173’<br>hex(int(b))<br>‘0x7b’<br>int(b)</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 实验吧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 密码学 </tag>
            
            <tag> other </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>实验吧（我喜欢的培根）</title>
      <link href="./2018/11/11/2018-11-11-%E5%AE%9E%E9%AA%8C%E5%90%A7%EF%BC%88%E6%88%91%E5%96%9C%E6%AC%A2%E7%9A%84%E5%9F%B9%E6%A0%B9%EF%BC%89/"/>
      <url>./2018/11/11/2018-11-11-%E5%AE%9E%E9%AA%8C%E5%90%A7%EF%BC%88%E6%88%91%E5%96%9C%E6%AC%A2%E7%9A%84%E5%9F%B9%E6%A0%B9%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>我喜欢的培根，key: CTF{}</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-- --- .-. ... . ..--.- .. ... ..--.- -.-. --- --- .-.. ..--.- -... ..- - ..--.- -... .- -.-. --- -. ..--.- .. ... ..--.- -.-. --- --- .-.. . .-. ..--.- -.. -.-. -.-. -.. -.-. -.-. -.-. -.. -.. -.. -.-. -.. -.-. -.-. -.-. -.. -.. -.-. -.-. -.-. -.-. -.-. -.-. -.-. -.-. -.-. -.. -.. -.-. -.. -.-. -.-. -.-. -.-. -.. -.-. -.-. -.-. -.-. -.-. / -.-. -.. -.-. -.-. -.-. -.. -.-. -.-. -.. -.-. / -.-. -.-. -.-. -.. -.-. -.-. -.. -.. -.. -.-. -.-. -.. -.. -.. -.-. -.-. -.. -.-. -.. -..</span><br></pre></td></tr></table></figure><h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h3><h4 id="莫斯密码"><a href="#莫斯密码" class="headerlink" title="莫斯密码"></a>莫斯密码</h4><p>自己编写一个morse解码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">Title:MorseCode</span></span><br><span class="line"><span class="string">Author:PinkSmallFan</span></span><br><span class="line"><span class="string">Type:crypto</span></span><br><span class="line"><span class="string">Detail:莫斯密码</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">morse</span><span class="params">(lstr)</span>:</span></span><br><span class="line">    flag = <span class="string">''</span></span><br><span class="line">    data = lstr.split(<span class="string">' '</span>)</span><br><span class="line">    dict = &#123;<span class="string">'.-'</span>: <span class="string">'A'</span>,</span><br><span class="line">            <span class="string">'-...'</span>: <span class="string">'B'</span>,</span><br><span class="line">            <span class="string">'-.-.'</span>: <span class="string">'C'</span>,</span><br><span class="line">            <span class="string">'-..'</span>:<span class="string">'D'</span>,</span><br><span class="line">            <span class="string">'.'</span>:<span class="string">'E'</span>,</span><br><span class="line">            <span class="string">'..-.'</span>:<span class="string">'F'</span>,</span><br><span class="line">            <span class="string">'--.'</span>: <span class="string">'G'</span>,</span><br><span class="line">            <span class="string">'....'</span>: <span class="string">'H'</span>,</span><br><span class="line">            <span class="string">'..'</span>: <span class="string">'I'</span>,</span><br><span class="line">            <span class="string">'.---'</span>:<span class="string">'J'</span>,</span><br><span class="line">            <span class="string">'-.-'</span>: <span class="string">'K'</span>,</span><br><span class="line">            <span class="string">'.-..'</span>: <span class="string">'L'</span>,</span><br><span class="line">            <span class="string">'--'</span>: <span class="string">'M'</span>,</span><br><span class="line">            <span class="string">'-.'</span>: <span class="string">'N'</span>,</span><br><span class="line">            <span class="string">'---'</span>: <span class="string">'O'</span>,</span><br><span class="line">            <span class="string">'.--.'</span>: <span class="string">'P'</span>,</span><br><span class="line">            <span class="string">'--.-'</span>: <span class="string">'Q'</span>,</span><br><span class="line">            <span class="string">'.-.'</span>: <span class="string">'R'</span>,</span><br><span class="line">            <span class="string">'...'</span>: <span class="string">'S'</span>,</span><br><span class="line">            <span class="string">'-'</span>: <span class="string">'T'</span>,</span><br><span class="line">            <span class="string">'..-'</span>: <span class="string">'U'</span>,</span><br><span class="line">            <span class="string">'...-'</span>: <span class="string">'V'</span>,</span><br><span class="line">            <span class="string">'.--'</span>: <span class="string">'W'</span>,</span><br><span class="line">            <span class="string">'-..-'</span>: <span class="string">'X'</span>,</span><br><span class="line">            <span class="string">'-.--'</span>: <span class="string">'Y'</span>,</span><br><span class="line">            <span class="string">'--..'</span>: <span class="string">'Z'</span>,</span><br><span class="line">            <span class="string">'.----'</span>: <span class="string">'1'</span>,</span><br><span class="line">            <span class="string">'..---'</span>: <span class="string">'2'</span>,</span><br><span class="line">            <span class="string">'...--'</span>: <span class="string">'3'</span>,</span><br><span class="line">            <span class="string">'....-'</span>: <span class="string">'4'</span>,</span><br><span class="line">            <span class="string">'.....'</span>: <span class="string">'5'</span>,</span><br><span class="line">            <span class="string">'-....'</span>: <span class="string">'6'</span>,</span><br><span class="line">            <span class="string">'--...'</span>: <span class="string">'7'</span>,</span><br><span class="line">            <span class="string">'---..'</span>: <span class="string">'8'</span>,</span><br><span class="line">            <span class="string">'----.'</span>: <span class="string">'9'</span>,</span><br><span class="line">            <span class="string">'-----'</span>: <span class="string">'0'</span>,</span><br><span class="line">            <span class="string">'..--..'</span>: <span class="string">'?'</span>,</span><br><span class="line">            <span class="string">'-..-.'</span>: <span class="string">'/'</span>,</span><br><span class="line">            <span class="string">'-.--.-'</span>: <span class="string">'()'</span>,</span><br><span class="line">            <span class="string">'-....-'</span>: <span class="string">'-'</span>,</span><br><span class="line">            <span class="string">'.-.-.-'</span>: <span class="string">'.'</span></span><br><span class="line">            &#125;;</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> data:</span><br><span class="line">        flag+=dict[item]</span><br><span class="line">    <span class="keyword">return</span> flag</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(lstr)</span>:</span></span><br><span class="line">    print(lstr)</span><br><span class="line">    result = morse(lstr)</span><br><span class="line">    print(result)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="comment">#  example</span></span><br><span class="line"><span class="comment"># print('helloworld')</span></span><br><span class="line"><span class="comment"># abc='-- --- .-. ... . ..--.- .. ... ..--.- -.-. --- --- .-.. ..--.- -... ..- - ..--.- -... .- -.-. --- -. ..--.- .. ... ..--.- -.-. --- --- .-.. . .-. ..--.- -.. -.-. -.-. -.. -.-. -.-. -.-. -.. -.. -.. -.-. -.. -.-. -.-. -.-. -.. -.. -.-. -.-. -.-. -.-. -.-. -.-. -.-. -.-. -.-. -.. -.. -.-. -.. -.-. -.-. -.-. -.-. -.. -.-. -.-. -.-. -.-. -.-. / -.-. -.. -.-. -.-. -.-. -.. -.-. -.-. -.. -.-. / -.-. -.-. -.-. -.. -.-. -.-. -.. -.. -.. -.-. -.-. -.. -.. -.. -.-. -.-. -.. -.-. -.. -..'</span></span><br><span class="line"><span class="comment"># main(abc)</span></span><br><span class="line"><span class="comment"># result为MORSE..--.-IS..--.-COOL..--.-BUT..--.-BACON..--.-IS..--.-COOLER..--.-DCCDCCCDDDCDCCCDDCCCCCCCCCDDCDCCCCDCCCCC/CDCCCDCCDC/CCCDCCDDDCCDDDCCDCDD</span></span><br></pre></td></tr></table></figure><h4 id="培根密码"><a href="#培根密码" class="headerlink" title="培根密码"></a>培根密码</h4><div class="article-bounded"><div class="article-table"><table><tbody><tr><td>A/a</td><td>aaaaa</td><td>H/h</td><td>aabbb</td><td>O/o</td><td>abbba</td><td>V/v</td><td>babab</td></tr><tr><td>B/b</td><td>aaaab</td><td>I/i</td><td>abaaa</td><td>P/p</td><td>abbbb</td><td>W/w</td><td>babba</td></tr><tr><td>C/c</td><td>aaaba</td><td>J/j</td><td>abaab</td><td>Q/q</td><td>baaaa</td><td>X/x</td><td>babbb</td></tr><tr><td>D/d</td><td>aaabb</td><td>K/k</td><td>ababa</td><td>R/r</td><td>baaab</td><td>Y/y</td><td>bbaaa</td></tr><tr><td>E/e</td><td>aabaa</td><td>L/l</td><td>ababb</td><td>S/s</td><td>baaba</td><td>Z/z</td><td>bbaab</td></tr><tr><td>F/f</td><td>aabab</td><td>M/m</td><td>abbaa</td><td>T/t</td><td>baabb</td><td></td><td></td></tr><tr><td>G/g</td><td>aabba</td><td>N/n</td><td>abbab</td><td>U/u</td><td>babaa</td><td></td></tr></tbody></table></div></div><p>将DCCDCCCDDDCDCCCDDCCCCCCCCCDDCDCCCCDCCCCC/CDCCCDCCDC/CCCDCCDDDCCDDDCCDCDD去掉反斜杠，五个为一组，D-&gt;a，C-&gt;b，进行培根密码解密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">Title:PeigenCode</span></span><br><span class="line"><span class="string">Author:PinkSmallFan</span></span><br><span class="line"><span class="string">Type:crypto</span></span><br><span class="line"><span class="string">Detail:培根密码</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">peigenDe</span><span class="params">(lstr)</span>:</span></span><br><span class="line">dict = &#123;<span class="string">'aaaaa'</span>: <span class="string">'A'</span>,</span><br><span class="line">            <span class="string">'aaaab'</span>: <span class="string">'B'</span>,</span><br><span class="line">            <span class="string">'aaaba'</span>: <span class="string">'C'</span>,</span><br><span class="line">            <span class="string">'aaabb'</span>: <span class="string">'D'</span>,</span><br><span class="line">    <span class="string">'aabaa'</span>: <span class="string">'E'</span>,</span><br><span class="line">    <span class="string">'aabab'</span>: <span class="string">'F'</span>,</span><br><span class="line">    <span class="string">'aabba'</span>: <span class="string">'G'</span>,</span><br><span class="line"><span class="string">'aabbb'</span>: <span class="string">'H'</span>,</span><br><span class="line">    <span class="string">'abaaa'</span>: <span class="string">'I'</span>,</span><br><span class="line">    <span class="string">'abaab'</span>: <span class="string">'J'</span>,</span><br><span class="line">    <span class="string">'ababa'</span>: <span class="string">'K'</span>,</span><br><span class="line">    <span class="string">'ababb'</span>: <span class="string">'L'</span>,</span><br><span class="line">    <span class="string">'abbaa'</span>: <span class="string">'M'</span>,</span><br><span class="line">    <span class="string">'abbab'</span>: <span class="string">'N'</span>,</span><br><span class="line">    <span class="string">'abbba'</span>: <span class="string">'O'</span>,</span><br><span class="line">    <span class="string">'abbbb'</span>: <span class="string">'P'</span>,</span><br><span class="line">    <span class="string">'baaaa'</span>: <span class="string">'Q'</span>,</span><br><span class="line">    <span class="string">'baaab'</span>: <span class="string">'R'</span>,</span><br><span class="line">    <span class="string">'baaba'</span>: <span class="string">'S'</span>,</span><br><span class="line">    <span class="string">'baabb'</span>: <span class="string">'T'</span>,</span><br><span class="line">    <span class="string">'babaa'</span>: <span class="string">'U'</span>,</span><br><span class="line">    <span class="string">'babab'</span>: <span class="string">'V'</span>,</span><br><span class="line">    <span class="string">'babba'</span>: <span class="string">'W'</span>,</span><br><span class="line">    <span class="string">'babbb'</span>: <span class="string">'X'</span>,</span><br><span class="line">    <span class="string">'bbaaa'</span>: <span class="string">'Y'</span>,</span><br><span class="line">    <span class="string">'bbaab'</span>: <span class="string">'Z'</span></span><br><span class="line">    &#125;;</span><br><span class="line">size = len(lstr)</span><br><span class="line">lenght = <span class="number">5</span></span><br><span class="line">returnStr = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(round(size/lenght)):</span><br><span class="line">result=lstr[lenght*i:lenght*(i+<span class="number">1</span>)].lower()</span><br><span class="line">returnStr += dict[result]</span><br><span class="line"><span class="keyword">return</span> returnStr</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(lstr)</span>:</span></span><br><span class="line">print(lstr)</span><br><span class="line">result = peigenDe(lstr)</span><br><span class="line">print(result)</span><br><span class="line"><span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="comment"># example</span></span><br><span class="line"><span class="comment"># data = 'baabaaabbbabaaabbaaaaaaaaabbabaaaabaaaaaabaaabaabaaaabaabbbaabbbaababb'</span></span><br><span class="line"><span class="comment"># main(data)</span></span><br><span class="line"><span class="comment"># SHIYANBAISCOOL</span></span><br></pre></td></tr></table></figure><p>PS：注意，之前含有的反斜杠，为空格，需要额外添加空格</p><p>最后大小写试一试就ok啦~</p>]]></content>
      
      
      <categories>
          
          <category> 实验吧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 密码学 </tag>
            
            <tag> other </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>实验吧（困在栅栏里的爱）</title>
      <link href="./2018/11/11/2018-11-11-%E5%AE%9E%E9%AA%8C%E5%90%A7%EF%BC%88%E5%9B%B0%E5%9C%A8%E6%A0%85%E6%A0%8F%E9%87%8C%E7%9A%84%E7%88%B1%EF%BC%89/"/>
      <url>./2018/11/11/2018-11-11-%E5%AE%9E%E9%AA%8C%E5%90%A7%EF%BC%88%E5%9B%B0%E5%9C%A8%E6%A0%85%E6%A0%8F%E9%87%8C%E7%9A%84%E7%88%B1%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="困在栅栏里的爱"><a href="#困在栅栏里的爱" class="headerlink" title="困在栅栏里的爱"></a>困在栅栏里的爱</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>最近一直在好奇一个问题，QWE到底等不等于ABC？</p><p>-.- .. –.- .-.. .– - ..-. -.-. –.- –. -. … — — </p><p>flag格式：CTF{xxx}</p><p>题目地址：<a href="http://www.shiyanbar.com/ctf/1917" target="_blank" rel="noopener">http://www.shiyanbar.com/ctf/1917</a></p><h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h3><h4 id="莫斯密码"><a href="#莫斯密码" class="headerlink" title="莫斯密码"></a>莫斯密码</h4><p>自己编写一个morse解码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">Title:MorseCode</span></span><br><span class="line"><span class="string">Author:PinkSmallFan</span></span><br><span class="line"><span class="string">Type:crypto</span></span><br><span class="line"><span class="string">Detail:莫斯密码</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">morse</span><span class="params">(lstr)</span>:</span></span><br><span class="line">    flag = <span class="string">''</span></span><br><span class="line">    data = lstr.split(<span class="string">' '</span>)</span><br><span class="line">    dict = &#123;<span class="string">'.-'</span>: <span class="string">'A'</span>,</span><br><span class="line">            <span class="string">'-...'</span>: <span class="string">'B'</span>,</span><br><span class="line">            <span class="string">'-.-.'</span>: <span class="string">'C'</span>,</span><br><span class="line">            <span class="string">'-..'</span>:<span class="string">'D'</span>,</span><br><span class="line">            <span class="string">'.'</span>:<span class="string">'E'</span>,</span><br><span class="line">            <span class="string">'..-.'</span>:<span class="string">'F'</span>,</span><br><span class="line">            <span class="string">'--.'</span>: <span class="string">'G'</span>,</span><br><span class="line">            <span class="string">'....'</span>: <span class="string">'H'</span>,</span><br><span class="line">            <span class="string">'..'</span>: <span class="string">'I'</span>,</span><br><span class="line">            <span class="string">'.---'</span>:<span class="string">'J'</span>,</span><br><span class="line">            <span class="string">'-.-'</span>: <span class="string">'K'</span>,</span><br><span class="line">            <span class="string">'.-..'</span>: <span class="string">'L'</span>,</span><br><span class="line">            <span class="string">'--'</span>: <span class="string">'M'</span>,</span><br><span class="line">            <span class="string">'-.'</span>: <span class="string">'N'</span>,</span><br><span class="line">            <span class="string">'---'</span>: <span class="string">'O'</span>,</span><br><span class="line">            <span class="string">'.--.'</span>: <span class="string">'P'</span>,</span><br><span class="line">            <span class="string">'--.-'</span>: <span class="string">'Q'</span>,</span><br><span class="line">            <span class="string">'.-.'</span>: <span class="string">'R'</span>,</span><br><span class="line">            <span class="string">'...'</span>: <span class="string">'S'</span>,</span><br><span class="line">            <span class="string">'-'</span>: <span class="string">'T'</span>,</span><br><span class="line">            <span class="string">'..-'</span>: <span class="string">'U'</span>,</span><br><span class="line">            <span class="string">'...-'</span>: <span class="string">'V'</span>,</span><br><span class="line">            <span class="string">'.--'</span>: <span class="string">'W'</span>,</span><br><span class="line">            <span class="string">'-..-'</span>: <span class="string">'X'</span>,</span><br><span class="line">            <span class="string">'-.--'</span>: <span class="string">'Y'</span>,</span><br><span class="line">            <span class="string">'--..'</span>: <span class="string">'Z'</span>,</span><br><span class="line">            <span class="string">'.----'</span>: <span class="string">'1'</span>,</span><br><span class="line">            <span class="string">'..---'</span>: <span class="string">'2'</span>,</span><br><span class="line">            <span class="string">'...--'</span>: <span class="string">'3'</span>,</span><br><span class="line">            <span class="string">'....-'</span>: <span class="string">'4'</span>,</span><br><span class="line">            <span class="string">'.....'</span>: <span class="string">'5'</span>,</span><br><span class="line">            <span class="string">'-....'</span>: <span class="string">'6'</span>,</span><br><span class="line">            <span class="string">'--...'</span>: <span class="string">'7'</span>,</span><br><span class="line">            <span class="string">'---..'</span>: <span class="string">'8'</span>,</span><br><span class="line">            <span class="string">'----.'</span>: <span class="string">'9'</span>,</span><br><span class="line">            <span class="string">'-----'</span>: <span class="string">'0'</span>,</span><br><span class="line">            <span class="string">'..--..'</span>: <span class="string">'?'</span>,</span><br><span class="line">            <span class="string">'-..-.'</span>: <span class="string">'/'</span>,</span><br><span class="line">            <span class="string">'-.--.-'</span>: <span class="string">'()'</span>,</span><br><span class="line">            <span class="string">'-....-'</span>: <span class="string">'-'</span>,</span><br><span class="line">            <span class="string">'.-.-.-'</span>: <span class="string">'.'</span></span><br><span class="line">            &#125;;</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> data:</span><br><span class="line">        flag+=dict[item]</span><br><span class="line">    <span class="keyword">return</span> flag</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(lstr)</span>:</span></span><br><span class="line">    print(lstr)</span><br><span class="line">    result = morse(lstr)</span><br><span class="line">    print(result)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="comment">#  example</span></span><br><span class="line"><span class="comment"># print('helloworld')</span></span><br><span class="line"><span class="comment"># abc='-.- .. --.- .-.. .-- - ..-. -.-. --.- --. -. ... --- ---'</span></span><br><span class="line"><span class="comment"># main(abc)</span></span><br><span class="line"><span class="comment"># result为KIQLWTFCQGNSOO</span></span><br></pre></td></tr></table></figure><h4 id="替换密码"><a href="#替换密码" class="headerlink" title="替换密码"></a>替换密码</h4><p>qwe替换abc，即键盘的qwert…键盘从上到下，从左到右转换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">Title:QWECode</span></span><br><span class="line"><span class="string">Author:PinkSmallFan</span></span><br><span class="line"><span class="string">Type:crypto</span></span><br><span class="line"><span class="string">Detail:替换密码</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">qweDecode</span><span class="params">(lstr)</span>:</span></span><br><span class="line">    qweData = <span class="string">'QWERTYUIOPASDFGHJKLZXCVBNM'</span></span><br><span class="line">    abcData = <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span></span><br><span class="line">    returnStr = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> lstr:</span><br><span class="line">        returnStr += abcData[qweData.index(data.upper())]</span><br><span class="line">    <span class="keyword">return</span> returnStr</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(lstr)</span>:</span></span><br><span class="line">    print(lstr)</span><br><span class="line">    result = qweDecode(lstr)</span><br><span class="line">    print(result)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="comment"># example</span></span><br><span class="line"><span class="comment"># data='KIQLWTFCQGNSOO'</span></span><br><span class="line"><span class="comment"># main(data)</span></span><br><span class="line"><span class="comment"># RHASBENVAOYLII</span></span><br></pre></td></tr></table></figure><h4 id="栏删密码"><a href="#栏删密码" class="headerlink" title="栏删密码"></a>栏删密码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">Title:FenceCode</span></span><br><span class="line"><span class="string">Author:PinkSmallFan</span></span><br><span class="line"><span class="string">Type:crypto</span></span><br><span class="line"><span class="string">Detail:栏删密码</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fenceDecode</span><span class="params">(lstr)</span>:</span></span><br><span class="line"></span><br><span class="line">    decodeStr = <span class="string">''</span></span><br><span class="line">    returnStr = <span class="string">''</span></span><br><span class="line">    fenceSize = <span class="number">1</span></span><br><span class="line">    encodeSize = len(lstr)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(round(encodeSize/<span class="number">2</span>)):</span><br><span class="line">        fenceSize = r+<span class="number">1</span></span><br><span class="line">        decodeStr = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> f <span class="keyword">in</span> range(fenceSize):</span><br><span class="line">            <span class="keyword">for</span> e <span class="keyword">in</span> range(encodeSize):</span><br><span class="line">                <span class="keyword">if</span>((f + e) % fenceSize == <span class="number">0</span>):</span><br><span class="line">                    decodeStr += lstr[e]</span><br><span class="line"></span><br><span class="line">        returnStr += str(fenceSize) + <span class="string">':'</span> + decodeStr + <span class="string">'\n'</span></span><br><span class="line">    <span class="keyword">return</span> returnStr</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(lstr)</span>:</span></span><br><span class="line">    print(lstr)</span><br><span class="line">    result = fenceDecode(lstr)</span><br><span class="line">    print(result)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myround</span><span class="params">(num)</span>:</span></span><br><span class="line">   <span class="keyword">return</span> int(num)+int(<span class="number">2</span>*num)%<span class="number">2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># example</span></span><br><span class="line"><span class="comment"># data='RHASBENVAOYLII'</span></span><br><span class="line"><span class="comment"># main(data)</span></span><br><span class="line"><span class="comment"># RHASBENVAOYLII</span></span><br><span class="line"><span class="comment"># 1:RHASBENVAOYLII</span></span><br><span class="line"><span class="comment"># 2:RABNAYIHSEVOLI</span></span><br><span class="line"><span class="comment"># 3:RSNOIAEALHBVYI</span></span><br><span class="line"><span class="comment"># 4:RBAISVLANYHEOI</span></span><br><span class="line"><span class="comment"># 5:REYBOSAIAVIHNL</span></span><br><span class="line"><span class="comment"># 6:RNIELBYSOAAHVI</span></span><br><span class="line"><span class="comment"># 7:RVNIEIBLSYAOHA</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># test</span></span><br><span class="line"><span class="comment"># print(myround(6.9/2))</span></span><br><span class="line"><span class="comment"># print(format(5/2, '.1f'))</span></span><br><span class="line"><span class="comment"># print(round(2.5))</span></span><br></pre></td></tr></table></figure><h4 id="倒序"><a href="#倒序" class="headerlink" title="倒序"></a>倒序</h4><p>可以找到栏删密码中，第二个合适，即ILOVESHIYANBAR，接着大小写都试一下，就完成啦~</p>]]></content>
      
      
      <categories>
          
          <category> 实验吧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 密码学 </tag>
            
            <tag> other </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>RSA</title>
      <link href="./2018/11/09/2018-11-9-RSA/"/>
      <url>./2018/11/09/2018-11-9-RSA/</url>
      
        <content type="html"><![CDATA[<h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><h3 id="gmpy2"><a href="#gmpy2" class="headerlink" title="gmpy2"></a>gmpy2</h3><h4 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h4><blockquote><p>import gmpy2<br>divm(…)<br>divm(a, b, m) returns x such that b <em> x == a modulo m. Raises a ZeroDivisionError exception if no such value x exists.<br>invert(…)<br>invert(x, m) returns y such that x </em> y == 1 modulo m, or 0 if no such y exists.</p><p><strong>mpz(…)</strong></p><p>mpz() returns a new <em>mpz</em> object set to 0.</p><p>mpz(n) returns a new <em>mpz</em> object from a numeric value <em>n</em>. If <em>n</em> is not an integer, it will be truncated to an integer.</p><p>mpz(s[, base=0]) returns a new <em>mpz</em> object from a string <em>s</em> made of digits in the given base. If base = 0, thn binary, octal, or hex Python strings are recognized by leading 0b, 0o, or 0x characters. Otherwise the string is assumed to be decimal. Values for base can range between 2 and 62.</p></blockquote><h4 id="常用例子"><a href="#常用例子" class="headerlink" title="常用例子"></a>常用例子</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 已知p、q、e，求d</span></span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">p =gmpy2.mpz(<span class="number">17</span>)</span><br><span class="line">q =gmpy2.mpz(<span class="number">5</span>)</span><br><span class="line">e =gmpy2.mpz(<span class="number">7</span>)</span><br><span class="line">phi_n= (p - <span class="number">1</span>) * (q - <span class="number">1</span>)</span><br><span class="line">d = gmpy2.invert(e, phi_n)</span><br><span class="line">print(<span class="string">"d is:"</span>)</span><br><span class="line"><span class="keyword">print</span> (d)</span><br></pre></td></tr></table></figure><h3 id="pow"><a href="#pow" class="headerlink" title="pow"></a>pow</h3><h4 id="引用-1"><a href="#引用-1" class="headerlink" title="引用"></a>引用</h4><blockquote><p>pow(…)<br>pow(x, y, m) returns n such that x ^ y == 1 modulo m. Raises a ZeroDivisionError exception if no such value n exists.</p></blockquote><h4 id="常用例子-1"><a href="#常用例子-1" class="headerlink" title="常用例子"></a>常用例子</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">p =gmpy2.mpz(<span class="number">9648423029010515676590551740010426534945737639235739800643989352039852507298491399561035009163427050370107570733633350911691280297777160200625281665378483</span>)</span><br><span class="line">q =gmpy2.mpz(<span class="number">11874843837980297032092405848653656852760910154543380907650040190704283358909208578251063047732443992230647903887510065547947313543299303261986053486569407</span>)</span><br><span class="line">e =gmpy2.mpz(<span class="number">65537</span>)</span><br><span class="line">phi_n= (p - <span class="number">1</span>) * (q - <span class="number">1</span>)</span><br><span class="line">n=p*q</span><br><span class="line">d = gmpy2.invert(e, phi_n)</span><br><span class="line">c=gmpy2.mpz(<span class="number">83208298995174604174773590298203639360540024871256126892889661345742403314929861939100492666605647316646576486526217457006376842280869728581726746401583705899941768214138742259689334840735633553053887641847651173776251820293087212885670180367406807406765923638973161375817392737747832762751690104423869019034</span>)</span><br><span class="line">m=pow(c,d,n)</span><br><span class="line">print(<span class="string">"Message is :"</span>)</span><br><span class="line">print(m)</span><br></pre></td></tr></table></figure><p><a href="https://www.freebuf.com/articles/others-articles/166049.html" target="_blank" rel="noopener">引用地址</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 密码学 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>微服务实践笔记</title>
      <link href="./2018/11/08/2018-11-8-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%AE%9E%E8%B7%B5%E7%AC%94%E8%AE%B0/"/>
      <url>./2018/11/08/2018-11-8-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%AE%9E%E8%B7%B5%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<ul><li style="list-style: none"><input type="checkbox" checked> 【宿舍】使用SpringBoot快速构建RESTful API应用</li><li style="list-style: none"><input type="checkbox"> 【公司】业务平台Spring改为SpringBoot项目</li><li style="list-style: none"><input type="checkbox"> 【公司】SpringBoot的单元测试</li><li style="list-style: none"><input type="checkbox" checked> 【宿舍】SpringBoot的热部署等配置</li><li style="list-style: none"><input type="checkbox"> 【宿舍】SpringCloud的初体验</li><li style="list-style: none"><input type="checkbox"> 【公司】建立activeMQ，并与redis做结合</li><li style="list-style: none"><input type="checkbox"> 【公司】将SpringBoot项目拆分为微服务</li><li style="list-style: none"><input type="checkbox"> 【宿舍】实现将微服务注册到EurkaServer上</li><li style="list-style: none"><input type="checkbox"> 【宿舍】SpringBoot容错处理搭建Hystrix</li><li style="list-style: none"><input type="checkbox"> 【宿舍】使用Ribbin实现客户端负载均衡</li><li style="list-style: none"><input type="checkbox"> 【宿舍】实现Hystrix Dashboard可视化监控数据</li><li style="list-style: none"><input type="checkbox"> 【公司】Elasticsearch日志存储系统搭建</li><li style="list-style: none"><input type="checkbox"> 【公司】Logstash日志收集系统搭建</li><li style="list-style: none"><input type="checkbox"> 【公司】Kiaabna日志查询系统搭建</li><li style="list-style: none"><input type="checkbox"> 【宿舍】ELK日志中心搭建</li><li style="list-style: none"><input type="checkbox"> 【宿舍】自主搭建系统监控中心</li><li style="list-style: none"><input type="checkbox"> 【宿舍】Dubbo的初体验</li><li style="list-style: none"><input type="checkbox"> 【宿舍】jenkins的持续集成搭建</li><li style="list-style: none"><input type="checkbox"> 【宿舍】Docker镜像下载与构建</li><li style="list-style: none"><input type="checkbox"> 【宿舍】使用Docker Registry打造私有镜像仓库</li><li style="list-style: none"><input type="checkbox"> 【宿舍】使用Spring Cloud Bus实现配置的自动刷新</li></ul><h2 id="SpringBoot快速构建RESTful-API应用"><a href="#SpringBoot快速构建RESTful-API应用" class="headerlink" title="SpringBoot快速构建RESTful API应用"></a>SpringBoot快速构建RESTful API应用</h2><h3 id="搭建SpringBoot项目"><a href="#搭建SpringBoot项目" class="headerlink" title="搭建SpringBoot项目"></a>搭建SpringBoot项目</h3><h4 id="pom依赖"><a href="#pom依赖" class="headerlink" title="pom依赖"></a>pom依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.spring<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>example<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>example<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.restdocs<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-restdocs-mockmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="bo实体类"><a href="#bo实体类" class="headerlink" title="bo实体类"></a>bo实体类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> id;</span><br><span class="line">    <span class="keyword">private</span> String content;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(<span class="keyword">long</span> id, String content)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id=id;</span><br><span class="line">        <span class="keyword">this</span>.content=content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getId</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getContent</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> content;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Control层-REST-GET-POST-PUT-DELETE"><a href="#Control层-REST-GET-POST-PUT-DELETE" class="headerlink" title="Control层(REST, GET/POST/PUT/DELETE)"></a>Control层(REST, GET/POST/PUT/DELETE)</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String template = <span class="string">"Hello, %s"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> AtomicLong counter = <span class="keyword">new</span> AtomicLong();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/greeting"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">greeting</span><span class="params">(@RequestParam(value = <span class="string">"name"</span>, defaultValue = <span class="string">"world"</span>)</span>String name)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> User(counter.incrementAndGet(), String.format(template, name));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/users"</span>)</span><br><span class="line">    <span class="keyword">public</span> ResponseEntity&lt;List&lt;User&gt;&gt; getUser()&#123;</span><br><span class="line"></span><br><span class="line">        List&lt;User&gt; users = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        users.add(<span class="keyword">new</span> User(<span class="number">1</span>, <span class="string">"Bob"</span>));  <span class="comment">//counter.incrementAndGet()</span></span><br><span class="line">        users.add(<span class="keyword">new</span> User(<span class="number">2</span>, <span class="string">"Tom"</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ResponseEntity&lt;&gt;(users, HttpStatus.OK);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/register"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResponseEntity&lt;String&gt; <span class="title">register</span><span class="params">(@Valid User user, BindingResult bindingResult)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(bindingResult.hasErrors())&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ResponseEntity&lt;&gt;(bindingResult.getFieldError().getDefaultMessage(),</span><br><span class="line">                    HttpStatus.BAD_REQUEST);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ResponseEntity&lt;&gt;(<span class="string">"success"</span>, HttpStatus.OK);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PutMapping</span>(<span class="string">"/update"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResponseEntity&lt;User&gt; <span class="title">updateUser</span><span class="params">(User user)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        User uUser = user;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ResponseEntity&lt;&gt;(uUser, HttpStatus.OK);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@DeleteMapping</span>(<span class="string">"/delete"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResponseEntity <span class="title">deleteUser</span><span class="params">(<span class="keyword">long</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ResponseEntity(HttpStatus.OK);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="测试例程"><a href="#测试例程" class="headerlink" title="测试例程"></a>测试例程</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">testUser</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> MockMvc mockMvc = MockMvcBuilders.standaloneSetup(<span class="keyword">new</span> UserController()).build();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testGetUsers</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        mockMvc.perform(MockMvcRequestBuilders.get(<span class="string">"/users"</span>))</span><br><span class="line">                .andExpect(MockMvcResultMatchers.status().isOk())</span><br><span class="line">                .andExpect(MockMvcResultMatchers.content().json(<span class="string">"[&#123;\"id\":1,\"content\":\"Bob\"&#125;,&#123;\"id\":2,\"content\":\"Tom\"&#125;]"</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testRegister</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        mockMvc.perform(MockMvcRequestBuilders.post(<span class="string">"/register"</span>)</span><br><span class="line">                .param(<span class="string">"id"</span>, <span class="string">"1"</span>)</span><br><span class="line">                .param(<span class="string">"content"</span>, <span class="string">"gaga"</span>))</span><br><span class="line">                .andExpect(MockMvcResultMatchers.status().isOk())</span><br><span class="line">                .andExpect(MockMvcResultMatchers.content().string(<span class="string">"success"</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdateUser</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        mockMvc.perform(MockMvcRequestBuilders.put(<span class="string">"/update"</span>)</span><br><span class="line">                .param(<span class="string">"id"</span>, <span class="string">"1"</span>)</span><br><span class="line">                .param(<span class="string">"content"</span>, <span class="string">"tt"</span>))</span><br><span class="line">                .andExpect(MockMvcResultMatchers.status().isOk())</span><br><span class="line">                .andExpect(MockMvcResultMatchers.content().string(<span class="string">"&#123;\"id\":1,\"content\":\"tt\"&#125;"</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDelete</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        mockMvc.perform(MockMvcRequestBuilders.delete(<span class="string">"/delete"</span>)</span><br><span class="line">            .param(<span class="string">"id"</span>,<span class="string">"1"</span>))</span><br><span class="line">                .andExpect(MockMvcResultMatchers.status().isOk())</span><br><span class="line">                .andExpect(MockMvcResultMatchers.content().string(<span class="string">""</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="SpringBoot的热部署等配置"><a href="#SpringBoot的热部署等配置" class="headerlink" title="SpringBoot的热部署等配置"></a>SpringBoot的热部署等配置</h2><h3 id="pom依赖-1"><a href="#pom依赖-1" class="headerlink" title="pom依赖"></a>pom依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>true<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在bulid节点修改为</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!-- fork:如果没有该配置，这个devtools不会起作用，即应用不会restart --&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">fork</span>&gt;</span>true<span class="tag">&lt;/<span class="name">fork</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="编辑器的自动构建"><a href="#编辑器的自动构建" class="headerlink" title="编辑器的自动构建"></a>编辑器的自动构建</h3><h4 id="IDEA"><a href="#IDEA" class="headerlink" title="IDEA"></a>IDEA</h4><ol><li>file ，Settings ，Build ,Execution,Deplment (ctrl+shift+alt+S)，选择Compiler，对“Build project automaticaly”打钩。</li><li>Shift+ALT+Ctrl+/ ，选择Registry，修改默认注册关系，找“complier.automake.allow.when.app.running”，打钩后选择Close</li></ol><h4 id="eclipse"><a href="#eclipse" class="headerlink" title="eclipse"></a>eclipse</h4><ol><li>导航栏，选择Build ，勾选Build Automaticaly</li></ol><h2 id="Spring-Cloud搭建Eureka"><a href="#Spring-Cloud搭建Eureka" class="headerlink" title="Spring Cloud搭建Eureka"></a>Spring Cloud搭建Eureka</h2><h3 id="搭建一个maven主工程project"><a href="#搭建一个maven主工程project" class="headerlink" title="搭建一个maven主工程project"></a>搭建一个maven主工程project</h3><h4 id="IDEA-1"><a href="#IDEA-1" class="headerlink" title="IDEA"></a>IDEA</h4><ol><li><p>File-new-project</p></li><li><p>选择maven项目</p></li></ol><h3 id="搭建一个服务注册中心的model工程"><a href="#搭建一个服务注册中心的model工程" class="headerlink" title="搭建一个服务注册中心的model工程"></a>搭建一个服务注册中心的model工程</h3><h4 id="IDEA-2"><a href="#IDEA-2" class="headerlink" title="IDEA"></a>IDEA</h4><ol><li>File-new-model</li><li>选择Spring initialir项目</li><li>选择Cloud Discovery-Eureka Server</li></ol><p>PS:因人而异， Group：com.example、Artifact：eurekaserver</p><h4 id="POM"><a href="#POM" class="headerlink" title="POM"></a>POM</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>eurekaserver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>eurekaserver<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot eurekaServer<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Greenwich.M1<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span><span class="comment">&lt;!-- Version is important --&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!-- fork:如果没有该配置，这个devtools不会起作用，即应用不会restart --&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">fork</span>&gt;</span>true<span class="tag">&lt;/<span class="name">fork</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>spring-milestones<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>Spring Milestones<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://repo.spring.io/milestone<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="启动服务注册中心"><a href="#启动服务注册中心" class="headerlink" title="启动服务注册中心"></a>启动服务注册中心</h4><ol><li>在对应Eurekaserver的Application中添加注解@EnableEurekaServer</li><li>启动应用</li><li>打开网页：<a href="http://localhost:8080" target="_blank" rel="noopener">http://localhost:8080</a></li><li>可以看到DS Replicas有一个localhost的工程</li></ol><h4 id="配置服务注册中心"><a href="#配置服务注册中心" class="headerlink" title="配置服务注册中心"></a>配置服务注册中心</h4><ol><li>将resources资源目录下，默认的application.properties改为application.yml</li><li>指定server</li><li>设置eureka.client.registerWithEureka与eureka.client.fetchRegistry为false</li><li>重新启动服务注册中心</li><li>可以看到DS Replicas，No instances available</li><li>application.yml</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8761</span></span><br><span class="line"></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  instance:</span></span><br><span class="line"><span class="attr">    hostname:</span> <span class="string">localhost</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    registerWithEureka:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    fetchRegistry:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    serviceUrl:</span></span><br><span class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://$&#123;eureka.instance.hostname&#125;:$&#123;server.port&#125;/eureka/</span></span><br></pre></td></tr></table></figure><ol start="7"><li>eurekaServerApplication(src-main-java下)</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.eurekaserver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;</span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableEurekaServer</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EurekaserverApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(EurekaserverApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="搭建一个服务提供者的model工程"><a href="#搭建一个服务提供者的model工程" class="headerlink" title="搭建一个服务提供者的model工程"></a>搭建一个服务提供者的model工程</h3><h4 id="IDEA-3"><a href="#IDEA-3" class="headerlink" title="IDEA"></a>IDEA</h4><ol><li>File-new-model</li><li>选择Spring initialir项目</li><li>选择Cloud Discovery-Eureka Client</li></ol><h4 id="POM-1"><a href="#POM-1" class="headerlink" title="POM"></a>POM</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>eurekaclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>eurekaclient<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Greenwich.M1<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!-- fork:如果没有该配置，这个devtools不会起作用，即应用不会restart --&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">fork</span>&gt;</span>true<span class="tag">&lt;/<span class="name">fork</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>spring-milestones<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>Spring Milestones<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://repo.spring.io/milestone<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="配置服务提供者"><a href="#配置服务提供者" class="headerlink" title="配置服务提供者"></a>配置服务提供者</h4><ol><li>将resources资源目录下，默认的application.properties改为application.yml</li><li>指定server</li><li>重新启动服务提供者（前提是已启动了服务注册中心）</li><li>可以看到DS Replicas，<strong>SERVICE-HELLOCLIENT</strong></li><li>application.yml</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  instance:</span></span><br><span class="line"><span class="attr">    hostname:</span> <span class="string">localhost</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    serviceUrl:</span></span><br><span class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://$&#123;eureka.instance.hostname&#125;:8761/eureka/</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">service-helloClient</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8762</span></span><br></pre></td></tr></table></figure><ol start="6"><li>eurekaClientApplication(src-main-java下)</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.eurekaclient;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.EnableEurekaClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EurekaclientApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(EurekaclientApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;server.port&#125;"</span>)</span><br><span class="line">    String port;</span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"helloClient"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">helloClient</span><span class="params">(@RequestParam String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"helloWorld,client:"</span>+name+<span class="string">", port:"</span>+port;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="启动服务提供者"><a href="#启动服务提供者" class="headerlink" title="启动服务提供者"></a>启动服务提供者</h4><ol><li>启动服务提供者，8762端口启用</li><li>url输入：<a href="http://localhost:8762/helloClient?name=PinkSmallFan" target="_blank" rel="noopener">http://localhost:8762/helloClient?name=PinkSmallFan</a></li><li>显示：helloWorld,client:PinkSmallFan, port:8762</li></ol><h3 id="搭建一个负载均衡ribbon"><a href="#搭建一个负载均衡ribbon" class="headerlink" title="搭建一个负载均衡ribbon"></a>搭建一个负载均衡ribbon</h3><h4 id="IDEA-4"><a href="#IDEA-4" class="headerlink" title="IDEA"></a>IDEA</h4><ol><li><p>将一个实例配置为多个实例</p><p>1）选择应用运行的“Edit configuration”</p><p>2）在对应Spring Boot上，选择对应的项目，并取消“Single instance only”</p><p>3）启动项目</p><p>4）项目启动成功后，修改对应的端口</p><p>5）再次启动（两个不同端口的实例）</p></li><li><p>搭建一个spring-boot工程（参考搭建服务提供者）</p></li><li><p>pom继承父类pom文件</p></li></ol><h4 id="POM-2"><a href="#POM-2" class="headerlink" title="POM"></a>POM</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>eurekaribbon<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>eurekaribbon<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>eurekaserver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Greenwich.M1<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-ribbon<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>spring-milestones<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>Spring Milestones<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://repo.spring.io/milestone<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="配置服务消费者"><a href="#配置服务消费者" class="headerlink" title="配置服务消费者"></a>配置服务消费者</h4><ol><li>将resources资源目录下，默认的application.properties改为application.yml</li><li>指定server</li><li>重新启动服务消费者者（前提是已启动了服务注册中心、服务提供者）</li><li>可以看到DS Replicas，SERVICE-HELLOCLIENT，<strong>SERVICE-RIBBON</strong></li><li>application.yml</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  instance:</span></span><br><span class="line"><span class="attr">    hostname:</span> <span class="string">localhost</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    serviceUrl:</span></span><br><span class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://$&#123;eureka.instance.hostname&#125;:8761/eureka/</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">service-ribbon</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8764</span></span><br></pre></td></tr></table></figure><ol start="6"><li>eurekaRibbonApplication(src-main-java下)</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.eurekaribbon;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.loadbalancer.LoadBalanced;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.EnableEurekaClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EurekaribbonApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(EurekaribbonApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@LoadBalanced</span></span><br><span class="line">    <span class="function">RestTemplate <span class="title">restTemplate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RestTemplate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 这里选用了默认的策略：ZoneAvoidanceRule，复合判断server所在区域的性能和server的可用性选择server</span></span><br></pre></td></tr></table></figure><ol start="7"><li>配置一个Service</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.eurekaribbon;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> restTemplate.getForObject(<span class="string">"http://SERVICE-HELLOCLIENT/helloClient?name="</span>+name, String.class);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="8"><li>配置一个Controller</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.eurekaribbon;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    TestService testService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(value=<span class="string">"/helloClient"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">helloClient</span><span class="params">(@RequestParam String name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> testService.hello(name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="配置负载均衡策略"><a href="#配置负载均衡策略" class="headerlink" title="配置负载均衡策略"></a>配置负载均衡策略</h4><h4 id="启动服务消费者"><a href="#启动服务消费者" class="headerlink" title="启动服务消费者"></a>启动服务消费者</h4><ol><li>启动服务消费者者，8764端口启用</li><li>url输入：<a href="http://localhost:8764/helloClient?name=PinkSmallFan" target="_blank" rel="noopener">http://localhost:8764/helloClient?name=PinkSmallFan</a></li><li>多次访问，交替显示：</li></ol><p>helloWorld,client:PinkSmallFan, port:8762 </p><p>helloWorld,client:PinkSmallFan, port:8763</p><h3 id="搭建一个服务消费者feign"><a href="#搭建一个服务消费者feign" class="headerlink" title="搭建一个服务消费者feign"></a>搭建一个服务消费者feign</h3><h4 id="IDEA-5"><a href="#IDEA-5" class="headerlink" title="IDEA"></a>IDEA</h4><ol><li><p>将一个实例配置为多个实例</p><p>1）选择应用运行的“Edit configuration”</p><p>2）在对应Spring Boot上，选择对应的项目，并取消“Single instance only”</p><p>3）启动项目</p></li><li><p>搭建一个spring-boot工程</p></li><li><p>pom继承父类pom文件</p></li></ol><h4 id="POM-3"><a href="#POM-3" class="headerlink" title="POM"></a>POM</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>eurekafeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>eurekafeign<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>eurekaserver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Greenwich.M1<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.ecwid<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ecwid-mailchimp<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>spring-milestones<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>Spring Milestones<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://repo.spring.io/milestone<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="配置服务消费者-1"><a href="#配置服务消费者-1" class="headerlink" title="配置服务消费者"></a>配置服务消费者</h4><ol><li>将resources资源目录下，默认的application.properties改为application.yml</li><li>指定server</li><li>重新启动服务消费者者（前提是已启动了服务注册中心、服务提供者）</li><li>可以看到DS Replicas，SERVICE-HELLOCLIENT，SERVICE-RIBBON，<strong>SERVICE-FEIGN</strong></li><li>application.yml</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  instance:</span></span><br><span class="line"><span class="attr">    hostname:</span> <span class="string">localhost</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    serviceUrl:</span></span><br><span class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://$&#123;eureka.instance.hostname&#125;:8761/eureka/</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">service-feign</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8765</span></span><br></pre></td></tr></table></figure><ol><li>eurekaFeignApplication(src-main-java下)</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.eurekafeign;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.EnableEurekaClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.openfeign.EnableFeignClients;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="meta">@EnableFeignClients</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EurekafeignApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(EurekafeignApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>定义一个对外的接口，对应client的</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.eurekafeign;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.openfeign.FeignClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"></span><br><span class="line"><span class="meta">@FeignClient</span>(value = <span class="string">"service-helloClient"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TestServiceInterface</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/helloClient"</span>, method = RequestMethod.GET)</span><br><span class="line">    <span class="function">String <span class="title">sayHello</span><span class="params">(@RequestParam(value = <span class="string">"name"</span>)</span> String name)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/** in client</span></span><br><span class="line"><span class="comment"><span class="doctag">@Value</span>("$&#123;server.port&#125;")</span></span><br><span class="line"><span class="comment">    String port;</span></span><br><span class="line"><span class="comment">    <span class="doctag">@RequestMapping</span>("helloClient")</span></span><br><span class="line"><span class="comment">    public String helloClient(<span class="doctag">@RequestParam</span> String name) &#123;</span></span><br><span class="line"><span class="comment">        return "helloWorld,client:"+name+", port:"+port;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><ol start="2"><li>配置一个Controller</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.eurekafeign;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    TestServiceInterface service;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(value = <span class="string">"/helloClient"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">(@RequestParam String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> service.sayHello(name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="启动服务消费者-1"><a href="#启动服务消费者-1" class="headerlink" title="启动服务消费者"></a>启动服务消费者</h4><ol><li>启动服务消费者者Feign，8765端口启用</li><li>url输入：<a href="http://localhost:8765/helloClient?name=PinkSmallFan" target="_blank" rel="noopener">http://localhost:8765/helloClient?name=PinkSmallFan</a></li><li>多次访问，交替显示：</li></ol><p>helloWorld,client:PinkSmallFan, port:8762 </p><p>helloWorld,client:PinkSmallFan, port:8763</p><h3 id="添加一个断路器Hystrix"><a href="#添加一个断路器Hystrix" class="headerlink" title="添加一个断路器Hystrix"></a>添加一个断路器Hystrix</h3><h4 id="在ribbon上使用断路器"><a href="#在ribbon上使用断路器" class="headerlink" title="在ribbon上使用断路器"></a>在ribbon上使用断路器</h4><h5 id="pom添加依赖节点"><a href="#pom添加依赖节点" class="headerlink" title="pom添加依赖节点"></a>pom添加依赖节点</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--hystrix 断路器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-hystrix<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="配置断路器"><a href="#配置断路器" class="headerlink" title="配置断路器"></a>配置断路器</h5><ol><li>Application上添加EnableHystrix注释</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableHystrix</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EurekaribbonApplication</span></span>&#123;...&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>Service层添加注释，与对应短路后的处理方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.eurekaribbon;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@HystrixCommand</span>(fallbackMethod=<span class="string">"helloError"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> restTemplate.getForObject(<span class="string">"http://SERVICE-HELLOCLIENT/helloClient?name="</span>+name, String.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">helloError</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hello,"</span>+name+<span class="string">",sorry, it's error now!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="启动服务消费者ribbon"><a href="#启动服务消费者ribbon" class="headerlink" title="启动服务消费者ribbon"></a>启动服务消费者ribbon</h5><ol><li>启动服务消费者者 Ribbon，8764端口启用</li><li>url输入：<a href="http://localhost:8764/helloClient?name=PinkSmallFan" target="_blank" rel="noopener">http://localhost:8764/helloClient?name=PinkSmallFan</a></li><li>多次访问，交替显示：</li></ol><p>helloWorld,client:PinkSmallFan, port:8762 </p><p>helloWorld,client:PinkSmallFan, port:8763</p><ol start="4"><li><p>关闭一个client工程（8763），再次访问<a href="http://localhost:8764/helloClient?name=PinkSmallFan" target="_blank" rel="noopener">http://localhost:8764/helloClient?name=PinkSmallFan</a></p></li><li><p>多次访问，交替显示：</p></li></ol><p>helloWorld,client:PinkSmallFan, port:8762 </p><p>hello,PinkSmallFan,sorry, it’s error now!</p><ol start="6"><li><p>关闭一个client工程（8762），再次访问<a href="http://localhost:8764/helloClient?name=PinkSmallFan" target="_blank" rel="noopener">http://localhost:8764/helloClient?name=PinkSmallFan</a></p></li><li><p>多次访问，显示：</p></li></ol><p>hello,PinkSmallFan,sorry, it’s error now!</p><h4 id="在feign上使用断路器"><a href="#在feign上使用断路器" class="headerlink" title="在feign上使用断路器"></a>在feign上使用断路器</h4><h5 id="配置启动断路器"><a href="#配置启动断路器" class="headerlink" title="配置启动断路器"></a>配置启动断路器</h5><p>在application.yml上添加开启feign的hystrix功能（默认是关闭的）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">feign:</span></span><br><span class="line"><span class="attr">  hystrix:</span></span><br><span class="line"><span class="attr">    enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h5 id="断路时的实现接口"><a href="#断路时的实现接口" class="headerlink" title="断路时的实现接口"></a>断路时的实现接口</h5><p>​    新建一个类TestServiceHystrix，实现TestServiceInterface接口，用于在断路时的显示</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestServiceHystrix</span> <span class="keyword">implements</span> <span class="title">TestServiceInterface</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hello,"</span>+name+<span class="string">",error now."</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="配置fallback"><a href="#配置fallback" class="headerlink" title="配置fallback"></a>配置fallback</h5><p>在TestServiceInterface接口上添加fallback的注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@FeignClient</span>(value = <span class="string">"service-helloClient"</span>, fallback = TestServiceHystrix.class)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TestServiceInterface</span> </span>&#123;...&#125;</span><br></pre></td></tr></table></figure><h5 id="启动服务消费者Feign"><a href="#启动服务消费者Feign" class="headerlink" title="启动服务消费者Feign"></a>启动服务消费者Feign</h5><ol><li>启动服务消费者者Feign，8765端口启用，client未启动</li><li>url输入：<a href="http://localhost:8765/helloClient?name=PinkSmallFan" target="_blank" rel="noopener">http://localhost:8765/helloClient?name=PinkSmallFan</a></li><li>多次访问，显示：</li></ol><p>hello,PinkSmallFan,error now.</p><ol><li>开启一个client工程（8762），再次访问<a href="http://localhost:8765/helloClient?name=PinkSmallFan" target="_blank" rel="noopener">http://localhost:8765/helloClient?name=PinkSmallFan</a></li><li>多次访问，显示：</li></ol><p>helloWorld,client:PinkSmallFan, port:8762 </p>]]></content>
      
      
      <categories>
          
          <category> 微服务 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Base64编码</title>
      <link href="./2018/11/07/2018-11-7-Base64%E7%BC%96%E7%A0%81/"/>
      <url>./2018/11/07/2018-11-7-Base64%E7%BC%96%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h2 id="伪代码流程"><a href="#伪代码流程" class="headerlink" title="伪代码流程"></a>伪代码流程</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Base64编解码器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Base64Encoder</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">byte</span>[] encodingTable =</span><br><span class="line">&#123;</span><br><span class="line">(<span class="keyword">byte</span>) <span class="string">'A'</span>, (<span class="keyword">byte</span>) <span class="string">'B'</span>,</span><br><span class="line">(<span class="keyword">byte</span>) <span class="string">'C'</span>, (<span class="keyword">byte</span>) <span class="string">'D'</span>, (<span class="keyword">byte</span>) <span class="string">'E'</span>, (<span class="keyword">byte</span>) <span class="string">'F'</span>, (<span class="keyword">byte</span>) <span class="string">'G'</span>,</span><br><span class="line">(<span class="keyword">byte</span>) <span class="string">'H'</span>, (<span class="keyword">byte</span>) <span class="string">'I'</span>, (<span class="keyword">byte</span>) <span class="string">'J'</span>, (<span class="keyword">byte</span>) <span class="string">'K'</span>, (<span class="keyword">byte</span>) <span class="string">'L'</span>,</span><br><span class="line">(<span class="keyword">byte</span>) <span class="string">'M'</span>, (<span class="keyword">byte</span>) <span class="string">'N'</span>, (<span class="keyword">byte</span>) <span class="string">'O'</span>, (<span class="keyword">byte</span>) <span class="string">'P'</span>, (<span class="keyword">byte</span>) <span class="string">'Q'</span>,</span><br><span class="line">(<span class="keyword">byte</span>) <span class="string">'R'</span>, (<span class="keyword">byte</span>) <span class="string">'S'</span>, (<span class="keyword">byte</span>) <span class="string">'T'</span>, (<span class="keyword">byte</span>) <span class="string">'U'</span>, (<span class="keyword">byte</span>) <span class="string">'V'</span>,</span><br><span class="line">(<span class="keyword">byte</span>) <span class="string">'W'</span>, (<span class="keyword">byte</span>) <span class="string">'X'</span>, (<span class="keyword">byte</span>) <span class="string">'Y'</span>, (<span class="keyword">byte</span>) <span class="string">'Z'</span>, (<span class="keyword">byte</span>) <span class="string">'a'</span>,</span><br><span class="line">(<span class="keyword">byte</span>) <span class="string">'b'</span>, (<span class="keyword">byte</span>) <span class="string">'c'</span>, (<span class="keyword">byte</span>) <span class="string">'d'</span>, (<span class="keyword">byte</span>) <span class="string">'e'</span>, (<span class="keyword">byte</span>) <span class="string">'f'</span>,</span><br><span class="line">(<span class="keyword">byte</span>) <span class="string">'g'</span>, (<span class="keyword">byte</span>) <span class="string">'h'</span>, (<span class="keyword">byte</span>) <span class="string">'i'</span>, (<span class="keyword">byte</span>) <span class="string">'j'</span>, (<span class="keyword">byte</span>) <span class="string">'k'</span>,</span><br><span class="line">(<span class="keyword">byte</span>) <span class="string">'l'</span>, (<span class="keyword">byte</span>) <span class="string">'m'</span>, (<span class="keyword">byte</span>) <span class="string">'n'</span>, (<span class="keyword">byte</span>) <span class="string">'o'</span>, (<span class="keyword">byte</span>) <span class="string">'p'</span>,</span><br><span class="line">(<span class="keyword">byte</span>) <span class="string">'q'</span>, (<span class="keyword">byte</span>) <span class="string">'r'</span>, (<span class="keyword">byte</span>) <span class="string">'s'</span>, (<span class="keyword">byte</span>) <span class="string">'t'</span>, (<span class="keyword">byte</span>) <span class="string">'u'</span>,</span><br><span class="line">(<span class="keyword">byte</span>) <span class="string">'v'</span>, (<span class="keyword">byte</span>) <span class="string">'w'</span>, (<span class="keyword">byte</span>) <span class="string">'x'</span>, (<span class="keyword">byte</span>) <span class="string">'y'</span>, (<span class="keyword">byte</span>) <span class="string">'z'</span>,</span><br><span class="line">(<span class="keyword">byte</span>) <span class="string">'0'</span>, (<span class="keyword">byte</span>) <span class="string">'1'</span>, (<span class="keyword">byte</span>) <span class="string">'2'</span>, (<span class="keyword">byte</span>) <span class="string">'3'</span>, (<span class="keyword">byte</span>) <span class="string">'4'</span>,</span><br><span class="line">(<span class="keyword">byte</span>) <span class="string">'5'</span>, (<span class="keyword">byte</span>) <span class="string">'6'</span>, (<span class="keyword">byte</span>) <span class="string">'7'</span>, (<span class="keyword">byte</span>) <span class="string">'8'</span>, (<span class="keyword">byte</span>) <span class="string">'9'</span>,</span><br><span class="line">(<span class="keyword">byte</span>) <span class="string">'+'</span>, (<span class="keyword">byte</span>) <span class="string">'/'</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * set up the decoding table.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">byte</span>[] decodingTable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">decodingTable = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">128</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="string">'A'</span>; i &lt;= <span class="string">'Z'</span>; i++) &#123;</span><br><span class="line">decodingTable[i] = (<span class="keyword">byte</span>) (i - <span class="string">'A'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="string">'a'</span>; i &lt;= <span class="string">'z'</span>; i++) &#123;</span><br><span class="line">decodingTable[i] = (<span class="keyword">byte</span>) (i - <span class="string">'a'</span> + <span class="number">26</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="string">'0'</span>; i &lt;= <span class="string">'9'</span>; i++) &#123;</span><br><span class="line">decodingTable[i] = (<span class="keyword">byte</span>) (i - <span class="string">'0'</span> + <span class="number">52</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">decodingTable[<span class="string">'+'</span>] = <span class="number">62</span>;</span><br><span class="line">decodingTable[<span class="string">'/'</span>] = <span class="number">63</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * BASE64编码</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> date : 二进制数组</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 包含BASE64编码后的字符串</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">encode</span><span class="params">(<span class="keyword">byte</span>[] data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">byte</span>[] bytes;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> modulus = data.length % <span class="number">3</span>;</span><br><span class="line"><span class="keyword">if</span> (modulus == <span class="number">0</span>) &#123;</span><br><span class="line">bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">4</span> * data.length / <span class="number">3</span>];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">4</span> * ((data.length / <span class="number">3</span>) + <span class="number">1</span>)];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dataLength = (data.length - modulus);</span><br><span class="line"><span class="keyword">int</span> a1, a2, a3;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>; i &lt; dataLength; i += <span class="number">3</span>, j += <span class="number">4</span>) &#123;</span><br><span class="line">a1 = data[i] &amp; <span class="number">0xff</span>;</span><br><span class="line">a2 = data[i + <span class="number">1</span>] &amp; <span class="number">0xff</span>;</span><br><span class="line">a3 = data[i + <span class="number">2</span>] &amp; <span class="number">0xff</span>;</span><br><span class="line"></span><br><span class="line">bytes[j] = encodingTable[(a1 &gt;&gt;&gt; <span class="number">2</span>) &amp; <span class="number">0x3f</span>];</span><br><span class="line">bytes[j + <span class="number">1</span>] = encodingTable[((a1 &lt;&lt; <span class="number">4</span>) | (a2 &gt;&gt;&gt; <span class="number">4</span>)) &amp; <span class="number">0x3f</span>];</span><br><span class="line">bytes[j + <span class="number">2</span>] = encodingTable[((a2 &lt;&lt; <span class="number">2</span>) | (a3 &gt;&gt;&gt; <span class="number">6</span>)) &amp; <span class="number">0x3f</span>];</span><br><span class="line">bytes[j + <span class="number">3</span>] = encodingTable[a3 &amp; <span class="number">0x3f</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * process the tail end.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">int</span> b1, b2, b3;</span><br><span class="line"><span class="keyword">int</span> d1, d2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (modulus) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>: <span class="comment">/* nothing left to do */</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">d1 = data[data.length - <span class="number">1</span>] &amp; <span class="number">0xff</span>;</span><br><span class="line">b1 = (d1 &gt;&gt;&gt; <span class="number">2</span>) &amp; <span class="number">0x3f</span>;</span><br><span class="line">b2 = (d1 &lt;&lt; <span class="number">4</span>) &amp; <span class="number">0x3f</span>;</span><br><span class="line"></span><br><span class="line">bytes[bytes.length - <span class="number">4</span>] = encodingTable[b1];</span><br><span class="line">bytes[bytes.length - <span class="number">3</span>] = encodingTable[b2];</span><br><span class="line">bytes[bytes.length - <span class="number">2</span>] = (<span class="keyword">byte</span>) <span class="string">'='</span>;</span><br><span class="line">bytes[bytes.length - <span class="number">1</span>] = (<span class="keyword">byte</span>) <span class="string">'='</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">d1 = data[data.length - <span class="number">2</span>] &amp; <span class="number">0xff</span>;</span><br><span class="line">d2 = data[data.length - <span class="number">1</span>] &amp; <span class="number">0xff</span>;</span><br><span class="line"></span><br><span class="line">b1 = (d1 &gt;&gt;&gt; <span class="number">2</span>) &amp; <span class="number">0x3f</span>;</span><br><span class="line">b2 = ((d1 &lt;&lt; <span class="number">4</span>) | (d2 &gt;&gt;&gt; <span class="number">4</span>)) &amp; <span class="number">0x3f</span>;</span><br><span class="line">b3 = (d2 &lt;&lt; <span class="number">2</span>) &amp; <span class="number">0x3f</span>;</span><br><span class="line"></span><br><span class="line">bytes[bytes.length - <span class="number">4</span>] = encodingTable[b1];</span><br><span class="line">bytes[bytes.length - <span class="number">3</span>] = encodingTable[b2];</span><br><span class="line">bytes[bytes.length - <span class="number">2</span>] = encodingTable[b3];</span><br><span class="line">bytes[bytes.length - <span class="number">1</span>] = (<span class="keyword">byte</span>) <span class="string">'='</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> String(bytes);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 判断字符串是否base64字符串</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> str : 字符串</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isbase64str</span><span class="params">(String str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;str.length();i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">char</span> t= str.charAt(i);</span><br><span class="line"><span class="keyword">if</span>(t&gt;=<span class="string">'A'</span> &amp;&amp; t&lt;=<span class="string">'Z'</span>)<span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(t&gt;=<span class="string">'a'</span> &amp;&amp; t&lt;=<span class="string">'z'</span>)<span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(t&gt;=<span class="string">'0'</span> &amp;&amp; t&lt;=<span class="string">'9'</span>)<span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">switch</span>(t)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'+'</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">'/'</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">'='</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">' '</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">'\t'</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">'\n'</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">'\f'</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">'\r'</span>:</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * BASE64解码</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> base64 : base64字符串</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 解码后的原始二进制数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] decode(String base64)</span><br><span class="line">&#123;</span><br><span class="line">base64= base64.replaceAll(<span class="string">"\\s"</span>,<span class="string">""</span>);<span class="comment">//去除所有空格 "[ \t\n\x0B\f\r]"</span></span><br><span class="line"><span class="keyword">byte</span>[] data= base64.getBytes();</span><br><span class="line"><span class="keyword">byte</span>[] bytes;</span><br><span class="line"><span class="keyword">byte</span> b1, b2, b3, b4;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(data[data.length - <span class="number">2</span>] == <span class="string">'='</span>) &#123;</span><br><span class="line">bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[(((data.length / <span class="number">4</span>) - <span class="number">1</span>) * <span class="number">3</span>) + <span class="number">1</span>];</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (data[data.length - <span class="number">1</span>] == <span class="string">'='</span>) &#123;</span><br><span class="line">bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[(((data.length / <span class="number">4</span>) - <span class="number">1</span>) * <span class="number">3</span>) + <span class="number">2</span>];</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[((data.length / <span class="number">4</span>) * <span class="number">3</span>)];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>; i &lt; data.length - <span class="number">4</span>; i += <span class="number">4</span>, j += <span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line">b1 = decodingTable[data[i]];</span><br><span class="line">b2 = decodingTable[data[i + <span class="number">1</span>]];</span><br><span class="line">b3 = decodingTable[data[i + <span class="number">2</span>]];</span><br><span class="line">b4 = decodingTable[data[i + <span class="number">3</span>]];</span><br><span class="line"></span><br><span class="line">bytes[j] = (<span class="keyword">byte</span>) ((b1 &lt;&lt; <span class="number">2</span>) | (b2 &gt;&gt; <span class="number">4</span>));</span><br><span class="line">bytes[j + <span class="number">1</span>] = (<span class="keyword">byte</span>) ((b2 &lt;&lt; <span class="number">4</span>) | (b3 &gt;&gt; <span class="number">2</span>));</span><br><span class="line">bytes[j + <span class="number">2</span>] = (<span class="keyword">byte</span>) ((b3 &lt;&lt; <span class="number">6</span>) | b4);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (data[data.length - <span class="number">2</span>] == <span class="string">'='</span>) &#123;</span><br><span class="line">b1 = decodingTable[data[data.length - <span class="number">4</span>]];</span><br><span class="line">b2 = decodingTable[data[data.length - <span class="number">3</span>]];</span><br><span class="line"></span><br><span class="line">bytes[bytes.length - <span class="number">1</span>] = (<span class="keyword">byte</span>) ((b1 &lt;&lt; <span class="number">2</span>) | (b2 &gt;&gt; <span class="number">4</span>));</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (data[data.length - <span class="number">1</span>] == <span class="string">'='</span>) &#123;</span><br><span class="line">b1 = decodingTable[data[data.length - <span class="number">4</span>]];</span><br><span class="line">b2 = decodingTable[data[data.length - <span class="number">3</span>]];</span><br><span class="line">b3 = decodingTable[data[data.length - <span class="number">2</span>]];</span><br><span class="line"></span><br><span class="line">bytes[bytes.length - <span class="number">2</span>] = (<span class="keyword">byte</span>) ((b1 &lt;&lt; <span class="number">2</span>) | (b2 &gt;&gt; <span class="number">4</span>));</span><br><span class="line">bytes[bytes.length - <span class="number">1</span>] = (<span class="keyword">byte</span>) ((b2 &lt;&lt; <span class="number">4</span>) | (b3 &gt;&gt; <span class="number">2</span>));</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">b1 = decodingTable[data[data.length - <span class="number">4</span>]];</span><br><span class="line">b2 = decodingTable[data[data.length - <span class="number">3</span>]];</span><br><span class="line">b3 = decodingTable[data[data.length - <span class="number">2</span>]];</span><br><span class="line">b4 = decodingTable[data[data.length - <span class="number">1</span>]];</span><br><span class="line"></span><br><span class="line">bytes[bytes.length - <span class="number">3</span>] = (<span class="keyword">byte</span>) ((b1 &lt;&lt; <span class="number">2</span>) | (b2 &gt;&gt; <span class="number">4</span>));</span><br><span class="line">bytes[bytes.length - <span class="number">2</span>] = (<span class="keyword">byte</span>) ((b2 &lt;&lt; <span class="number">4</span>) | (b3 &gt;&gt; <span class="number">2</span>));</span><br><span class="line">bytes[bytes.length - <span class="number">1</span>] = (<span class="keyword">byte</span>) ((b3 &lt;&lt; <span class="number">6</span>) | b4);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> bytes;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 密码学 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python常用</title>
      <link href="./2018/11/04/2018-11-4-python%E5%B8%B8%E7%94%A8/"/>
      <url>./2018/11/04/2018-11-4-python%E5%B8%B8%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ord()<span class="comment"># 将char数据转为ASCII数据，例如：'0'转为48,ord('0')</span></span><br><span class="line">chr()<span class="comment"># 将ASCII数据转为char数据，例如：65转为'A',chr(65)</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>实验吧（困在栅栏里的凯撒）</title>
      <link href="./2018/11/04/2018-11-4-%E5%AE%9E%E9%AA%8C%E5%90%A7(%E5%9B%B0%E5%9C%A8%E6%A0%85%E6%A0%8F%E9%87%8C%E7%9A%84%E5%87%AF%E6%92%92)/"/>
      <url>./2018/11/04/2018-11-4-%E5%AE%9E%E9%AA%8C%E5%90%A7(%E5%9B%B0%E5%9C%A8%E6%A0%85%E6%A0%8F%E9%87%8C%E7%9A%84%E5%87%AF%E6%92%92)/</url>
      
        <content type="html"><![CDATA[<h2 id="困在栅栏里的凯撒"><a href="#困在栅栏里的凯撒" class="headerlink" title="困在栅栏里的凯撒"></a>困在栅栏里的凯撒</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><blockquote><p>小白发现了一段很6的字符：NlEyQd{seft}</p></blockquote><h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h3><p>​    顾名思义，先栅栏，后凯撒</p><ol><li><p>栅栏（FenceCode）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1：NEQ&#123;etlydsf&#125;</span><br><span class="line">2：Ny&#123;flQstEde&#125;</span><br><span class="line">3：NQeldfE&#123;tys&#125;</span><br><span class="line">4：N&#123;lsEeyfQtd&#125;</span><br></pre></td></tr></table></figure></li><li><p>凯撒（CaeserCode）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line">1：OFR&#123;fumzetg&#125;</span><br><span class="line">2：Oz&#123;gmRtuFef&#125;</span><br><span class="line">3：ORfmegF&#123;uzt&#125;</span><br><span class="line">4：O&#123;mtFfzgRue&#125;</span><br><span class="line"></span><br><span class="line">1：PGS&#123;gvnafuh&#125;</span><br><span class="line">2：Pa&#123;hnSuvGfg&#125;</span><br><span class="line">3：PSgnfhG&#123;vau&#125;</span><br><span class="line">4：P&#123;nuGgahSvf&#125;</span><br><span class="line"></span><br><span class="line">1：QHT&#123;hwobgvi&#125;</span><br><span class="line">2：Qb&#123;ioTvwHgh&#125;</span><br><span class="line">3：QThogiH&#123;wbv&#125;</span><br><span class="line">4：Q&#123;ovHhbiTwg&#125;</span><br><span class="line"></span><br><span class="line">1：RIU&#123;ixpchwj&#125;</span><br><span class="line">2：Rc&#123;jpUwxIhi&#125;</span><br><span class="line">3：RUiphjI&#123;xcw&#125;</span><br><span class="line">4：R&#123;pwIicjUxh&#125;</span><br><span class="line"></span><br><span class="line">1：SJV&#123;jyqdixk&#125;</span><br><span class="line">2：Sd&#123;kqVxyJij&#125;</span><br><span class="line">3：SVjqikJ&#123;ydx&#125;</span><br><span class="line">4：S&#123;qxJjdkVyi&#125;</span><br><span class="line"></span><br><span class="line">1：TKW&#123;kzrejyl&#125;</span><br><span class="line">2：Te&#123;lrWyzKjk&#125;</span><br><span class="line">3：TWkrjlK&#123;zey&#125;</span><br><span class="line">4：T&#123;ryKkelWzj&#125;</span><br><span class="line"></span><br><span class="line">1：ULX&#123;lasfkzm&#125;</span><br><span class="line">2：Uf&#123;msXzaLkl&#125;</span><br><span class="line">3：UXlskmL&#123;afz&#125;</span><br><span class="line">4：U&#123;szLlfmXak&#125;</span><br><span class="line"></span><br><span class="line">1：VMY&#123;mbtglan&#125;</span><br><span class="line">2：Vg&#123;ntYabMlm&#125;</span><br><span class="line">3：VYmtlnM&#123;bga&#125;</span><br><span class="line">4：V&#123;taMmgnYbl&#125;</span><br><span class="line"></span><br><span class="line">1：WNZ&#123;ncuhmbo&#125;</span><br><span class="line">2：Wh&#123;ouZbcNmn&#125;</span><br><span class="line">3：WZnumoN&#123;chb&#125;</span><br><span class="line">4：W&#123;ubNnhoZcm&#125;</span><br><span class="line"></span><br><span class="line">1：XOA&#123;odvincp&#125;</span><br><span class="line">2：Xi&#123;pvAcdOno&#125;</span><br><span class="line">3：XAovnpO&#123;dic&#125;</span><br><span class="line">4：X&#123;vcOoipAdn&#125;</span><br><span class="line"></span><br><span class="line">1：YPB&#123;pewjodq&#125;</span><br><span class="line">2：Yj&#123;qwBdePop&#125;</span><br><span class="line">3：YBpwoqP&#123;ejd&#125;</span><br><span class="line">4：Y&#123;wdPpjqBeo&#125;</span><br><span class="line"></span><br><span class="line">1：ZQC&#123;qfxkper&#125;</span><br><span class="line">2：Zk&#123;rxCefQpq&#125;</span><br><span class="line">3：ZCqxprQ&#123;fke&#125;</span><br><span class="line">4：Z&#123;xeQqkrCfp&#125;</span><br><span class="line"></span><br><span class="line">1：ARD&#123;rgylqfs&#125;</span><br><span class="line">2：Al&#123;syDfgRqr&#125;</span><br><span class="line">3：ADryqsR&#123;glf&#125;</span><br><span class="line">4：A&#123;yfRrlsDgq&#125;</span><br><span class="line"></span><br><span class="line">1：BSE&#123;shzmrgt&#125;</span><br><span class="line">2：Bm&#123;tzEghSrs&#125;</span><br><span class="line">3：BEszrtS&#123;hmg&#125;</span><br><span class="line">4：B&#123;zgSsmtEhr&#125;</span><br><span class="line"></span><br><span class="line">1：CTF&#123;tianshu&#125;</span><br><span class="line">2：Cn&#123;uaFhiTst&#125;</span><br><span class="line">3：CFtasuT&#123;inh&#125;</span><br><span class="line">4：C&#123;ahTtnuFis&#125;</span><br><span class="line"></span><br><span class="line">1：DUG&#123;ujbotiv&#125;</span><br><span class="line">2：Do&#123;vbGijUtu&#125;</span><br><span class="line">3：DGubtvU&#123;joi&#125;</span><br><span class="line">4：D&#123;biUuovGjt&#125;</span><br><span class="line"></span><br><span class="line">1：EVH&#123;vkcpujw&#125;</span><br><span class="line">2：Ep&#123;wcHjkVuv&#125;</span><br><span class="line">3：EHvcuwV&#123;kpj&#125;</span><br><span class="line">4：E&#123;cjVvpwHku&#125;</span><br><span class="line"></span><br><span class="line">1：FWI&#123;wldqvkx&#125;</span><br><span class="line">2：Fq&#123;xdIklWvw&#125;</span><br><span class="line">3：FIwdvxW&#123;lqk&#125;</span><br><span class="line">4：F&#123;dkWwqxIlv&#125;</span><br><span class="line"></span><br><span class="line">1：GXJ&#123;xmerwly&#125;</span><br><span class="line">2：Gr&#123;yeJlmXwx&#125;</span><br><span class="line">3：GJxewyX&#123;mrl&#125;</span><br><span class="line">4：G&#123;elXxryJmw&#125;</span><br><span class="line"></span><br><span class="line">1：HYK&#123;ynfsxmz&#125;</span><br><span class="line">2：Hs&#123;zfKmnYxy&#125;</span><br><span class="line">3：HKyfxzY&#123;nsm&#125;</span><br><span class="line">4：H&#123;fmYyszKnx&#125;</span><br><span class="line"></span><br><span class="line">1：IZL&#123;zogtyna&#125;</span><br><span class="line">2：It&#123;agLnoZyz&#125;</span><br><span class="line">3：ILzgyaZ&#123;otn&#125;</span><br><span class="line">4：I&#123;gnZztaLoy&#125;</span><br><span class="line"></span><br><span class="line">1：JAM&#123;aphuzob&#125;</span><br><span class="line">2：Ju&#123;bhMopAza&#125;</span><br><span class="line">3：JMahzbA&#123;puo&#125;</span><br><span class="line">4：J&#123;hoAaubMpz&#125;</span><br><span class="line"></span><br><span class="line">1：KBN&#123;bqivapc&#125;</span><br><span class="line">2：Kv&#123;ciNpqBab&#125;</span><br><span class="line">3：KNbiacB&#123;qvp&#125;</span><br><span class="line">4：K&#123;ipBbvcNqa&#125;</span><br><span class="line"></span><br><span class="line">1：LCO&#123;crjwbqd&#125;</span><br><span class="line">2：Lw&#123;djOqrCbc&#125;</span><br><span class="line">3：LOcjbdC&#123;rwq&#125;</span><br><span class="line">4：L&#123;jqCcwdOrb&#125;</span><br><span class="line"></span><br><span class="line">1：MDP&#123;dskxcre&#125;</span><br><span class="line">2：Mx&#123;ekPrsDcd&#125;</span><br><span class="line">3：MPdkceD&#123;sxr&#125;</span><br><span class="line">4：M&#123;krDdxePsc&#125;</span><br><span class="line"></span><br><span class="line">1：NEQ&#123;etlydsf&#125;</span><br><span class="line">2：Ny&#123;flQstEde&#125;</span><br><span class="line">3：NQeldfE&#123;tys&#125;</span><br><span class="line">4：N&#123;lsEeyfQtd&#125;</span><br></pre></td></tr></table></figure></li><li><p>就可以看到答案是：<strong>CTF{tianshu}</strong></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 实验吧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 密码学 </tag>
            
            <tag> other </tag>
            
            <tag> 实验吧 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Java WebService服务端与客户端的搭建</title>
      <link href="./2018/11/02/2018-11-2-Java-WebService%E6%9C%8D%E5%8A%A1%E7%AB%AF%E4%B8%8E%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%9A%84%E6%90%AD%E5%BB%BA/"/>
      <url>./2018/11/02/2018-11-2-Java-WebService%E6%9C%8D%E5%8A%A1%E7%AB%AF%E4%B8%8E%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%9A%84%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h2><h3 id="最简单的WebService服务端"><a href="#最简单的WebService服务端" class="headerlink" title="最简单的WebService服务端"></a>最简单的WebService服务端</h3><h4 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h4><ol><li>搭建一个web工程</li><li>在web工程建立包（这里我命名为xx.xxaa，其他也没关系）</li><li>在web工程建立一个类，并命名（这里我命名为ServiceServer，其他也没关系）</li><li>编写main方法，开启服务</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.jws.WebService;</span><br><span class="line"><span class="keyword">import</span> javax.xml.ws.Endpoint;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebService</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServiceServer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 客户端将会调用的方法（服务端被调用的方法）</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> something</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">serverPrint</span><span class="params">(String something)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Server print: "</span>+something;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Endpoint.publish(<span class="string">"http://127.0.0.1:9991/Service/ServiceServer"</span>, <span class="keyword">new</span> ServiceServer());</span><br><span class="line">        System.out.print(<span class="string">"service open success! Enjoy it..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>打开网址：<a href="http://127.0.0.1:9991/Service/ServiceServer?wsdl" target="_blank" rel="noopener">http://127.0.0.1:9991/Service/ServiceServer?wsdl</a></li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment"> Published by JAX-WS RI (http://jax-ws.java.net). RI's version is JAX-WS RI 2.2.9-b130926.1035 svn-revision#5f6196f2b90e9460065a4c2f4e30e065b245e51e. </span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment"> Generated by JAX-WS RI (http://jax-ws.java.net). RI's version is JAX-WS RI 2.2.9-b130926.1035 svn-revision#5f6196f2b90e9460065a4c2f4e30e065b245e51e. </span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">definitions</span> <span class="attr">xmlns:wsu</span>=<span class="string">"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"</span> <span class="attr">xmlns:wsp</span>=<span class="string">"http://www.w3.org/ns/ws-policy"</span> <span class="attr">xmlns:wsp1_2</span>=<span class="string">"http://schemas.xmlsoap.org/ws/2004/09/policy"</span> <span class="attr">xmlns:wsam</span>=<span class="string">"http://www.w3.org/2007/05/addressing/metadata"</span> <span class="attr">xmlns:soap</span>=<span class="string">"http://schemas.xmlsoap.org/wsdl/soap/"</span> <span class="attr">xmlns:tns</span>=<span class="string">"http://service.netcaaa.netca.net/"</span> <span class="attr">xmlns:xsd</span>=<span class="string">"http://www.w3.org/2001/XMLSchema"</span> <span class="attr">xmlns</span>=<span class="string">"http://schemas.xmlsoap.org/wsdl/"</span> <span class="attr">targetNamespace</span>=<span class="string">"http://service.xxaa.xx/"</span> <span class="attr">name</span>=<span class="string">"ServiceServerService"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">types</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">xsd:schema</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">xsd:import</span> <span class="attr">namespace</span>=<span class="string">"http://service.xxaa.xx/"</span> <span class="attr">schemaLocation</span>=<span class="string">"http://127.0.0.1:9991/Service/ServiceServer?xsd=1"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xsd:schema</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">types</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">message</span> <span class="attr">name</span>=<span class="string">"serverPrint"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">part</span> <span class="attr">name</span>=<span class="string">"parameters"</span> <span class="attr">element</span>=<span class="string">"tns:serverPrint"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">message</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">message</span> <span class="attr">name</span>=<span class="string">"serverPrintResponse"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">part</span> <span class="attr">name</span>=<span class="string">"parameters"</span> <span class="attr">element</span>=<span class="string">"tns:serverPrintResponse"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">message</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">portType</span> <span class="attr">name</span>=<span class="string">"ServiceServer"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">operation</span> <span class="attr">name</span>=<span class="string">"serverPrint"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">wsam:Action</span>=<span class="string">"http://service.xxaa.xx/ServiceServer/serverPrintRequest"</span> <span class="attr">message</span>=<span class="string">"tns:serverPrint"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">output</span> <span class="attr">wsam:Action</span>=<span class="string">"http://service.xxaa.xx/ServiceServer/serverPrintResponse"</span> <span class="attr">message</span>=<span class="string">"tns:serverPrintResponse"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">operation</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">portType</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">binding</span> <span class="attr">name</span>=<span class="string">"ServiceServerPortBinding"</span> <span class="attr">type</span>=<span class="string">"tns:ServiceServer"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">soap:binding</span> <span class="attr">transport</span>=<span class="string">"http://schemas.xmlsoap.org/soap/http"</span> <span class="attr">style</span>=<span class="string">"document"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">operation</span> <span class="attr">name</span>=<span class="string">"serverPrint"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">soap:operation</span> <span class="attr">soapAction</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">soap:body</span> <span class="attr">use</span>=<span class="string">"literal"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">output</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">soap:body</span> <span class="attr">use</span>=<span class="string">"literal"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">output</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">operation</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">binding</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">service</span> <span class="attr">name</span>=<span class="string">"ServiceServerService"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">port</span> <span class="attr">name</span>=<span class="string">"ServiceServerPort"</span> <span class="attr">binding</span>=<span class="string">"tns:ServiceServerPortBinding"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">soap:address</span> <span class="attr">location</span>=<span class="string">"http://127.0.0.1:9991/Service/ServiceServer"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">definitions</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><h3 id="流程-1"><a href="#流程-1" class="headerlink" title="流程"></a>流程</h3><ol><li><p>搭建一个普通的Project工程</p></li><li><p>在Project工程建立一个类，并命名（这里我命名为ServiceClient，其他也没关系）</p></li><li><p>cmd编译Service开启服务，提供的Web服务描述语言，生成对应客户端的代码（解析WSDL、生成代码、编译代码）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> wsimport -s /project/src -p package.client -keep http://127.0.0.1:9991/Service/ServiceServer?wsdl</span><br><span class="line"></span><br><span class="line">wsimport -s C:/WebServiceProject/src -p xx.xxaa.client -keep http://127.0.0.1:9991/Service/ServiceServer?wsdl</span><br></pre></td></tr></table></figure></li><li><p>编写main方法，连接服务</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> net.netca.netcaaa.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> xx.xxaa.client.ServiceServer;</span><br><span class="line"><span class="keyword">import</span> xx.xxaa.client.ServiceServerService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServiceClient</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 请求服务</span></span><br><span class="line">ServiceServer server = <span class="keyword">new</span> ServiceServerService().getServiceServerPort();</span><br><span class="line">        <span class="comment">// 调用服务</span></span><br><span class="line">String printData = server.serverPrint(<span class="string">"2018年11月2日09:51:45"</span>);</span><br><span class="line">System.out.println(printData);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 打印内容如下：</span></span><br><span class="line"><span class="comment">// Server print: 2018年11月2日09:51:45</span></span><br></pre></td></tr></table></figure></li></ol><p>### </p>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>R语言下order、rank、sort的使用</title>
      <link href="./2018/11/01/R%E8%AF%AD%E8%A8%80%E4%B8%8Border%E3%80%81rank%E3%80%81sort%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>./2018/11/01/R%E8%AF%AD%E8%A8%80%E4%B8%8Border%E3%80%81rank%E3%80%81sort%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="sort、rank、order的定义"><a href="#sort、rank、order的定义" class="headerlink" title="sort、rank、order的定义"></a>sort、rank、order的定义</h2><ol><li>sort：对一个向量x的排序</li><li>rank：对排序的结果，进行原数组1到n的排名</li><li>order：对sort排序后的数组，对应原数组数组的位置</li></ol><h2 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">z&lt;-c(<span class="number">9</span>,<span class="number">2</span>,<span class="number">14</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">1</span>) <span class="comment"># 一共6个数</span></span><br><span class="line">sort(z)<span class="comment"># 输出 1,2,3,6,9,14</span></span><br><span class="line">rank(z)<span class="comment"># 输出 5,2,6,4,3,1   (9,2,14,6,3,1)的排名，9排名第5；14排名第6</span></span><br><span class="line">order(z)<span class="comment"># 输出 6,2,5,4,1,3   (1,2,3,6,9,14)在(9,2,14,6,3,1)的位置</span></span><br><span class="line"><span class="comment"># order，比如(1,2,3,6,9,14)中的1在(9,2,14,6,3,1)是第6位，(1,2,3,6,9,14)中的14在(9,2,14,6,3,1)是第3位</span></span><br><span class="line">order(z,decreasing = <span class="literal">TRUE</span>) <span class="comment"># 输出3,1,4,5,2,6,为order排序的反排序</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> R </tag>
            
            <tag> 生信 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>JAVA_GC日志分析</title>
      <link href="./2018/10/30/JAVA_GC%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90/"/>
      <url>./2018/10/30/JAVA_GC%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set <span class="string">"JAVA_OPTS=%JAVA_OPTS% -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -Xloggc:%CATALINA_HOME%/logs/tomcat_gc.log"</span></span><br></pre></td></tr></table></figure><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="日志打印"><a href="#日志打印" class="headerlink" title="日志打印"></a>日志打印</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">Java HotSpot(TM) 64-Bit Server VM (25.92-b14) for windows-amd64 JRE (1.8.0_92-b14), built on Mar 31 2016 21:03:04 by "java_re" with MS VC++ 10.0 (VS2010)</span><br><span class="line">Memory: 4k page, physical 8281844k(2149156k free), swap 16563688k(2821648k free)</span><br><span class="line">CommandLine flags: -XX:InitialHeapSize=132509504 -XX:MaxHeapSize=2120152064 -XX:+PrintGC -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+UseCompressedClassPointers -XX:+UseCompressedOops -XX:-UseLargePagesIndividualAllocation -XX:+UseParallelGC </span><br><span class="line">0.752: [GC (Allocation Failure) [PSYoungGen: 33280K-&gt;5088K(38400K)] 33280K-&gt;8036K(125952K), 0.0060004 secs] [Times: user=0.00 sys=0.02, real=0.01 secs] </span><br><span class="line">1.066: [GC (Allocation Failure) [PSYoungGen: 38368K-&gt;5101K(38400K)] 41316K-&gt;14206K(125952K), 0.0067035 secs] [Times: user=0.08 sys=0.05, real=0.01 secs] </span><br><span class="line">1.295: [GC (Allocation Failure) [PSYoungGen: 38381K-&gt;5103K(38400K)] 47486K-&gt;20597K(125952K), 0.0056209 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] </span><br><span class="line">1.568: [GC (Allocation Failure) [PSYoungGen: 38383K-&gt;5101K(71680K)] 53877K-&gt;22063K(159232K), 0.0047853 secs] [Times: user=0.00 sys=0.01, real=0.00 secs] </span><br><span class="line">1.842: [GC (Allocation Failure) [PSYoungGen: 71661K-&gt;5094K(71680K)] 88623K-&gt;26332K(159232K), 0.0054331 secs] [Times: user=0.00 sys=0.00, real=0.01 secs] </span><br><span class="line">2.036: [GC (Allocation Failure) [PSYoungGen: 71654K-&gt;9722K(145920K)] 92892K-&gt;30967K(233472K), 0.0070884 secs] [Times: user=0.05 sys=0.08, real=0.01 secs] </span><br><span class="line">2.536: [GC (Allocation Failure) [PSYoungGen: 142842K-&gt;12793K(145920K)] 164087K-&gt;40684K(233472K), 0.0160709 secs] [Times: user=0.13 sys=0.00, real=0.02 secs] </span><br><span class="line">2.951: [GC (Allocation Failure) [PSYoungGen: 145913K-&gt;17389K(278528K)] 173804K-&gt;52575K(366080K), 0.0191865 secs] [Times: user=0.06 sys=0.00, real=0.02 secs] </span><br><span class="line">3.876: [GC (Allocation Failure) [PSYoungGen: 278509K-&gt;22517K(283648K)] 313695K-&gt;68138K(371200K), 0.0283277 secs] [Times: user=0.06 sys=0.01, real=0.03 secs] </span><br><span class="line">4.712: [GC (Allocation Failure) [PSYoungGen: 283637K-&gt;26941K(444416K)] 329258K-&gt;75433K(531968K), 0.0244180 secs] [Times: user=0.03 sys=0.00, real=0.02 secs] </span><br><span class="line">5.929: [GC (Allocation Failure) [PSYoungGen: 441661K-&gt;32745K(447488K)] 490153K-&gt;97742K(535040K), 0.0445053 secs] [Times: user=0.01 sys=0.02, real=0.04 secs] </span><br><span class="line">6.643: [GC (Allocation Failure) [PSYoungGen: 447465K-&gt;43506K(610816K)] 512462K-&gt;139231K(706560K), 0.1259313 secs] [Times: user=0.11 sys=0.02, real=0.13 secs] </span><br><span class="line">6.769: [Full GC (Ergonomics) [PSYoungGen: 43506K-&gt;5558K(610816K)] [ParOldGen: 95725K-&gt;95741K(160256K)] 139231K-&gt;101300K(771072K), [Metaspace: 15778K-&gt;15778K(1064960K)], 0.1242255 secs] [Times: user=0.88 sys=0.02, real=0.12 secs] </span><br><span class="line">8.180: [GC (Allocation Failure) [PSYoungGen: 572854K-&gt;61409K(628736K)] 668596K-&gt;183826K(788992K), 0.1223716 secs] [Times: user=0.08 sys=0.03, real=0.12 secs] </span><br><span class="line">10.120: [GC (Allocation Failure) [PSYoungGen: 628705K-&gt;49902K(585728K)] 751122K-&gt;174795K(745984K), 0.0286591 secs] [Times: user=0.03 sys=0.02, real=0.03 secs] </span><br><span class="line">11.454: [GC (Metadata GC Threshold) [PSYoungGen: 278885K-&gt;9853K(607232K)] 403778K-&gt;139883K(767488K), 0.0074279 secs] [Times: user=0.08 sys=0.00, real=0.01 secs] </span><br><span class="line">11.461: [Full GC (Metadata GC Threshold) [PSYoungGen: 9853K-&gt;0K(607232K)] [ParOldGen: 130030K-&gt;35015K(113664K)] 139883K-&gt;35015K(720896K), [Metaspace: 26949K-&gt;26949K(1073152K)], 0.0459526 secs] [Times: user=0.16 sys=0.02, real=0.05 secs] </span><br><span class="line">14.681: [GC (Allocation Failure) [PSYoungGen: 524288K-&gt;20133K(600064K)] 559303K-&gt;55157K(713728K), 0.0090754 secs] [Times: user=0.00 sys=0.00, real=0.01 secs] </span><br><span class="line">21.688: [GC (Metadata GC Threshold) [PSYoungGen: 332707K-&gt;7017K(604160K)] 367730K-&gt;59045K(717824K), 0.0103632 secs] [Times: user=0.13 sys=0.00, real=0.01 secs] </span><br><span class="line">21.698: [Full GC (Metadata GC Threshold) [PSYoungGen: 7017K-&gt;0K(604160K)] [ParOldGen: 52028K-&gt;49336K(140288K)] 59045K-&gt;49336K(744448K), [Metaspace: 45055K-&gt;45018K(1089536K)], 0.1324701 secs] [Times: user=0.77 sys=0.00, real=0.13 secs] </span><br><span class="line">27.316: [GC (Allocation Failure) [PSYoungGen: 525312K-&gt;4448K(608256K)] 574648K-&gt;53793K(748544K), 0.0027460 secs] [Times: user=0.01 sys=0.00, real=0.00 secs] </span><br><span class="line">29.158: [GC (Allocation Failure) [PSYoungGen: 537952K-&gt;1568K(610304K)] 587297K-&gt;54126K(750592K), 0.0024272 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] </span><br><span class="line">41.077: [GC (Allocation Failure) [PSYoungGen: 535072K-&gt;752K(609792K)] 587630K-&gt;54484K(750080K), 0.0019681 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] </span><br><span class="line">43.047: [GC (Allocation Failure) [PSYoungGen: 538864K-&gt;752K(611840K)] 592596K-&gt;54492K(752128K), 0.0017160 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] </span><br><span class="line">55.079: [GC (Allocation Failure) [PSYoungGen: 538864K-&gt;752K(610816K)] 592604K-&gt;54500K(751104K), 0.0017559 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] </span><br><span class="line">57.078: [GC (Allocation Failure) [PSYoungGen: 545008K-&gt;704K(613888K)] 598756K-&gt;54452K(754176K), 0.0023127 secs] [Times: user=0.00 sys=0.00, real=0.00 secs]</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://www.cnblogs.com/Vince-blogs/p/8484640.html" target="_blank" rel="noopener">https://www.cnblogs.com/Vince-blogs/p/8484640.html</a></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>网易入职路线</title>
      <link href="./2018/10/27/%E7%BD%91%E6%98%93%E5%85%A5%E8%81%8C%E8%B7%AF%E7%BA%BF/"/>
      <url>./2018/10/27/%E7%BD%91%E6%98%93%E5%85%A5%E8%81%8C%E8%B7%AF%E7%BA%BF/</url>
      
        <content type="html"><![CDATA[<h2 id="基本知识必知必会"><a href="#基本知识必知必会" class="headerlink" title="基本知识必知必会"></a>基本知识必知必会</h2><ol><li></li></ol><h2 id="DB"><a href="#DB" class="headerlink" title="DB"></a>DB</h2><h2 id="额外素质"><a href="#额外素质" class="headerlink" title="额外素质"></a>额外素质</h2><ol><li></li></ol><h2 id="所有技能汇总"><a href="#所有技能汇总" class="headerlink" title="所有技能汇总"></a>所有技能汇总</h2><ol><li>精通java编程，熟悉java sdk提供的主要能力;</li><li>理解java运行时工作原理，熟悉jvm性能调优，能够充分利用java特性支持框架与程序库的设计开发;</li><li>熟悉多线程编程，熟练使用java并发包下的各项常用基础设施;</li><li>熟悉网络编程，能够熟练使用java nio开发高并发、高吞吐量的服务;</li><li>熟悉常用网络协议，如TCP/IP, HTTP;</li><li>能够熟练使用linux，能够利用常用的工具对程序进行跟踪诊断;</li><li>有分布式系统开发经验，对消息服务、负载均衡、高可用机制等有深入理解，有开放平台开发经验者优先；</li><li>具备良好学习、沟通能力及团队协作精神，对工作积极严谨，勇于承担压力。</li><li>参与公众号、小程序、小游戏等微信相关产品开发； </li><li>参与Web业务系统开发； </li><li>精通Web系统开发；</li><li>精通Java语言，及Spring、MyBatis/Hibernate等后端框架框架；</li><li>熟悉数据库相关技术，熟悉MySQL和Oracle，版本，字段区别，熟悉SQL性能优化</li><li>熟练使用Spring相关技术，例如Spring Boot、Spring Cloud、Spring Security等；</li><li>熟练使用Memcached、MongoDB、RabbitMQ等中间件；</li><li>优秀的沟通协作和逻辑分析能力，能对团队成员进行开发和技术指导。</li><li>熟悉Spring/Netty/Rabbitmq/Hystrix等；</li><li>熟悉Nginx/Tomcat等web服务器；</li><li>redis持久化策略，redis五种数据结构？ZSET怎么实现</li><li>怎么分析生产环境GC情况？（jconsole、jvisualvm、runtime包、dump日志）？说下分析GC日志</li><li>MQ、MQ怎么保证恰好被消费一次？如果多次消费怎么保证幂等？因为上游业务bug或者其他问题不断的收到同一条消息怎么保证消费者的业务不受影响？</li><li>dubbo也就是RPC的完整流程是怎么样的（序列化、传输、动态代理……），dubbo的优点是什么？为什么要用dubbo？没有rpc的时候是怎么做的？all in one 这种模式有什么优点？dubbo的消费者为什么也要注册到zookeeper？只有提供者注册服务不行吗？dubbo为什么用hessian?jdk的序列化有什么问题？xml、json为啥不行？dubbo网络传输是怎么实现的？</li><li>mongdb实现细节</li><li></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> other </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>实验吧ctf训练题库</title>
      <link href="./2018/10/26/CTF/"/>
      <url>./2018/10/26/CTF/</url>
      
        <content type="html"><![CDATA[<h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h2 id="密码学"><a href="#密码学" class="headerlink" title="密码学"></a>密码学</h2><h3 id="变异凯撒"><a href="#变异凯撒" class="headerlink" title="变异凯撒"></a>变异凯撒</h3><h4 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h4><blockquote><p>加密密文：afZ_r9VYfScOeO_UL^RWUc<br>格式：flag{ }</p></blockquote><h4 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h4><p>afZ_转字符串：97 102 90 95</p><p>flag转字符串：102 108 97 103</p><p>规律：5 6 7 8</p><h4 id="解题过程（python3）："><a href="#解题过程（python3）：" class="headerlink" title="解题过程（python3）："></a>解题过程（python3）：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">encryptData=<span class="string">'afZ_r9VYfScOeO_UL^RWUc'</span></span><br><span class="line">i=<span class="number">5</span></span><br><span class="line">b=<span class="string">''</span></span><br><span class="line">index=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> encryptData:</span><br><span class="line">b=b[:index]+chr(ord(data)+i)</span><br><span class="line">i=i+<span class="number">1</span></span><br><span class="line">index=index+<span class="number">1</span></span><br><span class="line">b</span><br><span class="line"><span class="comment"># chr(data):将ASCII转字符串</span></span><br><span class="line"><span class="comment"># ord(data):将字符串转ASCII</span></span><br></pre></td></tr></table></figure><h4 id="解题结果"><a href="#解题结果" class="headerlink" title="解题结果"></a>解题结果</h4><blockquote><p>‘flag{Caesar_variation}’</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SQLite的实践与使用</title>
      <link href="./2018/10/25/SQLite3%E7%9A%84%E5%AE%9E%E8%B7%B5%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
      <url>./2018/10/25/SQLite3%E7%9A%84%E5%AE%9E%E8%B7%B5%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><h3 id="什么是SQLite3"><a href="#什么是SQLite3" class="headerlink" title="什么是SQLite3"></a>什么是<a href="https://www.sqlite.org/about.html" target="_blank" rel="noopener">SQLite3</a></h3><blockquote><p>​    SQLite is an in-process library that implements a <a href="https://www.sqlite.org/selfcontained.html" target="_blank" rel="noopener">self-contained</a>, <a href="https://www.sqlite.org/serverless.html" target="_blank" rel="noopener">serverless</a>, <a href="https://www.sqlite.org/zeroconf.html" target="_blank" rel="noopener">zero-configuration</a>, <a href="https://www.sqlite.org/transactional.html" target="_blank" rel="noopener">transactional</a> SQL database engine. The code for SQLite is in the <a href="https://www.sqlite.org/copyright.html" target="_blank" rel="noopener">public domain</a> and is thus free for use for any purpose, commercial or private. SQLite is the <a href="https://www.sqlite.org/mostdeployed.html" target="_blank" rel="noopener">most widely deployed</a> database in the world with more applications than we can count, including several <a href="https://www.sqlite.org/famous.html" target="_blank" rel="noopener">high-profile projects.</a></p><p>​    SQLite is an embedded SQL database engine. Unlike most other SQL databases, SQLite does not have a separate server process. SQLite reads and writes directly to ordinary disk files. A complete SQL database with multiple tables, indices, triggers, and views, is contained in a single disk file. The database <a href="https://www.sqlite.org/fileformat2.html" target="_blank" rel="noopener">file format</a> is cross-platform - you can freely copy a database between 32-bit and 64-bit systems or between <a href="http://en.wikipedia.org/wiki/Endianness" target="_blank" rel="noopener">big-endian</a> and <a href="http://en.wikipedia.org/wiki/Endianness" target="_blank" rel="noopener">little-endian</a> architectures. These features make SQLite a popular choice as an <a href="https://www.sqlite.org/appfileformat.html" target="_blank" rel="noopener">Application File Format</a>. </p></blockquote><p>​    简单来说，SQLite是一个切入式的，独立的，没有独立服务器进程，零配置的事务性数据库引擎，通过直接读取和写入磁盘文件的方式来操作多个表、索引、触发器和视图的完整 SQL 数据库。</p><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><h3 id="读取数据库表"><a href="#读取数据库表" class="headerlink" title="读取数据库表"></a>读取数据库表</h3><p>​    Linux系统，都基本会自带有SQLite3，直接运行即可。</p><p>​    windows系统，需要上官网下载对应的动态链接库+tool工具进行数据库操作。</p><p>​    另外，如果安装有python，也会自带有sqlite3模块，引入即可用。</p><h4 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Linux --&gt; 直接运行</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 读取数据库</span></span><br><span class="line">sqlite3 /var/tmp/trust.db</span><br><span class="line"><span class="meta">#</span><span class="bash"> 显示数据库信息</span></span><br><span class="line">.databases</span><br><span class="line"><span class="meta">#</span><span class="bash"> 显示表信息</span></span><br><span class="line">.tables</span><br><span class="line"><span class="meta">#</span><span class="bash"> 帮助</span></span><br><span class="line">.help</span><br><span class="line"><span class="meta">#</span><span class="bash"> 读取数据库表</span></span><br><span class="line">select * from table2;</span><br></pre></td></tr></table></figure><h4 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Windows</span></span><br><span class="line"><span class="comment"># 步骤1：官网地址下载：https://www.sqlite.org/download.html</span></span><br><span class="line"><span class="comment"># 步骤2：sqlite-dll-win64-xxx-xxxxx.zip、sqlite-tools-win32-x86-xxxxx.zip 并解压到自己本地指定的文件夹</span></span><br><span class="line"><span class="comment"># 步骤3：双击sqlite3.exe or cmd命令</span></span><br><span class="line">sqlite3.exe ./trust.db</span><br><span class="line"><span class="comment"># 步骤4：加载数据库，这里用restore，不是open！详情请看.help</span></span><br><span class="line">.restore c:/tmp/trust.db</span><br><span class="line"><span class="comment"># 显示数据库信息</span></span><br><span class="line">.databases</span><br><span class="line"><span class="comment"># 显示表信息</span></span><br><span class="line">.tables</span><br><span class="line"><span class="comment"># 帮助</span></span><br><span class="line">.help</span><br><span class="line"><span class="comment"># 读取数据库表</span></span><br><span class="line">select * from table2</span><br></pre></td></tr></table></figure><div class="article-img"><p><img src="E:\blog\lmg\PinkSmallFan\project\source\uploads\sqlite3_win.png" alt="sqlite3_win"></p></div><h4 id="python"><a href="#python" class="headerlink" title="python"></a>python</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python</span></span><br><span class="line"><span class="comment"># 引用sqlite3，并加载数据库，建立连接</span></span><br><span class="line"><span class="keyword">import</span> sqlite3;</span><br><span class="line">conn=sqlite3.connect(<span class="string">"C:/tmp/trust.db"</span>);</span><br><span class="line">cursor=conn.cursor();</span><br><span class="line"><span class="comment"># 读取数据库表</span></span><br><span class="line">cursor.execute(<span class="string">"select name from table2;"</span>)</span><br><span class="line">values=cursor.fetchall()</span><br><span class="line">values</span><br><span class="line">cursor.close()</span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li>SQLite3的简单操作：<a href="https://www.jianshu.com/p/424a8b143bbb" target="_blank" rel="noopener">https://www.jianshu.com/p/424a8b143bbb</a></li><li><p>廖雪峰python：<a href="https://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/001388320596292f925f46d56ef4c80a1c9d8e47e2d5711000" target="_blank" rel="noopener">https://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/001388320596292f925f46d56ef4c80a1c9d8e47e2d5711000</a></p></li><li><p>sqlite3官网：<a href="https://www.sqlite.org/about.html" target="_blank" rel="noopener">https://www.sqlite.org/about.html</a></p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>密钥对的相关操作（keytool、openSSL)</title>
      <link href="./2018/10/25/2018-10-25-%E5%AF%86%E9%92%A5%E5%AF%B9%E7%9A%84%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C%EF%BC%88keytool%E3%80%81openSSL)/"/>
      <url>./2018/10/25/2018-10-25-%E5%AF%86%E9%92%A5%E5%AF%B9%E7%9A%84%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C%EF%BC%88keytool%E3%80%81openSSL)/</url>
      
        <content type="html"><![CDATA[<h2 id="cacerts"><a href="#cacerts" class="headerlink" title="cacerts"></a>cacerts</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>cacerts：trusted certificate authority (CA) certificates</p><blockquote><p>​    The <code>cacerts</code> file is a collection of trusted certificate authority (CA) certificates. Sun Microsystems™ includes a <code>cacerts</code> file with its SSL support in the Java™ Secure Socket Extension (JSSE) tool kit and JDK 1.4.x. It contains certificate references for well-known Certificate authorities, such as VeriSign™. Its format is the “keystore” format defined by Sun. An administrator can edit the <code>cacerts</code> file with a command line tool (also provided by Sun) called keytool. For more information about keytool, see the Sun Web site.</p><p><strong>Note:</strong> The default password for the cacerts file supplied by Sun is <code>changeit</code>. You must use this password to view the contents or to import a new certificate. For security reasons, change the default password.</p><p>The essential requirement is that the certificate authority that signed the HPE Service Manager server’s certificate must be in the list of certificate authorities named in this file. To use a self-issued server certificate created with OpenSSL or a tool such as Microsoft Certificate Server™, you must import the certificate for this private certificate authority into the <code>cacerts</code> file that the client uses for SSL. If you do not import the certificate, SSL connections fail because the Java SSL implementation does not recognize the certificate authority.</p></blockquote><p>​    简单的来说，cacerts是java用于接受受信任的证书已经证书链，cacerts默认包含有一些众所周知的权威证书，以及证书链。当你需要使用https协议，为你的服务添加ssl的时候，需要将你的证书和证书链导入cacerts（如果已经导入过了，就不需要了）。</p><h2 id="keytool"><a href="#keytool" class="headerlink" title="keytool"></a>keytool</h2><h3 id="查看java自带的cacerts"><a href="#查看java自带的cacerts" class="headerlink" title="查看java自带的cacerts"></a>查看java自带的cacerts</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> Linux</span><br><span class="line">cd $JAVA_HOME/jre/lib/security</span><br><span class="line">keytool -list -storepass changeit -keystore "./cacerts"# 查询所有的证书</span><br><span class="line">keytool -list -storepass changeit -keystore "./cacerts" |grep server </span><br><span class="line"><span class="meta">#</span> 查询alias带有server的证书</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Windows</span><br><span class="line">cd %JAVA_HOME%/jre/lib/security</span><br><span class="line">keytool -list -storepass changeit -keystore "./cacerts"# 查询所有的证书</span><br><span class="line">keytool -list -storepass changeit -keystore "./cacerts" |findstr /i server</span><br><span class="line"><span class="meta">#</span> 查询alias带有server的证书</span><br></pre></td></tr></table></figure><h3 id="产生jks密钥对"><a href="#产生jks密钥对" class="headerlink" title="产生jks密钥对"></a>产生jks密钥对</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 产生一个签名算法为SHA256withRSA的，密钥长度为2048，的RSA密钥对，即软证书server.jks</span><br><span class="line">keytool -keystore server.jks -genkey -alias xxx_server -keyalg RSA -sigalg SHA256withRSA -keysize 2048</span><br></pre></td></tr></table></figure><h3 id="导出jks的证书"><a href="#导出jks的证书" class="headerlink" title="导出jks的证书"></a>导出jks的证书</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 证书，即公钥</span><br><span class="line">keytool -export -alias server -keystore server.jks -rfc -file sign.cer</span><br></pre></td></tr></table></figure><h3 id="导入证书到cacerts"><a href="#导入证书到cacerts" class="headerlink" title="导入证书到cacerts"></a>导入证书到cacerts</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd $JAVA_HOME/jre/lib/security</span><br><span class="line"><span class="meta">#</span> 将证书导入cacerts，并别名为server</span><br><span class="line">keytool -import -keystore "./cacerts" -alias server -trustcacerts -storepass changeit -file /var/tmp/certs/Server.cer</span><br></pre></td></tr></table></figure><h3 id="在cacerts上删除证书"><a href="#在cacerts上删除证书" class="headerlink" title="在cacerts上删除证书"></a>在cacerts上删除证书</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd $JAVA_HOME/jre/lib/security</span><br><span class="line"><span class="meta">#</span> 删除命名为server的证书</span><br><span class="line">keytool -delete -alias server -keystore "./cacerts" -storepass changeit</span><br></pre></td></tr></table></figure><h3 id="参数分析"><a href="#参数分析" class="headerlink" title="参数分析"></a>参数分析</h3><blockquote><p>-genkey          在用户主目录中创建一个默认文件”.keystore” 的软证书,产生一个mykey的别名，其中包含用户的公钥、私钥和证书<br>(在没有指定生成位置的情况下,keystore会存在用户系统默认目录，如：对于window xp系统，会生成在系统的C:/Documents and Settings/UserName/文件名为“.keystore”)<br>-alias           产生别名，keytool将通过这个别名进行查找<br>-keystore        指定密钥库的名称(产生的各类信息将不在.keystore文件中)<br>-keyalg          指定密钥的算法 (如 RSA  DSA（如果不指定默认采用DSA），推荐采用RSA)<br>-validity        指定创建的证书有效期多少天<br>-keysize         指定密钥长度<br>-storepass       指定密钥库的密码(获取keystore信息所需的密码)<br>-keypass         指定别名条目的密码(私钥的密码)<br>-dname           指定证书拥有者信息<br>-list                显示密钥库中的证书信息<br>-v                   显示密钥库中的证书详细信息<br>-export          将别名指定的证书导出到文件<br>-file                参数指定导出到文件的文件名<br>-delete          删除密钥库中某条目<br>-printcert       查看导出的证书信息<br>-keypasswd   修改密钥库中指定条目口令<br>-storepasswd 修改keystore口令<br>-import          将已签名数字证书导入密钥库  </p></blockquote><p>证书拥有者信息</p><blockquote><p> 例如：  “CN=名字与姓氏,OU=组织单位名称,O=组织名称,L=城市或区域名称,ST=州或省份名称,C=单位的两字母国家代码”</p></blockquote><p>常用命令：</p><blockquote><p> keytool -export -alias 需要导出的别名 -keystore 指定keystore -file 指定导出的证书路径位置，及证书名称 -storepass 密码</p><p>keytool -printcert -file yushan.crt</p><p>keytool -delete -alias 指定需删除的别  -keystore 指定keystore  -storepass     密码</p><p>keytool -list -v -keystore 指定keystore -storepass 密码</p><p>keytool -import -alias 指定导入条目的别名 -keystore 指定keystore -file 需导入的证书</p><p>keytool -storepasswd -keystore e:/yushan.keystore(需修改口令的keystore) -storepass 123456(原始密码) -new yushan(新密码)</p><p>keytool -keypasswd -alias 需修改的别名 -keypass 旧密码 -new  新密码  -storepass keystore密码  -keystore sage</p></blockquote><blockquote><p>下面是各选项的缺省值。<br>-alias “mykey”<br>-keyalg “DSA”<br>-keysize 1024<br>-validity 90<br>-keystore 用户宿主目录中名为 .keystore 的文件<br>-file 读时为标准输入，写时为标准输出 </p></blockquote><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li>什么是cacerts： <a href="https://docs.microfocus.com/SM/9.50/Hybrid/Content/security/concepts/what_is_a_cacerts_file.htm" target="_blank" rel="noopener">https://docs.microfocus.com/SM/9.50/Hybrid/Content/security/concepts/what_is_a_cacerts_file.htm</a></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 密码学 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PKI技术</title>
      <link href="./2018/10/24/PKI%E6%8A%80%E6%9C%AF/"/>
      <url>./2018/10/24/PKI%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> 密码学 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>json解析</title>
      <link href="./2018/10/24/json%E8%A7%A3%E6%9E%90/"/>
      <url>./2018/10/24/json%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h2 id="JSON结构"><a href="#JSON结构" class="headerlink" title="JSON结构"></a>JSON结构</h2><h3 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">"workers"</span>:[</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">"id"</span>:<span class="string">"1"</span>,</span><br><span class="line"><span class="attr">"name"</span>:<span class="string">"programmer"</span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">"id"</span>:<span class="string">"2"</span>,</span><br><span class="line"><span class="attr">"name"</span>:<span class="string">"productManager"</span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">"id"</span>:<span class="string">"3"</span>,</span><br><span class="line"><span class="attr">"name"</span>:<span class="string">"leader"</span></span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="bean实例"><a href="#bean实例" class="headerlink" title="bean实例"></a>bean实例</h3><h4 id="一个单位对应一个bean"><a href="#一个单位对应一个bean" class="headerlink" title="一个单位对应一个bean"></a>一个单位对应一个bean</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Worker</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.id = id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="一个集合对应一个bean"><a href="#一个集合对应一个bean" class="headerlink" title="一个集合对应一个bean"></a>一个集合对应一个bean</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Workers</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> List&lt;Worker&gt; workers;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Worker&gt; <span class="title">getWorkers</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> workers;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setWorkers</span><span class="params">(List&lt;Worker&gt; workers)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.workers = workers;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JSONUtils</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * &lt;/p&gt; 说明：&lt;/p&gt; </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> path读取目录结构的路径，例如："/src/workers.json"</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span>目录结构</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Workers <span class="title">getMap</span><span class="params">(String path)</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line"></span><br><span class="line">InputStream inputStream = JSONUtils.class.getClassLoader().getResourceAsStream(path);</span><br><span class="line">String json = readAsString(inputStream);</span><br><span class="line">JSONObject jsonObject = JSONObject.fromObject(json);</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改类型，解决JSON net.sf.ezmorph.bean.MorphDynaBean cannot be cast to com.xxx.xxxx.vo.Work的错误</span></span><br><span class="line">Map classMap = <span class="keyword">new</span> HashMap();</span><br><span class="line">classMap.put(<span class="string">"workers"</span>, Worker.class);</span><br><span class="line">JSONUtils.getMorpherRegistry().registerMorpher(<span class="keyword">new</span> DateMorpher(<span class="keyword">new</span> String[] &#123;<span class="string">"yyyy-MM-dd"</span>, <span class="string">"yyyy-MM-dd HH:mm:ss"</span>&#125;));</span><br><span class="line">Workers workers = (Workers) JSONObject.toBean(jsonObject, Workers.class, classMap);</span><br><span class="line"><span class="keyword">return</span> Workers;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 输出从指定路径+文件名读取到的文件流的字符内容。</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> inputStream输入流</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">readAsString</span><span class="params">(InputStream inputStream)</span><span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line"></span><br><span class="line">BufferedReader reader = <span class="keyword">null</span>;</span><br><span class="line">StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">String line;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(inputStream, <span class="string">"utf-8"</span>));</span><br><span class="line"><span class="keyword">while</span>((line = reader.readLine()) != <span class="keyword">null</span>)&#123;</span><br><span class="line">sb.append(line);</span><br><span class="line">sb.append(<span class="string">"\r\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sb.toString();</span><br><span class="line">&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(reader != <span class="keyword">null</span>)&#123;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">reader.close();</span><br><span class="line">&#125;<span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>kailLinux的使用</title>
      <link href="./2018/10/22/kailLinux%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>./2018/10/22/kailLinux%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="桌面"><a href="#桌面" class="headerlink" title="桌面"></a>桌面</h2><div class="article-img"><p><img src="../uploads/kailLinux.png" alt="fd"> </p></div>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>test</title>
      <link href="./2018/10/21/2018-10-21-test/"/>
      <url>./2018/10/21/2018-10-21-test/</url>
      
        <content type="html"><![CDATA[<p>test！！</p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>ssh key应用(git远程服务器)</title>
      <link href="./2018/10/21/ssh-keygen%E5%BA%94%E7%94%A8/"/>
      <url>./2018/10/21/ssh-keygen%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><h3 id="什么是公钥、私钥"><a href="#什么是公钥、私钥" class="headerlink" title="什么是公钥、私钥"></a>什么是公钥、私钥</h3><h3 id="能够解决什么问题"><a href="#能够解决什么问题" class="headerlink" title="能够解决什么问题"></a>能够解决什么问题</h3><h2 id="本地生成公钥与密钥"><a href="#本地生成公钥与密钥" class="headerlink" title="本地生成公钥与密钥"></a>本地生成公钥与密钥</h2><p>### </p><h4 id="在本地生成密钥对"><a href="#在本地生成密钥对" class="headerlink" title="在本地生成密钥对"></a>在本地生成密钥对</h4><p>通过git bash的编码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -C "xxxx@xx.com"# 输入密码，生成密钥对：xxxa和xxxa.pub</span><br><span class="line">cp xxxa ~/.ssh/# 将密钥放到指定~/.ssh文件夹下</span><br><span class="line">cat xxxa.pub# 打印出公钥文件，这一个可以先拷贝起来，用于服务端使用</span><br></pre></td></tr></table></figure><p>将密钥放到指定的ssh路径下（git默认读取的ssh文件路径）</p><h4 id="将私钥添加到缓存上"><a href="#将私钥添加到缓存上" class="headerlink" title="将私钥添加到缓存上"></a>将私钥添加到缓存上</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-add ~/.ssh/xxxa# ssh-add的作用主要将密钥添加到 ssh-agent 的高速缓存中，这样在当前会话中就不需要再次输入密码了</span><br></pre></td></tr></table></figure><h2 id="建立github的ssh-key"><a href="#建立github的ssh-key" class="headerlink" title="建立github的ssh key"></a>建立github的ssh key</h2><h4 id="登录github"><a href="#登录github" class="headerlink" title="登录github"></a>登录github</h4><blockquote><p><a href="https://github.com/settings/keys" target="_blank" rel="noopener">https://github.com/settings/keys</a></p></blockquote><p>点击New SSH key，将xxxa.pub公钥文件的拷贝值黏贴进来，title随便填，只是方便看。</p><h4 id="在本机测试连接github"><a href="#在本机测试连接github" class="headerlink" title="在本机测试连接github"></a>在本机测试连接github</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com# 因为我们把项目寄托在了github的服务器上了，所以是github.com</span><br></pre></td></tr></table></figure><h2 id="建立VPS服务的ssh-key"><a href="#建立VPS服务的ssh-key" class="headerlink" title="建立VPS服务的ssh key"></a>建立VPS服务的ssh key</h2><h3 id="拷贝公钥编码"><a href="#拷贝公钥编码" class="headerlink" title="拷贝公钥编码"></a>拷贝公钥编码</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat xxxa.pub# 打印出公钥文件，这一个可以先拷贝起来，用于服务端使用</span><br></pre></td></tr></table></figure><h3 id="在vps服务上存放公钥文件"><a href="#在vps服务上存放公钥文件" class="headerlink" title="在vps服务上存放公钥文件"></a>在vps服务上存放公钥文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi ~/.ssh/git_authorzied_keys# 前提是配置好了ssh服务</span><br></pre></td></tr></table></figure><h3 id="在本机测试连接github-1"><a href="#在本机测试连接github-1" class="headerlink" title="在本机测试连接github"></a>在本机测试连接github</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@xxxx.com# git是用户，因为我们把项目寄托在了VPS服务器上了，所以是ip地址或者域名</span><br></pre></td></tr></table></figure><h2 id="配置多个git服务"><a href="#配置多个git服务" class="headerlink" title="配置多个git服务"></a>配置多个git服务</h2><p> 可能公司与私用的github不一样，但是我们希望同一个客户端，能够同时同步到两个服务器。</p><h3 id="ssh目录下配置config"><a href="#ssh目录下配置config" class="headerlink" title=".ssh目录下配置config"></a>.ssh目录下配置config</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">   User git</span><br><span class="line">   Hostname github.com  #第一个的git地址</span><br><span class="line">   IdentityFile ~/.ssh/keyPaira  #访问第一个git的SSH KEY</span><br><span class="line">   Port   9102  #第一个的git端口</span><br><span class="line"></span><br><span class="line">Host xxxb.com</span><br><span class="line">   User git</span><br><span class="line">   Hostname xxxb.com#第二个的github的地址</span><br><span class="line">   IdentityFile ~/.ssh/keyPairb  #访问第二个的github的SSH KEY</span><br><span class="line">   Port   22</span><br><span class="line"><span class="meta">#</span><span class="bash"> PS：在git中，因为字符编码的问题，注释含有中文会出错</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 配置 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Namesilp购买域名</title>
      <link href="./2018/10/21/Namesilp%E8%B4%AD%E4%B9%B0%E5%9F%9F%E5%90%8D/"/>
      <url>./2018/10/21/Namesilp%E8%B4%AD%E4%B9%B0%E5%9F%9F%E5%90%8D/</url>
      
        <content type="html"><![CDATA[<h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><h3 id="namesilo官网"><a href="#namesilo官网" class="headerlink" title="namesilo官网"></a>namesilo官网</h3><blockquote><p><a href="https://www.liaosam.com/goto/namesilo" target="_blank" rel="noopener">www.namesilo.com</a></p></blockquote><h3 id="注册过程"><a href="#注册过程" class="headerlink" title="注册过程"></a>注册过程</h3><ol><li>姓名、邮箱、国家、地址、手机号</li><li>验证邮箱</li></ol><p>PS：注册信息尽量真实。没有必要担心你的真实信息被暴露，Namesilo 会提供免费的 Domain Privacy Protection 服务。</p><h3 id="domain查找"><a href="#domain查找" class="headerlink" title="domain查找"></a>domain查找</h3><ol><li>在home页面上，就是domainSearch啦</li></ol><div class="article-img"><p><img src="https://pinksmallfan.github.io/WenChongAndJiaoKou/uploads/namesiloDomain.png" alt="namesiloDomain"></p></div><h3 id="选择域名"><a href="#选择域名" class="headerlink" title="选择域名"></a>选择域名</h3><div class="article-img"><p><img src="..\uploads\selectDomain.png" alt="selectDomain"></p></div><h4 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h4><pre><code>1. com2. net3. org4. club5. top          顶级、高端、高级、首席、顶端等6. info</code></pre><h4 id="确认订单"><a href="#确认订单" class="headerlink" title="确认订单"></a>确认订单</h4><ol><li>设置域名续费规则、自动续费、设置隐私保护、注册时长（1年）、输入优惠码：okoff、go2think</li></ol><div class="article-img"><p><img src="..\uploads\namesilo.png" alt="namesilo"></p></div><h3 id="支付"><a href="#支付" class="headerlink" title="支付"></a>支付</h3><ol><li>银行卡（推荐）</li><li>PayPal（绑定银行卡也是比较麻烦的一点）</li><li>支付宝（需要用到的注册邮箱，由于本人支付宝找不到注册邮箱，就用银行卡了）</li><li>bitcoin</li><li>namesilo</li><li>Skrill</li><li>DWOLLA</li></ol><div class="article-img"><p><img src="..\uploads\domainManager.png" alt="domainManager"></p></div><h2 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h2><h3 id="设置DNS服务器"><a href="#设置DNS服务器" class="headerlink" title="设置DNS服务器"></a>设置DNS服务器</h3><ol><li>点击Manager My Domains</li><li>勾选你的域名（这样子才可以勾选ACTIONS for selectede Domains）</li><li>点击Changes NameServers（更改域名服务器）</li></ol><div class="article-img"><p><img src="..\uploads\namesiloDNS.png" alt="namesiloDNS"></p></div><h3 id="判断是否DNS解析成功"><a href="#判断是否DNS解析成功" class="headerlink" title="判断是否DNS解析成功"></a>判断是否DNS解析成功</h3><blockquote><p><a href="https://www.ipip.net/ip.html" target="_blank" rel="noopener">https://www.ipip.net/ip.html</a></p></blockquote><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://www.jianshu.com/p/27b0ebdcec2c" target="_blank" rel="noopener">https://www.jianshu.com/p/27b0ebdcec2c</a></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> other </tag>
            
            <tag> 配置 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>VPS搭建hexo私人blog</title>
      <link href="./2018/10/21/blog+hexo+vps/"/>
      <url>./2018/10/21/blog+hexo+vps/</url>
      
        <content type="html"><![CDATA[<h2 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h2><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><h4 id="VPS"><a href="#VPS" class="headerlink" title="VPS"></a>VPS</h4><ol><li><p><strong>Location</strong>    Los Angeles</p></li><li><p><strong>CPU Cores</strong>    1 x 2.1 GHz</p></li><li><p><strong>RAM</strong>                512 x MB</p></li><li><p><strong>Space</strong>              15 x GB</p></li><li><p><strong>Number of IPs</strong>   1 x IPv4</p></li><li><p><strong>Number of IPv6 Address</strong>   1 x IPv6</p></li><li><p><strong>Bandwidth</strong>          500 x GB</p></li></ol><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h3><h3 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h3><h3 id="hexo博客"><a href="#hexo博客" class="headerlink" title="hexo博客"></a>hexo博客</h3><h3 id="vps"><a href="#vps" class="headerlink" title="vps"></a>vps</h3><h3 id="远程工具"><a href="#远程工具" class="headerlink" title="远程工具"></a>远程工具</h3><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><h2 id="搭建流程"><a href="#搭建流程" class="headerlink" title="搭建流程"></a>搭建流程</h2><h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y git</span><br></pre></td></tr></table></figure><h3 id="安装nodeJs"><a href="#安装nodeJs" class="headerlink" title="安装nodeJs"></a>安装nodeJs</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y nodejs</span><br></pre></td></tr></table></figure><h3 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y nginx</span><br></pre></td></tr></table></figure><h3 id="检查安装情况"><a href="#检查安装情况" class="headerlink" title="检查安装情况"></a>检查安装情况</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git --version# 1.8.3.1</span><br><span class="line">node -v# v10.12.0   or node --version</span><br><span class="line">nginx -v# nginx/1.12.2</span><br></pre></td></tr></table></figure><h3 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置Nginx</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 进入nginx路径，默认为这个路径，如果没有，可以 find / -name <span class="string">"nginx"</span> 找一找</span></span><br><span class="line">cd /etc/nginx</span><br><span class="line">cp nginx.conf nginx.conf.bak# 习惯性备份</span><br><span class="line">vi nginx.conf# 编辑nginx.conf</span><br></pre></td></tr></table></figure><p>修改nginx.conf的user节点</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user gui;</span><br></pre></td></tr></table></figure><p>修改nginx.conf的server节点</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen       80 default_server;</span><br><span class="line">    listen       [::]:80 default_server;</span><br><span class="line">    server_name  www.wenchongjiaokou.info wenchongjiaokou.info;</span><br><span class="line">    root         /home/gui/blog/;</span><br><span class="line"></span><br><span class="line">    # Load configuration files for the default server block.</span><br><span class="line">    include /etc/nginx/default.d/*.conf;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    error_page 404 /404.html;</span><br><span class="line">    location = /40x.html &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    error_page 500 502 503 504 /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="启动Nginx"><a href="#启动Nginx" class="headerlink" title="启动Nginx"></a>启动Nginx</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service nginx start# 启动nginxor systemctl start nginx</span><br><span class="line">service nginx status # 查看nginx状态or systemctl status nginx,active(running)就OK</span><br></pre></td></tr></table></figure><h3 id="安装Git用户"><a href="#安装Git用户" class="headerlink" title="安装Git用户"></a>安装Git用户</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">adduser git</span><br><span class="line">chmod 740 /etc/sudoers</span><br><span class="line">vi /etc/sudoers</span><br></pre></td></tr></table></figure><p>将git赋予执行sudoers权限的作用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xxc ALL=(ALL) ALL</span><br><span class="line"><span class="meta">#</span><span class="bash"> 作用：允许系统管理员让普通用户执行一些或者全部的root命令，但是没有root权限访问，依旧是用户的身份</span></span><br></pre></td></tr></table></figure><p>将权限保存回原来的样子</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 400 /etc/sudoers</span><br></pre></td></tr></table></figure><h3 id="给Git用户配置ssh"><a href="#给Git用户配置ssh" class="headerlink" title="给Git用户配置ssh"></a>给Git用户配置ssh</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /home/xxc</span><br><span class="line">mkdir ~/.ssh</span><br><span class="line">vi ~/.ssh/git_authorzied_keys# 将本地机子的xxxx.pub公钥文件文本打开，拷贝编码值粘贴此处</span><br><span class="line">chmod 600 ~/.ssh/git_authorzied_keys</span><br><span class="line">chmod 700 ~/.ssh</span><br></pre></td></tr></table></figure><h3 id="本地git访问服务器"><a href="#本地git访问服务器" class="headerlink" title="本地git访问服务器"></a>本地git访问服务器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -v git@服务器地址# 服务器地址：ip地址、域名地址</span><br></pre></td></tr></table></figure><h3 id="建立git目录"><a href="#建立git目录" class="headerlink" title="建立git目录"></a>建立git目录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /home/xxc</span><br><span class="line">git init --bare xxxd.git# 初始化一个xxxd.init，可通过ls查看创建文件</span><br></pre></td></tr></table></figure><h2 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h2><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li>VPS搭建个人博客：<a href="https://www.xksblog.top/use-VPS-to-build-personal-Hexo-blog.html" target="_blank" rel="noopener">https://www.xksblog.top/use-VPS-to-build-personal-Hexo-blog.html</a></li><li></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> other </tag>
            
            <tag> 配置 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>锻炼PC肌</title>
      <link href="./2018/10/20/PC%E8%82%8C%E7%9A%84%E9%94%BB%E7%82%BC/"/>
      <url>./2018/10/20/PC%E8%82%8C%E7%9A%84%E9%94%BB%E7%82%BC/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是PC肌"><a href="#什么是PC肌" class="headerlink" title="什么是PC肌"></a>什么是PC肌</h2><h3 id="PC肌图"><a href="#PC肌图" class="headerlink" title="PC肌图"></a>PC肌图</h3><div class="article-img"><p><img src="https://pinksmallfan.github.io/WenChongAndJiaoKou/uploads/PC肌2.webp" alt="PC肌"></p></div><p>上男下女</p><div class="article-img"><p><img src="https://pinksmallfan.github.io/WenChongAndJiaoKou/uploads/PC肌.webp" alt="PC肌"></p></div><p>切面图</p><h3 id="PC肌概念"><a href="#PC肌概念" class="headerlink" title="PC肌概念"></a>PC肌概念</h3><p>​    PC肌，是英文pubococcygeus muscle的缩写，即耻尾肌，通俗的讲，对于男性而言就是靠近尿道和直肠的肌肉，对于女性而言，这个肌肉靠近尿道、阴道、直肠（如上图）</p><h2 id="PC肌锻炼"><a href="#PC肌锻炼" class="headerlink" title="PC肌锻炼"></a>PC肌锻炼</h2><h3 id="定位PC肌"><a href="#定位PC肌" class="headerlink" title="定位PC肌"></a>定位PC肌</h3><pre><code>#### 停止排尿</code></pre><p>​    假装你正在小便，然后通过快速的肌肉收缩停止排尿。这个过程中，你用于停止膀胱排尿的肌肉就是PC肌。（注意：以下训练中，不可以通过憋尿的方式来练习！）</p><h4 id="女生版"><a href="#女生版" class="headerlink" title="女生版"></a>女生版</h4><p>​    将两腿打开，用一根手指伸进洞洞，尝试用力收缩夹紧手指，感受发力点。</p><h4 id="男生版"><a href="#男生版" class="headerlink" title="男生版"></a>男生版</h4><p>​    用力将丁丁动一下（向上顶、颤动一下），感受用力的肌肉。</p><p>​    </p><h3 id="PC肌锻炼的目标"><a href="#PC肌锻炼的目标" class="headerlink" title="PC肌锻炼的目标"></a>PC肌锻炼的目标</h3><ol><li>（女）改善下面松弛问题</li><li>（女）预防和治疗尿失禁</li><li>（女）防止子宫脱落</li><li>（女）增加洞洞弹性</li><li>（女）防止顺产时私处撕裂</li><li>（女）增加做爱时啪啪啪的摩擦感</li><li>（女）增强高潮时的收缩度</li><li>（男）锻炼你控制射精的肌肉，避免早泄。</li><li>（男）锻炼出具有“肌肉感”的阴茎（也就是充分让它变粗）。</li><li>（男）提高射精量和射精频率。</li><li>（男）预防前列腺癌</li><li>显著改善性能力。</li><li>锻炼出具有多次性高潮，而无疲惫感。</li><li></li></ol><h3 id="PC肌锻炼的基本方法"><a href="#PC肌锻炼的基本方法" class="headerlink" title="PC肌锻炼的基本方法"></a>PC肌锻炼的基本方法</h3><ol><li>不停的进行停止排尿感觉的锻炼（不是指排尿的时候锻炼，而是定位PC肌，找到感觉）</li><li>直接躺床，两腿伸直</li><li>锻炼姿势，躺床版本</li></ol><div class="article-img"><p><img src="https://pinksmallfan.github.io/WenChongAndJiaoKou/uploads/PC肌姿势.jpg" alt="PC肌姿势"></p></div><ol start="3"><li>锻炼姿势，坐椅版本：坐在椅子上，背靠椅背，两腿双脚岔开八字，PC肌相当于面向正前方</li></ol><h3 id="PC肌锻炼的初级方法"><a href="#PC肌锻炼的初级方法" class="headerlink" title="PC肌锻炼的初级方法"></a>PC肌锻炼的初级方法</h3><h4 id="阶段一（第一周）"><a href="#阶段一（第一周）" class="headerlink" title="阶段一（第一周）"></a>阶段一（第一周）</h4><ol><li>每天进行3组。</li><li>每组收缩PC肌20下。</li><li>每次收缩保持1到2秒。</li><li>放松肌肉。</li><li>每周进行3到4天。</li><li>正常呼吸，避免屏气。</li></ol><h4 id="阶段二（第二周）"><a href="#阶段二（第二周）" class="headerlink" title="阶段二（第二周）"></a>阶段二（第二周）</h4><ol><li>每天进行3组。</li><li>每组收缩PC肌20下。</li><li>每组慢速收缩PC肌10下。</li><li>非慢速收缩：每次PC肌保持1到2秒。</li><li>慢速收缩：5秒时间慢慢对PC肌收缩 直至不能继续收缩为止。</li><li>每次收缩保持5秒以上。</li><li>尽可能的利用剩下的5秒时间逐渐放松肌肉。</li></ol><h3 id="PC肌锻炼的中级方法"><a href="#PC肌锻炼的中级方法" class="headerlink" title="PC肌锻炼的中级方法"></a>PC肌锻炼的中级方法</h3><h4 id="阶段一（第三周）"><a href="#阶段一（第三周）" class="headerlink" title="阶段一（第三周）"></a>阶段一（第三周）</h4><ol><li>每天三组。</li><li>每组收缩PC肌50下。</li><li>每次收缩PC肌保持5到7秒。</li><li>开始感受如何单独或同时收缩你的阴茎和肛门括约肌</li></ol><h4 id="阶段二（第四周）"><a href="#阶段二（第四周）" class="headerlink" title="阶段二（第四周）"></a>阶段二（第四周）</h4><ol><li>阶段一+锻炼结束后。</li><li>进行PC肌交替练习。</li><li>非常慢的收缩PC肌（数分钟）。</li><li>保持缓和的呼吸。</li><li>极限时，开始收缩PC肌20下。</li><li>需要收缩到完全收缩的位置点上，并保持30秒。</li></ol><h4 id="阶段三（第五周）"><a href="#阶段三（第五周）" class="headerlink" title="阶段三（第五周）"></a>阶段三（第五周）</h4><ol><li>阶段一+锻炼结束后。</li><li>进行PC肌断续练习。</li><li>断断续续的收缩PC肌。</li><li>断断续续的放松肌肉。</li><li>要点：轻轻的断断续续，直到完全收紧；反过来一样。</li></ol><h4 id="阶段四—男生专用版"><a href="#阶段四—男生专用版" class="headerlink" title="阶段四—男生专用版"></a>阶段四—男生专用版</h4><ol><li>勃起状态</li><li>每组30次</li><li>方法一：小毛巾放在勃起的丁丁上（给丁丁施压，举重）</li><li>方法一：PC肌收缩举起小毛巾，坚持2到5秒</li><li>方法二：手放在丁丁上方1到2英寸（丁丁摸高）</li><li>方法二：PC肌收缩顶到手掌位置，坚持2到5秒</li><li>方法三：手放在丁丁上方1到2英寸，并往下压（丁丁举重+摸高）</li><li>方法三：PC肌收缩到手手掌位置，手掌下压，坚持2到5秒</li><li>放松</li></ol><h3 id="PC肌锻炼的高级方法"><a href="#PC肌锻炼的高级方法" class="headerlink" title="PC肌锻炼的高级方法"></a>PC肌锻炼的高级方法</h3><h4 id="阶段一（伴侣款）"><a href="#阶段一（伴侣款）" class="headerlink" title="阶段一（伴侣款）"></a>阶段一（伴侣款）</h4><ol><li>勃起状态+湿湿状态</li><li>男性勃起、抽插，女性进入状态</li><li>男性与女性轮流收缩</li></ol><h4 id="阶段二（反复高潮锻炼）"><a href="#阶段二（反复高潮锻炼）" class="headerlink" title="阶段二（反复高潮锻炼）"></a>阶段二（反复高潮锻炼）</h4><ol><li>勃起状态</li><li>逐渐按摩丁丁，直到高潮</li><li>接近高潮，停止按摩，开始收缩PC肌</li><li>勃起状态变疲软，重复第2点</li><li>再次接近高潮，重复第3点</li></ol><h4 id="阶段三（魔鬼级别）"><a href="#阶段三（魔鬼级别）" class="headerlink" title="阶段三（魔鬼级别）"></a>阶段三（魔鬼级别）</h4><ol><li>只做1组</li><li>热身：50下PC肌收缩</li><li>尽可能收缩PC肌，30s</li><li>收缩2s，放松2s，100下PC肌收缩</li><li>尽可能收缩PC肌，1min</li><li>休息2min</li><li>50下PC肌收缩，5秒收缩练习。</li></ol><h3 id="PC肌锻炼的注意点"><a href="#PC肌锻炼的注意点" class="headerlink" title="PC肌锻炼的注意点"></a>PC肌锻炼的注意点</h3><ol><li>PC肌的锻炼，是肌肉的锻炼，所以切不可做过多的量！不然效果相反，只会损伤肌肉，达不到锻炼的作用。</li><li>一开始锻炼的时候，尽可能的在安静的地方练习，需要提高注意力，把注意力集中在，进行锻炼！切不可以分心进行PC肌收缩。</li><li>练习需要坚持不懈，为了你的xing福，每天都需要训练，逐渐加强。</li><li>（男性）这种锻炼会更多偏向于变得有肌肉（充血更充沛）</li><li>找不到感觉，需要加强自身的运动（跑步、深蹲等），同时花上1周时间进行PC定位，去感觉，但是切不可通过排尿进行锻炼！</li><li>锻炼感觉，需要有胀热感</li></ol><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li>PC肌练习：<a href="https://zh.wikihow.com/%E9%94%BB%E7%82%BCPC%E8%82%8C" target="_blank" rel="noopener">https://zh.wikihow.com/%E9%94%BB%E7%82%BCPC%E8%82%8C</a></li><li>知乎：<a href="https://www.zhihu.com/question/21012557" target="_blank" rel="noopener">https://www.zhihu.com/question/21012557</a></li><li>PC肌练习男女版：<a href="https://mp.weixin.qq.com/s/Ap7c1o808CE5Z2kLITmPpQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/Ap7c1o808CE5Z2kLITmPpQ</a></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> other </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Gradle与Maven的区别</title>
      <link href="./2018/10/19/Gradle&amp;Maven/"/>
      <url>./2018/10/19/Gradle&amp;Maven/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> 对比 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>：常见error</title>
      <link href="./2018/10/19/error/"/>
      <url>./2018/10/19/error/</url>
      
        <content type="html"><![CDATA[<h2 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h2><h3 id="jar包引用冲突"><a href="#jar包引用冲突" class="headerlink" title="jar包引用冲突"></a>jar包引用冲突</h3><h4 id="slf4j"><a href="#slf4j" class="headerlink" title="slf4j"></a>slf4j</h4><ol><li>错误描述：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">idea SLF4J: Failed to load class &quot;org.slf4j.impl.StaticLoggerBinder&quot;.</span><br><span class="line">Defaulting to no-operation (NOP) logger implementation</span><br></pre></td></tr></table></figure><ol start="2"><li>错误原因：spring-boot自带了slf4j，引起错误的冲突包，是：maven通过依赖导包，而且在jdk-jre-lib-ext下包含了slf4j的包</li><li>解决方案：删除maven多余的依赖，删除jdk-jre-lib-ext下包含了slf4j的包</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> error </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>idea下的spring-boot搭建</title>
      <link href="./2018/10/18/idea%E4%B8%8Bspring-boot%E7%9A%84%E6%90%AD%E5%BB%BA/"/>
      <url>./2018/10/18/idea%E4%B8%8Bspring-boot%E7%9A%84%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="Level-1：helloworld"><a href="#Level-1：helloworld" class="headerlink" title="Level 1：helloworld"></a>Level 1：helloworld</h2><ol><li><p>File-&gt;new-&gt;Module-&gt;Spring Initializr-&gt;Default-&gt;Next</p></li><li><p>填写Group、Artifact、选择Maven project-&gt;Next</p></li><li><p>选择Web-&gt;Web-&gt;Finish</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在xxxApplication.java的同级目录下，建立一个controller文件夹，在controller下新建一个HelloController.java</p></li><li><p>编写控制层</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@EnableAutoConfiguration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/hello"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Hello World"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>访问主页：<a href="http://localhost:8080/hello" target="_blank" rel="noopener">http://localhost:8080/hello</a></p></li></ol><div class="article-img"><p><img src="E:\blog\lmg\PinkSmallFan\project\source\uploads\Spring-boot-helloworld目录结构.png" alt="目录结构"></p></div><hr><h2 id="Level2：Mysql数据库"><a href="#Level2：Mysql数据库" class="headerlink" title="Level2：Mysql数据库"></a>Level2：Mysql数据库</h2><ol start="7"><li><p>yml配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  datasource:</span></span><br><span class="line"><span class="attr">    url:</span> <span class="attr">jdbc:mysql://192.168.88.107:3306/mytest?useUnicode=true&amp;characterEncoding=utf8&amp;autoReconnect=true</span></span><br><span class="line"><span class="attr">    username:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">    password:</span> <span class="number">123456</span></span><br></pre></td></tr></table></figure></li><li><p>数据库建表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`persion`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`persion`</span>  (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`name`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`age`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>) <span class="keyword">USING</span> BTREE</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">InnoDB</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> = utf8</span><br></pre></td></tr></table></figure></li><li><p>bean类</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Persion</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> String description;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Person&#123;"</span> +</span><br><span class="line">                <span class="string">"id="</span> + id +</span><br><span class="line">                <span class="string">", name='"</span> + name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", age="</span> + age +</span><br><span class="line">                <span class="string">", description='"</span> + description + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Level3：Mybatis"><a href="#Level3：Mybatis" class="headerlink" title="Level3：Mybatis"></a>Level3：Mybatis</h2><ol start="9"><li><p>添加依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写mapper</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> net.aguicode.demo.bo.Persion;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Param;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Select;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">PersionMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"SELECT * FROM PERSION WHERE id = #&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function">Persion <span class="title">getById</span><span class="params">(@Param(<span class="string">"id"</span>)</span> <span class="keyword">int</span> id)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 微服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring boot </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>浅谈Saas</title>
      <link href="./2018/10/17/%E6%B5%85%E8%B0%88Saas/"/>
      <url>./2018/10/17/%E6%B5%85%E8%B0%88Saas/</url>
      
        <content type="html"><![CDATA[<h1 id="Sass"><a href="#Sass" class="headerlink" title="Sass"></a>Sass</h1><h2 id="初体验"><a href="#初体验" class="headerlink" title="初体验"></a>初体验</h2><h3 id="什么是Saas"><a href="#什么是Saas" class="headerlink" title="什么是Saas"></a>什么是Saas</h3><p>Saas：Software as a server，软件即服务。</p><p>​    简单一句话，就是“云软件”。</p><p>​    Saas厂商搭建好了设备、平台、软件，将应用程序以及数据库等部署到了云服务上，企业通过“租用”这种软件，而非传统的“买断”、下载即用的方式来获得软件服务。Saas服务提供了软件与服务器等的维护、技术支持。</p><h3 id="Saas公司"><a href="#Saas公司" class="headerlink" title="Saas公司"></a>Saas公司</h3><ul><li>国际：Salesforce、ORACLE、SAP、微软</li><li>国内：北森、纷享销客、销售易、EC、腾讯企点、易企秀、智趣百川、钉钉、企业微信、智齿、Udesk、有赞、微盟</li></ul><h3 id="对比Sass、Pass、Iaas"><a href="#对比Sass、Pass、Iaas" class="headerlink" title="对比Sass、Pass、Iaas"></a>对比Sass、Pass、Iaas</h3><p>​    前提：有一个用户，需要一个xxx功能的应用。</p><p>​    方案一：用户什么也没有，需要采购一些设备、购买对应的开发工具、接着开发出这个应用软件供自己使用；</p><p>​    方案二：用户不想购买设备了，直接购买了云服务，享受场外的服务器、存储和网络硬件，但是在云服务上，其他的什么也没有，还需要购买或搭建对应的开发工具、操作系统等，并维护这些平台，接着才能开发对应的应用软件，架在云服务上运行；</p><p>​    方案三：用户直接购买了云服务，并且云服务还提供了中间件，即各种开发和分发应用的工具、OS, 编程语言, 开发库, 部署工具, 帮助软件开发者更快的开发软件服务等，用户可以直接在上面开发应用程序，就行了。</p><p>​    方案四：用户什么都不想做，直接购买了云服务，这个云服务，提供了设备、支持运行应用的平台、还有想要应用程序，都给你打包好了，你只要直接用就行了，连维护啥的都不需要。</p><div class="article-bounded"><div class="article-table"><table><thead><tr><th></th><th>Iaas</th><th style="text-align:left">Paas</th><th>Saas</th></tr></thead><tbody><tr><td>主要用户</td><td>系统管理员</td><td style="text-align:left">开发人员</td><td>普通用户</td></tr><tr><td>主要技术</td><td>Virualization、VMware、Virtual Box、Xen</td><td style="text-align:left">Google GFS、BidTable、Hadoop、HDFS、TFS</td><td>分布式应用程序、SOAP、Https、Web2.0、Paas API</td></tr><tr><td>主要产品</td><td>Amazon EC2、IBM Blue Cloud、Digital Ocean</td><td style="text-align:left">Google App Engine、Windows Azure Platform</td><td>Google Apps、Salesforce Sales Cloud、Facebook</td></tr><tr><td>虚拟化、服务器、存储、网络硬件</td><td>有</td><td style="text-align:left">有</td><td>有</td></tr><tr><td>运行环境、中间件、操作系统</td><td>无</td><td style="text-align:left">有</td><td>有</td></tr><tr><td>应用、数据</td><td>无</td><td style="text-align:left">无</td><td>有</td></tr><tr><td>安全性</td><td>高</td><td style="text-align:left">中</td><td>低</td></tr><tr><td>关注点</td><td>设备</td><td style="text-align:left">软件环境</td><td>功能</td></tr><tr><td></td><td></td><td style="text-align:left"></td></tr></tbody></table></div></div><p>​    </p><h3 id="Saas的四个分级"><a href="#Saas的四个分级" class="headerlink" title="Saas的四个分级"></a>Saas的四个分级</h3><div class="article-bounded"><div class="article-table"><table><thead><tr><th>级别</th><th>特点</th></tr></thead><tbody><tr><td>一级（<strong>定制开发</strong>）</td><td>不可配置、无高性能、不可伸缩</td></tr><tr><td>二级（<strong>可配置</strong>）</td><td>可配置、无高性能、不可伸缩</td></tr><tr><td>三级（<strong>高性能的多租户架构</strong>）</td><td>可配置、高性能、不可伸缩</td></tr><tr><td>四级（<strong>可伸缩性的多租户架构</strong>）</td><td>可配置、高性能、可伸缩</td></tr></tbody></table></div></div><div class="article-img"><p><img src="https://pinksmallfan.github.io/WenChongAndJiaoKou/uploads/一级Saas.jpg" alt="一级Saas"></p></div><ol><li>定制开发：软件服务提供商为每个客户定制一套专属软件，不同软件版本有分属的独立代码，并被分别部署在不同的数据库实例和应用服务器实例上</li></ol><div class="article-img"><p><img src="https://pinksmallfan.github.io/WenChongAndJiaoKou/uploads/二级Saas.jpg" alt="二级Saas"></p></div><ol start="2"><li>可配置：为每个客户独立部署一个运行实例。只是，与一级成熟度模型中“每个实例专属一份代码”相比，二级成熟度模型中，每个实例共享同一份代码，而客户的个性化需求，仅通过不同的配置来实现。</li></ol><div class="article-img"><p><img src="https://pinksmallfan.github.io/WenChongAndJiaoKou/uploads/三级Saas.jpg" alt="三级Saas"></p></div><ol start="3"><li>高性能的多租用架构：隔离不同租户数据，确保不同租户共享同一个运行实例的基础上，为每个租户提供独立的应用体验和数据空间</li></ol><div class="article-img"><p><img src="https://pinksmallfan.github.io/WenChongAndJiaoKou/uploads/四级Saas.jpg" alt="四级Saas"></p></div><ol start="4"><li>可伸缩性的多租用架构：将已接入用户数据分配到不同Instance以分担用户访问的方式，解决多租户单实例应用架构下，集中式数据库随租户数量增多而性能受限的问题。一种高效的水平扩展策略，在租户数量大增时，无需更改应用架构，而仅需简单增加硬件设备数量 ，就可实现“支撑应用规模增长，方便实施应用修改”的效果。</li></ol><h2 id="Saas-架构"><a href="#Saas-架构" class="headerlink" title="Saas 架构"></a>Saas 架构</h2><h2 id="Saas-关键点"><a href="#Saas-关键点" class="headerlink" title="Saas 关键点"></a>Saas 关键点</h2><h3 id="Saas——多用户租赁模式"><a href="#Saas——多用户租赁模式" class="headerlink" title="Saas——多用户租赁模式"></a>Saas——多用户租赁模式</h3><ol><li>分布式计算模型</li><li>分布式数据存储和访问模型</li><li>分布式部署运维模型</li></ol><h3 id="分布式数据库"><a href="#分布式数据库" class="headerlink" title="分布式数据库"></a>分布式数据库</h3><ol><li>Ocean数据库（阿里巴巴）</li><li>MHA架构</li></ol><p>预定义、行转列、XML扩展字段</p><h3 id="工作流程"><a href="#工作流程" class="headerlink" title="工作流程"></a>工作流程</h3><p>docker——业务流程可配置</p><p>java自带工作流程</p><p>###　技术方案</p><p>Protal</p><p>负载均衡（LVS）</p><p>单点登录（opensso、CAS、Josso）</p><p>消息中间件（JBoss、ActiveMQ）</p><p>分布式文件存储（Hadoop HDFS 、MogleFS）</p><p>数据缓存（EH，M）</p><p>MOSQL（MangoDB）</p><p>目录服务（OpenDS、OpenLDAP）</p><h2 id="想法"><a href="#想法" class="headerlink" title="想法"></a>想法</h2><p>云js</p><p>云dll</p><p>云接口</p><p>云数据库</p><p>第一站——CA</p><p>第二站——？？</p><p>第三站——？？</p><p>第四站——？？</p><p>？？</p><p>？？</p><p>手头有什么资源，有利于自己的发展？？</p><p><strong>建立一个方案的服务与系统应用集成！！</strong></p><h2 id="参考网站"><a href="#参考网站" class="headerlink" title="参考网站"></a>参考网站</h2><ol><li>什么是Saas：<a href="https://new.qq.com/omn/20180720/20180720A1BAAC.html" target="_blank" rel="noopener">https://new.qq.com/omn/20180720/20180720A1BAAC.html</a></li><li>Saas的窘境与未来：<a href="http://www.infoq.com/cn/articles/SaaS-SkyNAS-Synology" target="_blank" rel="noopener">http://www.infoq.com/cn/articles/SaaS-SkyNAS-Synology</a></li><li>阮一峰：<a href="http://www.ruanyifeng.com/blog/2017/07/iaas-paas-saas.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2017/07/iaas-paas-saas.html</a></li><li>Saas的4级成熟度模型：<a href="https://www.jianshu.com/p/a401f951d560" target="_blank" rel="noopener">https://www.jianshu.com/p/a401f951d560</a></li><li>电商架构：<a href="https://www.afenxi.com/57103.html" target="_blank" rel="noopener">https://www.afenxi.com/57103.html</a></li><li>Saas的4级成熟度模型：<a href="https://www.jianshu.com/p/a401f951d560" target="_blank" rel="noopener">https://www.jianshu.com/p/a401f951d560</a></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 云服务 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Zabbix部署细节</title>
      <link href="./2018/10/16/Zabbix%E9%83%A8%E7%BD%B2%E7%BB%86%E8%8A%82/"/>
      <url>./2018/10/16/Zabbix%E9%83%A8%E7%BD%B2%E7%BB%86%E8%8A%82/</url>
      
        <content type="html"><![CDATA[<h2 id="完成时间"><a href="#完成时间" class="headerlink" title="完成时间"></a>完成时间</h2><p>部署时间：2018年10月21日</p><p>未完待续…</p><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><ol><li>zabbix安装和配置：<a href="http://blog.51cto.com/13736286/2150741" target="_blank" rel="noopener">http://blog.51cto.com/13736286/2150741</a></li><li>CentOS7下的部署：<a href="https://www.cnblogs.com/Sungeek/p/9069999.html" target="_blank" rel="noopener">https://www.cnblogs.com/Sungeek/p/9069999.html</a></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 配置 </tag>
            
            <tag> 自动化 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>R语言的基本使用</title>
      <link href="./2018/10/16/R_learn/"/>
      <url>./2018/10/16/R_learn/</url>
      
        <content type="html"><![CDATA[<h2 id="读取数据"><a href="#读取数据" class="headerlink" title="读取数据"></a>读取数据</h2><h3 id="操作路径"><a href="#操作路径" class="headerlink" title="操作路径"></a>操作路径</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">setwd(<span class="string">'path'</span>)<span class="comment"># 设置当前路径</span></span><br><span class="line">getwd()    <span class="comment"># 查看当前目录</span></span><br><span class="line"><span class="comment"># 举例：</span></span><br><span class="line"><span class="comment"># mac</span></span><br><span class="line">setwd(<span class="string">'/Users/zoeZhang/R'</span>)</span><br><span class="line"><span class="comment"># windows</span></span><br><span class="line">setwd(<span class="string">'C:/Users/zoeZhang/Destop/R'</span>)</span><br></pre></td></tr></table></figure><h3 id="加载与操作工具包"><a href="#加载与操作工具包" class="headerlink" title="加载与操作工具包"></a>加载与操作工具包</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(survival)<span class="comment"># 加载survival工具包</span></span><br><span class="line">biocLite(<span class="string">'package'</span>)<span class="comment"># 安装package工具包</span></span><br><span class="line">install.packages(<span class="string">'package'</span>)<span class="comment"># 安装package工具包</span></span><br><span class="line">remove.packages(<span class="string">'package'</span>)<span class="comment"># 删除package工具包</span></span><br><span class="line">update.packages()<span class="comment"># 更新所有工具包</span></span><br><span class="line"><span class="keyword">source</span>(<span class="string">'https://bioconductor.org/biocLite.R'</span>)<span class="comment"># 根据URL的方式来下载对应的工具包</span></span><br><span class="line"></span><br><span class="line">packages(all.available=<span class="literal">T</span>)     <span class="comment"># 查看所有package</span></span><br><span class="line">search()<span class="comment"># 查看已经加载的 package</span></span><br><span class="line"><span class="keyword">detach</span>(package:package1)<span class="comment"># 移除不需要的package1包</span></span><br></pre></td></tr></table></figure><h3 id="数据类型转换"><a href="#数据类型转换" class="headerlink" title="数据类型转换"></a>数据类型转换</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">data&lt;-as.character(number);<span class="comment"># 将数字类型的数据，number转为字符串的data</span></span><br><span class="line">data&lt;-as.numeric(string);<span class="comment"># 将数字符串的数据，string转为数字类型的data</span></span><br><span class="line">data&lt;-as.array(original);<span class="comment"># 将original转为数组类型的data</span></span><br><span class="line">data&lt;-as.data.frame(array);<span class="comment"># 将矩阵类型的数据，original转为数据框类型的data</span></span><br><span class="line">data&lt;-as.matrix(original);<span class="comment"># 将original转为矩阵类型的data</span></span><br><span class="line">is.character(data);<span class="comment"># 判断data是什么类型</span></span><br></pre></td></tr></table></figure><h3 id="加载数据"><a href="#加载数据" class="headerlink" title="加载数据"></a>加载数据</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建一个example变量，读取example.txt到example上</span></span><br><span class="line">example&lt;-read.table(<span class="string">'example.txt'</span>,fill=<span class="literal">TRUE</span>,head=<span class="literal">TRUE</span>)</span><br><span class="line">head(example)<span class="comment"># 显示example变量的前行数据</span></span><br><span class="line">os&lt;-example[,<span class="string">'survival'</span>]<span class="comment"># 将example变量的surival相关数据输出到os变量</span></span><br></pre></td></tr></table></figure><h2 id="生存分析"><a href="#生存分析" class="headerlink" title="生存分析"></a>生存分析</h2><h3 id="关键函数"><a href="#关键函数" class="headerlink" title="关键函数"></a>关键函数</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Surv(time,event)<span class="comment"># time:时间发生的跟踪时间、event：预期事件的发生状态</span></span><br><span class="line">survfit(formula)<span class="comment"># formula：预测变量之间的关系</span></span><br></pre></td></tr></table></figure><h3 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">fit&lt;-survfit(Surv(time,event)~group,type=<span class="string">'kaplan-meier'</span>)</span><br><span class="line"><span class="comment"># 获取数据的统计摘要和性质</span></span><br><span class="line">summary(fit)</span><br><span class="line"></span><br><span class="line"><span class="comment">#其中formula是Surv(time,event)~group,type='kaplan-meier'</span></span><br><span class="line"><span class="comment"># 开始画图，画点，fit：生存分析的数值向量 lty：线条类型</span></span><br><span class="line">plot(fit,lty=<span class="number">1</span>:<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># list(a,b)，存放两个元素的列表， c(a,b),创建一个有2个元素的向量，lty：线条类型</span></span><br><span class="line"><span class="comment"># 添加图例，即坐标轴这些</span></span><br><span class="line">legend(list(x=<span class="number">0.2</span>,y=<span class="number">0.2</span>), c(<span class="string">"Group1"</span>, <span class="string">"Group2"</span>), lty = <span class="number">1</span>:<span class="number">3</span>) </span><br><span class="line"></span><br><span class="line"><span class="comment"># 用于不同组的统计检验</span></span><br><span class="line">survdiff(Surv(os,event)~group,rho=<span class="number">0</span>)</span><br></pre></td></tr></table></figure><h2 id="核苷酸芯片数据的分析"><a href="#核苷酸芯片数据的分析" class="headerlink" title="核苷酸芯片数据的分析"></a>核苷酸芯片数据的分析</h2><h3 id="关键函数-affy"><a href="#关键函数-affy" class="headerlink" title="关键函数(affy)"></a>关键函数(affy)</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 读取当前目录raw_data文件的细胞文件，将值赋予给affy.data对象</span></span><br><span class="line"><span class="comment"># 当前目录可以通过getwd()和setwd('xxxx/x/xx/')来获取与设置</span></span><br><span class="line">affy.data = ReadAffy(celfile.path=<span class="string">"raw_data"</span>) </span><br><span class="line"><span class="comment"># 查看芯片基本的数据信息</span></span><br><span class="line">show(affy.data)</span><br><span class="line"><span class="comment"># 查看芯片的样品名</span></span><br><span class="line">sampleNames(affy.data)</span><br><span class="line"><span class="comment"># 读取affy.data数据中的A.CEL/B.CEL/C.CEL/D.CEL数据，并赋值到affy.data.E上</span></span><br><span class="line">affy.data.E=affy.data[,c(<span class="string">"A.CEL"</span>, <span class="string">"B.CEL"</span>, <span class="string">"C.CEL"</span>, <span class="string">"D.CEL"</span>)]</span><br></pre></td></tr></table></figure><h3 id="关键函数（affyPLM）"><a href="#关键函数（affyPLM）" class="headerlink" title="关键函数（affyPLM）"></a>关键函数（affyPLM）</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(gcrma)</span><br><span class="line"><span class="keyword">library</span>(preprocessCore)</span><br><span class="line"><span class="comment"># 导入affyPLM需要导入以上两个包</span></span><br><span class="line"><span class="keyword">library</span>(affyPLM)</span><br><span class="line"><span class="comment"># </span></span><br><span class="line">Pset &lt;- fitPLM(affy.data.E)</span><br></pre></td></tr></table></figure><h2 id="参考网站"><a href="#参考网站" class="headerlink" title="参考网站"></a>参考网站</h2><ol><li>生存分析函数小结：<a href="https://blog.csdn.net/shmilyringpull/article/details/17529637" target="_blank" rel="noopener">https://blog.csdn.net/shmilyringpull/article/details/17529637</a></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>删除github的历史记录</title>
      <link href="./2018/10/16/deleteGitHubHistory/"/>
      <url>./2018/10/16/deleteGitHubHistory/</url>
      
        <content type="html"><![CDATA[<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ol><li>打开git</li><li>仓库地址，[URL], 例：<a href="https://github.com/githubUsername/repositories" target="_blank" rel="noopener">https://github.com/githubUsername/repositories</a></li><li>一个存放临时git仓库的本地地址，例：C:/tmp</li></ol><h2 id="更新本地"><a href="#更新本地" class="headerlink" title="更新本地"></a>更新本地</h2><p>先将本地的代码提交（这里我已hexo项目为例）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo d -g</span><br></pre></td></tr></table></figure><h2 id="克隆、进入仓库"><a href="#克隆、进入仓库" class="headerlink" title="克隆、进入仓库"></a>克隆、进入仓库</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cd C:/tmp#进入一个本地地址</span><br><span class="line">git clone https://github.com/githubUsername/repositories#克隆git仓库到本地某一个位置</span><br><span class="line">cd ./repositories#进入仓库,repositories即你实际的仓库名</span><br><span class="line">git checkout --orphan new_branch#创建一个new_branch的空分支</span><br><span class="line">git add -A#添加所有文件到这个new_branch空分支</span><br><span class="line">git commit -am 'commit'#commit，即提交的备注信息</span><br><span class="line">git branch -D master#先将主干分支删了</span><br><span class="line">git branch -m master#将当前所在分支（new_branch）重命名为master</span><br><span class="line">git push origin master --force #强行推送到github仓库，完成删除提交的历史记录</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 配置 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>write to my brother</title>
      <link href="./2018/10/15/2018-10-15-write-to-my-brother/"/>
      <url>./2018/10/15/2018-10-15-write-to-my-brother/</url>
      
        <content type="html"><![CDATA[<h2 id="随笔"><a href="#随笔" class="headerlink" title="随笔"></a>随笔</h2><ol><li>见识</li><li>考拉小巫</li><li></li></ol>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>给VPS加固安全设置</title>
      <link href="./2018/10/14/VPS%E8%AE%BE%E7%BD%AE%E5%AE%89%E5%85%A8%E5%8A%A0%E5%9B%BA/"/>
      <url>./2018/10/14/VPS%E8%AE%BE%E7%BD%AE%E5%AE%89%E5%85%A8%E5%8A%A0%E5%9B%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><ol><li>系统：CentOS 7</li><li>运行内存：500M</li><li>内存：500G</li></ol><h2 id="默认端口"><a href="#默认端口" class="headerlink" title="默认端口"></a>默认端口</h2><ol><li>修改默认的端口</li></ol><h2 id="账户安全管理"><a href="#账户安全管理" class="headerlink" title="账户安全管理"></a>账户安全管理</h2><h3 id="修改密码长度"><a href="#修改密码长度" class="headerlink" title="修改密码长度"></a>修改密码长度</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/login.defs</span><br><span class="line"><span class="meta">#</span><span class="bash">PASS_MIN_LEN 18</span></span><br></pre></td></tr></table></figure><h3 id="修改加密密码算法"><a href="#修改加密密码算法" class="headerlink" title="修改加密密码算法"></a>修改加密密码算法</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/login.defs</span><br><span class="line"><span class="meta">#</span><span class="bash">ENCRYPT_METHOD SHA512</span></span><br></pre></td></tr></table></figure><h3 id="denyhosts减缓暴力试错错误"><a href="#denyhosts减缓暴力试错错误" class="headerlink" title="denyhosts减缓暴力试错错误"></a>denyhosts减缓暴力试错错误</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">yum install epel-release  # 安装Epel存储库来安装denyhosts软件包</span><br><span class="line">yum install denyhosts </span><br><span class="line">vi /etc/denyhosts.conf</span><br><span class="line"><span class="meta">#</span><span class="bash"> 参考修改如下：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> DENY_THRESHOLD_INVALID = 5</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> DENY_THRESHOLD_VALID = 10</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> DENY_THRESHOLD_ROOT = 10</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> DENY_THRESHOLD_RESTRICTED = 1</span></span><br></pre></td></tr></table></figure><h3 id="创建普通用户账户"><a href="#创建普通用户账户" class="headerlink" title="创建普通用户账户"></a>创建普通用户账户</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">useradd pinksmallfan</span><br><span class="line">passwd pinksmallfan</span><br></pre></td></tr></table></figure><h3 id="禁用不用的账号"><a href="#禁用不用的账号" class="headerlink" title="禁用不用的账号"></a>禁用不用的账号</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">who /var/log/wtmp#查看用户登录的状态</span><br><span class="line"></span><br><span class="line">vi /etc/passwd  #查看账号</span><br><span class="line">vi /etc/group#查看系统的用户组</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> /etc/passwd<span class="comment"># /sbin/nologin的用户就不要删啦！不然会重启会导致进不去登录页面，以下#的执行</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> userdel bin </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> userdel daemon</span></span><br><span class="line">userdel adm</span><br><span class="line">userdel lp</span><br><span class="line">userdel sync</span><br><span class="line">userdel shutdown</span><br><span class="line">userdel operator</span><br><span class="line">userdel ftp</span><br><span class="line"><span class="meta">#</span><span class="bash"> userdel mail</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> userdel nobody</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> userdel systemd-bus-proxy</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> userdel system-network</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> userdel dbus</span></span><br><span class="line">userdel tss</span><br><span class="line">userdel sshd</span><br><span class="line"><span class="meta">#</span><span class="bash"> userdel postix</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> userdel chrony</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> /etc/group</span></span><br><span class="line">groupdel adm</span><br><span class="line">groupdel lp</span><br><span class="line">groupdel news</span><br><span class="line">groupdel uucp</span><br><span class="line"><span class="meta">#</span><span class="bash"> groupdel sys</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> groupdel tty</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> groupdel disk</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> groupdel mem</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> groupdel kmem</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> groupdel wheel</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> groupdel cdrom</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="comment"># groupdel mail</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> groupdel man</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> groupdel dialout</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> groupdel floppy</span></span><br><span class="line">groupdel games</span><br><span class="line"><span class="meta">#</span><span class="bash"> groupdel tape</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> groupdel video</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> groupdel lock</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> groupdel audio</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> groupdel users</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> groupdel utmp</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> groupdel utempter</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> groupdel input</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> groupdel systemd-journal</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> groupdel ssh_keys</span></span><br><span class="line">groupdel dip</span><br><span class="line"><span class="meta">#</span><span class="bash"> groupdel postdrop</span></span><br><span class="line">groupdel pppusers</span><br></pre></td></tr></table></figure><h3 id="禁用非授权用户获得权限"><a href="#禁用非授权用户获得权限" class="headerlink" title="禁用非授权用户获得权限"></a>禁用非授权用户获得权限</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">chattr +i /etc/passwd</span><br><span class="line">chattr +i /etc/shadow</span><br><span class="line">chattr +i /etc/group</span><br><span class="line">chattr +i /etc/gshadow</span><br></pre></td></tr></table></figure><p>ps: 如果想要创建用户or修改密码，就用chattr -i命令来恢复 </p><h3 id="禁用ctrl-alt-delete命令"><a href="#禁用ctrl-alt-delete命令" class="headerlink" title="禁用ctrl+alt+delete命令"></a>禁用ctrl+alt+delete命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/inittab</span><br><span class="line"><span class="meta">#</span><span class="bash"> ca::ctrlaltdel:/sbin/shutdown -t3 -r now <span class="comment"># 注释</span></span></span><br></pre></td></tr></table></figure><h3 id="设置-etc-profile"><a href="#设置-etc-profile" class="headerlink" title="设置/etc/profile"></a>设置/etc/profile</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo "TIMEOUT=3600" &gt;&gt;/etc/profile</span><br><span class="line">sed -i "s/HISTSIZE=1000/HISTSIZE=10/" /etc/profile</span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><h3 id="设置-etc-rcd-init-d-文件的许可权限"><a href="#设置-etc-rcd-init-d-文件的许可权限" class="headerlink" title="设置/etc/rcd/init.d/文件的许可权限"></a>设置/etc/rcd/init.d/文件的许可权限</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod -R 700 /etc/rcd/init.d/*</span><br></pre></td></tr></table></figure><h2 id="ssh-安全配置"><a href="#ssh-安全配置" class="headerlink" title="ssh 安全配置"></a>ssh 安全配置</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">yum install ssh</span><br><span class="line">cp /etc/ssh/sshd_config /etc/ssh/sshd_config.bak</span><br><span class="line">vi /etc/ssh/sshd_config</span><br><span class="line"><span class="meta">#</span><span class="bash"> Port 22<span class="comment"># 修改默认参考</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> PermitRootLogin no</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> PermitEmptyPasswords no</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> UseDns no</span></span><br></pre></td></tr></table></figure><h2 id="防止攻击"><a href="#防止攻击" class="headerlink" title="防止攻击"></a>防止攻击</h2><h3 id="防止ping"><a href="#防止ping" class="headerlink" title="防止ping"></a>防止ping</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 临时改防止ping</span></span><br><span class="line">echo 1 &gt;/proc/sys/net/ipv4/icmp_echo_ignore_all</span><br><span class="line"><span class="meta">#</span><span class="bash"> 永久改防止ping</span></span><br><span class="line">vi /etc/rc.d/rc.local </span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">echo</span> 1 /proc/sys/net/ipv4/icmp_echo_ignore_all <span class="comment">#添加</span></span></span><br></pre></td></tr></table></figure><h3 id="防止IP欺骗攻击"><a href="#防止IP欺骗攻击" class="headerlink" title="防止IP欺骗攻击"></a>防止IP欺骗攻击</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/host.conf</span><br><span class="line"><span class="meta">#</span><span class="bash"> order <span class="built_in">bind</span>, hosts</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> multi off</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> nospoof on</span></span><br></pre></td></tr></table></figure><h3 id="防止Dos攻击"><a href="#防止Dos攻击" class="headerlink" title="防止Dos攻击"></a>防止Dos攻击</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/security/limits.conf</span><br><span class="line"><span class="meta">#</span><span class="bash"> hard core 0<span class="comment">#禁止文件的调试</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> hard rss 5000<span class="comment">#限制内存的使用，设定值为5MB</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> hard nproc 20<span class="comment">#限制进程为20</span></span></span><br><span class="line"></span><br><span class="line">vi /etc/pam.d/login</span><br><span class="line"><span class="meta">#</span><span class="bash"> session required /lib64/security/pam_limits.so <span class="comment">#添加，如果是32位系统用lib（不然可能会出现重启登录不上的问题，显示module is unknown，可以采用救援模式来修改回来，后面章节会讲）！64位用lib64</span></span></span><br></pre></td></tr></table></figure><h2 id="系统配置-性能调优"><a href="#系统配置-性能调优" class="headerlink" title="系统配置+性能调优"></a>系统配置+性能调优</h2><h3 id="使用ntp服务更新服务器时间"><a href="#使用ntp服务更新服务器时间" class="headerlink" title="使用ntp服务更新服务器时间"></a>使用ntp服务更新服务器时间</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum -y install ntp</span><br><span class="line">ntpdate ntp.aliyun.com</span><br><span class="line">crontab -e</span><br><span class="line"><span class="meta">#</span><span class="bash"> * */12 * * * ntpdate tp.aliyun.com<span class="comment">#将会根据vps所在地址更新时间源，比如上海17点，vps在美国，显示的是05点</span></span></span><br><span class="line">cp /usr/share/zoneinfo/Asia/Shanghai/etc/localtime # 设置上海时间</span><br></pre></td></tr></table></figure><h3 id="删除系统相关信息"><a href="#删除系统相关信息" class="headerlink" title="删除系统相关信息"></a>删除系统相关信息</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo "helloworld!" &gt;/etc/issue</span><br><span class="line">echo "helloworld!" &gt;/etc/redhat-release</span><br></pre></td></tr></table></figure><h2 id="系统备份与应急处理"><a href="#系统备份与应急处理" class="headerlink" title="系统备份与应急处理"></a>系统备份与应急处理</h2><h3 id="设置系统镜像"><a href="#设置系统镜像" class="headerlink" title="设置系统镜像"></a>设置系统镜像</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 备份镜像</span></span><br><span class="line">tar cvpzf back_up.tgz --exclude=/proc --exclude=/lost+found --exclude=/mnt --exclude=/sys --exclude=back_up.tgz /</span><br><span class="line"><span class="meta">#</span><span class="bash"> 将proc、lost+found、mnt、sys、back_up.tgz自身都排除掉，不列入备份的一部分</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">还原镜像</span></span><br><span class="line">tar xvpzf back_up.tgz -C /</span><br></pre></td></tr></table></figure><h3 id="rescue-mode进入原系统"><a href="#rescue-mode进入原系统" class="headerlink" title="rescue mode进入原系统"></a>rescue mode进入原系统</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> rescue mode（救援模式）</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 进入系统后，查看原系统的挂载路径</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 会出现一个大的，和一个小的boot，其中通常小的boot即救援模式的linux</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 比如，我的vps下，进入救援模式，会有两个设备，/dev/vda和/dev/vdb，与对应boot的/dev/vda1和/dev/vdb1,另外也可以通过df -h查看当前的挂载情况</span></span><br><span class="line">fdisk -l</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建两个路径用来挂载</span></span><br><span class="line">mkdir /mnt/linux</span><br><span class="line">mkdir /mnt/linux/boot</span><br><span class="line"><span class="meta">#</span><span class="bash"> 将设备vdb挂载在linux下，boot的vdb1挂载在linux/boot下</span></span><br><span class="line">mount /dev/vdb/ /mnt/linux/</span><br><span class="line">mount /dev/vdb1/ /mnt/linux/boot</span><br><span class="line">chroot /mnt/linux/boot</span><br><span class="line"><span class="meta">#</span><span class="bash"> /mnt/linux/root/目录下就是对应原系统的/</span></span><br><span class="line">ls -l /mnt/linux/boot/</span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol><li><p><a href="https://blog.csdn.net/shentianzhi2009/article/details/40340941" target="_blank" rel="noopener">https://blog.csdn.net/shentianzhi2009/article/details/40340941</a></p></li><li><p>解决Module is notknow <a href="https://blog.csdn.net/lzx_bupt/article/details/6792335" target="_blank" rel="noopener">https://blog.csdn.net/lzx_bupt/article/details/6792335</a></p></li><li>镜像备份：<a href="https://www.jianshu.com/p/69ce20effe7d?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation" target="_blank" rel="noopener">https://www.jianshu.com/p/69ce20effe7d?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation</a></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> other </tag>
            
            <tag> 配置 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>mvn的使用</title>
      <link href="./2018/10/12/mvn%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>./2018/10/12/mvn%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="mvn-打包"><a href="#mvn-打包" class="headerlink" title="mvn 打包"></a>mvn 打包</h2><h3 id="本地打包jar"><a href="#本地打包jar" class="headerlink" title="本地打包jar"></a>本地打包jar</h3><h4 id="测试，跳过test"><a href="#测试，跳过test" class="headerlink" title="测试，跳过test"></a>测试，跳过test</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn clean install package -Dmaven.test.skip=true# mvn打包跳过test例程。</span><br></pre></td></tr></table></figure><h4 id="测试-test"><a href="#测试-test" class="headerlink" title="测试+test"></a>测试+test</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">在含有pom的目录上输入mvn pacakge，既可以打包，其中包括Test例程（JUnit会运行进行测试）</span></span><br><span class="line">mvn package</span><br></pre></td></tr></table></figure><h3 id="打包到nexus"><a href="#打包到nexus" class="headerlink" title="打包到nexus"></a>打包到nexus</h3><h4 id="mvn命令打包"><a href="#mvn命令打包" class="headerlink" title="mvn命令打包"></a>mvn命令打包</h4><p>​    设置</p><p>​    DgroupId Group</p><p>​    DartifactId  Artifact</p><p>​    Dversion 版本信息</p><p>​    Dpackaging 发布类型</p><p>​    Dfile 本地文件路径</p><p>​    Durl 发布url</p><p>​    DrepositoryId 仓库id （可以参考setting里边的server节点的id）</p><p>​    运行下命令就OK</p><p>​    mvn deploy:deploy-file -DgroupId=net.netca.xxx -DartifactId=NetcaXXX -Dversion=1.0.3 -Dpackaging=jar -Dfile=C:/tmp/jar/NetcaXXX-1.0.3.jar -Durl=<a href="http://192.168.XX.XX:XX/nexus/content/repositories/thirdparty/" target="_blank" rel="noopener">http://192.168.XX.XX:XX/nexus/content/repositories/thirdparty/</a> -DrepositoryId=nexus-thirdparty</p><h4 id="nexus界面打包"><a href="#nexus界面打包" class="headerlink" title="nexus界面打包"></a>nexus界面打包</h4><pre><code>1. Sonatype侧边栏：Views/Respositories-Responsitories2. 页面栏：Respositories-3rd party3. 功能栏：3rd party-Artifact Upload4. 操作： ​    1. Select GAV Definition Source：选择From POM ​    2. Select POM to Upload(button)：选择本地项目需要打包成jar，依赖的pom文件 ​    3. Select Artifact(s) for Upload(button)：选择本地项目打包好的jar包 ​    4. Add Artifact：将jar包进行添加到上传列表 ​    5. Upload Aritifact(s)：上传jar包</code></pre><div class="article-img"><p><img src="https://pinksmallfan.github.io/WenChongAndJiaoKou/uploads\nexus打包.png" alt="nexus打包"></p></div><h2 id="常见错误"><a href="#常见错误" class="headerlink" title="常见错误"></a>常见错误</h2><h3 id="jar依赖冲突"><a href="#jar依赖冲突" class="headerlink" title="jar依赖冲突"></a>jar依赖冲突</h3><p>​    当引用第三方服务的时候，第三方服务的A.jar引用放置在了jdk的jre-lib-ext下，但是项目为maven项目，maven项目同时也包含了有A.jar。</p><p>解决方案：</p><pre><code>1. 换一个没有A.jar的jdk，通过maven来引用A.jar。2. 如果jdk不能替换，那么可以尝试maven的exclusions，去除自带的引用。举例如下：</code></pre><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.axis2<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>axis2-kernel<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Unauthorized"><a href="#Unauthorized" class="headerlink" title="Unauthorized"></a>Unauthorized</h3><pre><code>1. 描述：当你想上传jar包到仓库nexus-thirdparty时，却发现，通过mvn命令行的方式上传失败，出现&quot;Unauthorized&quot;（没有权限）的错误。2. 原因：本地setting配置文件（一般是C:\Users\用户名\\.m2\settings.xml），没有配置好对应server id为nexus-thirdparty的账号密码3. 解决方案：在setting.xml文件添加server节点</code></pre><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus-thirdparty<span class="tag">&lt;/<span class="name">id</span>&gt;</span>            </span><br><span class="line"><span class="tag">&lt;<span class="name">username</span>&gt;</span>username<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">password</span>&gt;</span>password<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="pom-xml详解"><a href="#pom-xml详解" class="headerlink" title="pom.xml详解"></a>pom.xml详解</h2>]]></content>
      
      
      
        <tags>
            
            <tag> 配置 </tag>
            
            <tag> mvn </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>idea使用技巧大放送</title>
      <link href="./2018/10/11/idea-use-tips/"/>
      <url>./2018/10/11/idea-use-tips/</url>
      
        <content type="html"><![CDATA[<ol><li><p>将普通的项目转为maven项目</p><p>解决步骤：</p><ul><li>项目（右键）- Add Framework Support - 弹框勾选maven - OK</li><li>配置pom</li></ul></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> idea </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>高并发测试</title>
      <link href="./2018/10/11/highConcurrencyTest/"/>
      <url>./2018/10/11/highConcurrencyTest/</url>
      
        <content type="html"><![CDATA[<h2 id="高并发"><a href="#高并发" class="headerlink" title="高并发"></a>高并发</h2><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testConcurrency</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">final</span> <span class="keyword">int</span> threadSize = <span class="number">100</span>;</span><br><span class="line">       <span class="keyword">final</span> CountDownLatch countDownLatch = <span class="keyword">new</span> CountDownLatch(<span class="number">1</span>);</span><br><span class="line">       <span class="comment">// 创建一个刚好有100个线程槽的线程池</span></span><br><span class="line">       <span class="keyword">final</span> ExecutorService executorService = Executors.newFixedThreadPool(threadSize);</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;threadSize; i++)&#123;</span><br><span class="line">           <span class="keyword">final</span> <span class="keyword">int</span> number = i+<span class="number">1</span>;</span><br><span class="line">           Runnable runnable = <span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">               <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                   <span class="keyword">try</span> &#123;</span><br><span class="line">                       countDownLatch.await();</span><br><span class="line"></span><br><span class="line">                       <span class="comment">// TODO 需要进行并发测试的函数</span></span><br><span class="line">                       </span><br><span class="line">                   &#125; <span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                       e.printStackTrace();</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;;</span><br><span class="line"><span class="comment">// 线程池的申请线程</span></span><br><span class="line">           executorService.submit(runnable);</span><br><span class="line">       &#125;</span><br><span class="line">       System.out.println(<span class="string">"Start!!"</span>);</span><br><span class="line">       <span class="comment">// 开始执行并发测试</span></span><br><span class="line">       countDownLatch.countDown();</span><br><span class="line">       <span class="comment">// 等待之前申请线程的时间</span></span><br><span class="line">       executorService.awaitTermination(<span class="number">1000</span>,TimeUnit.MILLISECONDS);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>### </p><h2 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h2><ol><li>通过IDEA构建一个spring-boot的maven项目</li><li>连接mysql数据库，能够进行简单的增删改查，搭建为一个模板项目[Spring-boot_mysql]</li><li>进行高并发sql的查询测试</li><li>添加mybatis模块</li><li>nexus私服搭建</li><li>添加redis模块</li><li></li><li>添加zookeeper模块</li><li></li><li>添加dubbo模块</li><li></li><li>添加webSocket模块</li><li>添加netty模块-&gt;与tomcat切入（对比）</li><li>未完待续</li></ol><h2 id="idea"><a href="#idea" class="headerlink" title="idea"></a>idea</h2><ol><li>项目搭建、部署的流程步骤</li><li>技术原理的执行步骤</li><li>业务的流程步骤</li></ol><p>​    </p>]]></content>
      
      
      
        <tags>
            
            <tag> 测试 </tag>
            
            <tag> 高并发 </tag>
            
            <tag> 代码 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>故事化应用</title>
      <link href="./2018/10/10/tellAYarn/"/>
      <url>./2018/10/10/tellAYarn/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ol><li>创建一个笔记，收集灵感，收集有用的学习知识点</li><li>共同点：这些博客内容都有一个点，故事化</li><li>通过故事来讲明白一个技术点，需要对技术深刻的了解、具有很强的表达能力</li><li>需要多读多看，多反复多琢磨，寻找与形成属于自己语言的表达方式</li><li>重点：扩展自己表达方面的思维能力，做一个会讲故事的专业人员</li><li>格言：日积月累就是超越，一点一滴就是实力的见证。</li></ol><h3 id="RESTful"><a href="#RESTful" class="headerlink" title="RESTful"></a>RESTful</h3><p>故事化： <a href="https://blog.csdn.net/hzy38324/article/details/78360525" target="_blank" rel="noopener">https://blog.csdn.net/hzy38324/article/details/78360525</a></p><p>阮一峰：<a href="http://www.ruanyifeng.com/blog/2018/10/restful-api-best-practices.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2018/10/restful-api-best-practices.html</a></p><p>持续更新中…</p>]]></content>
      
      
      
        <tags>
            
            <tag> other </tag>
            
            <tag> 知识框架 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Spring boot</title>
      <link href="./2018/10/10/Spring-boot/"/>
      <url>./2018/10/10/Spring-boot/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ol><li>创建一个笔记，收集灵感，收集有用的学习知识点</li><li>方便以后开始学习一样技术的时候，能够快速定位</li><li>写下学习计划，制定学习方向、模板，做好二次学习的准备</li><li>需要记录技术点的详细的官网地址，知识点参考的网址</li><li>定位：这里的文章大多不是原创，以收集资料为主</li><li>重点：扩展自己的知识面</li><li>要求：标题、简单的概括、简单的示例（可选）、应用场景（可选）</li><li>格言：日积月累就是超越，一点一滴就是实力的见证。</li></ol><h2 id="Spring-boot"><a href="#Spring-boot" class="headerlink" title="Spring boot"></a>Spring boot</h2><h3 id="亮点"><a href="#亮点" class="headerlink" title="亮点"></a>亮点</h3><ol><li>简单</li><li>变简单</li><li>自动配置</li><li>简化依赖</li></ol><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><ol><li><p>采用了Spring boot，能够解决什么问题呢？</p><ul><li><p>Spring boot能够使编码变精简、配置变简单、部署变快捷、监控变容易</p></li><li><p>Spring boot默认快速启动一个web容器，不需要外置web容器，将注意力集中在编码上，而不是配置容器等方面上。</p></li><li>Spring boot是Spring框架扬长避短的杰作，简化了spring冗余的配置，从xml配置到java Config配置，从setBean的方式配置到自动注解，从多个properties+xml到只要一个yml就完成了配置。</li><li>Spring boot 默认配置；额很多框架的使用方式，整合了所有框架</li><li>Spring boot能够对主流开发的框架，进行无配置集成，提高了开发、部署的效率，不用再花额外的时间，研究不同框架的整合与集成上</li><li>Spring boot支持的配置文件application.yml，减少了传统的properties的链式麻烦</li><li>Spring boot提供了热部署，实时刷新后台服务，能将服务改动后的效果，呈现出来</li><li>Spring boot一键启动，只需要一个jar、war，甚至一段代码就可以了，不需要预部署应用服务器</li><li>configprops：属性配置、dump：线程工作状态、env/name：环境变量、metrics/name：JVM性能指标、mapping：RESTful path与服务类的映射关系</li><li></li></ul></li></ol><ol start="2"><li>Spring boot有什么不足？<ul><li>缺少服务注册、发现等外围方案、配套功能</li><li>缺少外围监控集成方案，自身的acturator所提供的监控功能，还没有集成与现有的监控对接</li><li>缺少外围安全管理方案、缺少REST落地的URI规划方案</li><li>内置tomcat和Jetty容器</li><li>比较适合做微服务，而不太适合做比较大型的项目。</li></ul></li></ol><ol start="3"><li>Spring boot 相关技术（以下关键词都可以另外写一章进行记录）<ul><li>Mock     测试，用来模拟不容易构造、比较复杂的对象，方便并行的开发工作，可以用来极速演示、隔离系统（避免数据库污染）、模拟驱动开发、无法访问的资源、提高测试的覆盖率</li><li>Docker    装满需要应用程序的容器，让更多的应用只需要在同一个硬件运行，即连即用，让开发人员易于快速构建可随时运行的容器化应用程序，大大简化了管理和部署应用程序的任务。</li><li>RESTful    API 设计规范，用于 Web 数据接口的设计。让客户端发出的数据操作指令都是”动词 + 宾语”的结构</li><li>MicroService</li></ul></li></ol><h3 id="部署流程"><a href="#部署流程" class="headerlink" title="部署流程"></a>部署流程</h3><h3 id="关键点"><a href="#关键点" class="headerlink" title="关键点"></a>关键点</h3><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><ol><li>Spring Boot 浅谈：<a href="https://blog.csdn.net/fly_zhyu/article/details/76407830" target="_blank" rel="noopener">https://blog.csdn.net/fly_zhyu/article/details/76407830</a></li><li>自动配置：<a href="https://www.jianshu.com/p/3d788198efab" target="_blank" rel="noopener">https://www.jianshu.com/p/3d788198efab</a></li><li>极简的Spring boot：<a href="https://www.jianshu.com/p/1936a23d6a56" target="_blank" rel="noopener">https://www.jianshu.com/p/1936a23d6a56</a></li><li></li></ol><p>未完待续…</p>]]></content>
      
      
      
        <tags>
            
            <tag> Spring-boot </tag>
            
            <tag> 知识框架 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>日积月累就是超越，一点一滴就是实力的见证</title>
      <link href="./2018/10/09/inspiration/"/>
      <url>./2018/10/09/inspiration/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ol><li>创建一个笔记，收集灵感，收集有用的学习知识点</li><li>方便以后开始学习一样技术的时候，能够快速定位</li><li>写下学习计划，制定学习方向、模板，做好二次学习的准备</li><li>需要记录技术点的详细的官网地址，知识点参考的网址</li><li>定位：这里的文章大多不是原创，以收集资料为主</li><li>重点：扩展自己的知识面</li><li>要求：标题、简单的概括、简单的示例（可选）、应用场景（可选）</li><li>格言：日积月累就是超越，一点一滴就是实力的见证。</li></ol><h2 id="python"><a href="#python" class="headerlink" title="python"></a>python</h2><h3 id="unitest"><a href="#unitest" class="headerlink" title="unitest"></a>unitest</h3><h4 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h4><p>​    单元测试框架</p><h4 id="简单的测试用例"><a href="#简单的测试用例" class="headerlink" title="简单的测试用例"></a>简单的测试用例</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyTest</span><span class="params">(unittest.TestCase)</span>:</span>  <span class="comment"># 继承unittest.TestCase</span></span><br><span class="line">     </span><br><span class="line">    <span class="comment"># 每个测试用例执行之后做操作</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tearDown</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'111'</span>)</span><br><span class="line"><span class="comment"># 每个测试用例执行之前做操作</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setUp</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'22222'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 必须使用 @ classmethod装饰器, 所有test运行完后运行一次</span></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tearDownClass</span><span class="params">(self)</span>:</span></span><br><span class="line">         print(<span class="string">'4444444'</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 必须使用@classmethod 装饰器,所有test运行前运行一次</span></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setUpClass</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'33333'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 测试用例</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_a_run</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.assertEqual(<span class="number">1</span>, <span class="number">1</span>)  </span><br><span class="line">     </span><br><span class="line">    <span class="comment"># 测试用例</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_b_run</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.assertEqual(<span class="number">2</span>, <span class="number">2</span>)  </span><br><span class="line"> <span class="comment">#运行所有的测试用例       </span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    unittest.main()</span><br></pre></td></tr></table></figure><h4 id="常用断言"><a href="#常用断言" class="headerlink" title="常用断言"></a>常用断言</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">assertEqual(a, b)    <span class="comment"># a == b      </span></span><br><span class="line">assertNotEqual(a, b)    <span class="comment"># a != b      </span></span><br><span class="line">assertTrue(x)     <span class="comment"># bool(x) is True      </span></span><br><span class="line">assertFalse(x)     <span class="comment"># bool(x) is False      </span></span><br><span class="line">assertIsNone(x)    <span class="comment"># x is None     </span></span><br><span class="line">assertIsNotNone(x)    <span class="comment"># x is not None   </span></span><br><span class="line">assertIn(a, b)     <span class="comment"># a in b    </span></span><br><span class="line">assertNotIn(a, b)     <span class="comment"># a not in b</span></span><br></pre></td></tr></table></figure><h4 id="HTMLTestRunner"><a href="#HTMLTestRunner" class="headerlink" title="HTMLTestRunner"></a>HTMLTestRunner</h4><p>介绍：测试报告，引用模板</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment">#创建一个测试集合</span></span><br><span class="line">    test_suite = unittest.TestSuite()</span><br><span class="line">    <span class="comment">#测试套件中添加测试用例</span></span><br><span class="line">test_suite.addTest(MyTest(<span class="string">'test_run1'</span>))</span><br><span class="line">    <span class="comment">#使用makeSuite方法添加所有的测试方法</span></span><br><span class="line"><span class="comment">#test_suite.addTest(unittest.makeSuite(MyTest))</span></span><br><span class="line">    <span class="comment">#打开一个保存结果的html文件</span></span><br><span class="line">fp = open(<span class="string">'res.html'</span>,<span class="string">'wb'</span>)</span><br><span class="line">    <span class="comment">#生成执行用例的对象</span></span><br><span class="line">runner = HTMLTestRunner.HTMLTestRunner(stream=fp,title=<span class="string">'api测试报告'</span>,description=<span class="string">'测试情况'</span>)</span><br><span class="line"><span class="comment">#执行测试套件</span></span><br><span class="line">runner.run(test_suite)</span><br></pre></td></tr></table></figure><h4 id="xmlrunner"><a href="#xmlrunner" class="headerlink" title="xmlrunner"></a>xmlrunner</h4><p>介绍：jenkins识别的测试报告，引用模板</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    test_suite = unittest.TestSuite()</span><br><span class="line">    test_suite.addTest(unittest.makeSuite(My))</span><br><span class="line">    <span class="comment">#指定报告放的目录</span></span><br><span class="line">    runner = xmlrunner.XMLTestRunner(output=<span class="string">'report'</span>)</span><br><span class="line">    runner.run(test_suite)</span><br></pre></td></tr></table></figure><h4 id="testsuite"><a href="#testsuite" class="headerlink" title="testsuite"></a>testsuite</h4><p>介绍：组织测试模块</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment">#创建模块管理</span></span><br><span class="line">test_suite=unittest.TestSuite()</span><br><span class="line">test_suite.addTest(Test1(<span class="string">'Test1'</span>))</span><br><span class="line">test_suite.addTest(Test2(<span class="string">'Test2'</span>))</span><br><span class="line"><span class="comment">#使用run()方法运行测试套件</span></span><br><span class="line">runner=unittest.TextTestRunner()</span><br><span class="line">runner.run(test_suite)</span><br></pre></td></tr></table></figure><h4 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h4><p><a href="https://docs.python.org/2/library/unittest.html" target="_blank" rel="noopener">https://docs.python.org/2/library/unittest.html</a></p><hr><h3 id="xrld、xlwt"><a href="#xrld、xlwt" class="headerlink" title="xrld、xlwt"></a>xrld、xlwt</h3><h4 id="是什么-1"><a href="#是什么-1" class="headerlink" title="是什么"></a>是什么</h4><p>​    python的excel操作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> xlrd</span><br><span class="line"></span><br><span class="line"><span class="comment">#打开excel表</span></span><br><span class="line">excel=xlrd.open_workbook(<span class="string">u"excel.xlsx"</span>)</span><br><span class="line"><span class="comment">#获取sheet表格（索引、顺序、表名）</span></span><br><span class="line">sheet=excel.sheets()[<span class="number">0</span>]</span><br><span class="line">sheet=excel.sheet_by_index(<span class="number">0</span>)</span><br><span class="line">sheet=excel.sheet_by_name(<span class="string">u"Sheet1"</span>)</span><br><span class="line"><span class="comment">#获取行数</span></span><br><span class="line">rowsCount=sheet.nrows</span><br><span class="line"><span class="comment">#获取列数</span></span><br><span class="line">columnsCount=sheet.ncols</span><br><span class="line"><span class="comment">#获取行内容</span></span><br><span class="line">rowsContent=sheet.row_values(<span class="number">0</span>)</span><br><span class="line"><span class="comment">#获取列内容</span></span><br><span class="line">rowsContent=sheet.col_values(<span class="number">0</span>)</span><br><span class="line"><span class="comment">#返回单元格对象</span></span><br><span class="line">table.cell(rowx,colx)</span><br><span class="line"><span class="comment">#返回单元格中的数据类型</span></span><br><span class="line">table.cell_type(rowx,colx)</span><br><span class="line"><span class="comment">#返回单元格中的数据</span></span><br><span class="line">table.cell_value(rowx,colx)</span><br></pre></td></tr></table></figure><h4 id="官网-1"><a href="#官网-1" class="headerlink" title="官网"></a>官网</h4><p><a href="https://xlrd.readthedocs.io/en/latest/api.html" target="_blank" rel="noopener">https://xlrd.readthedocs.io/en/latest/api.html</a></p><hr><h3 id="ConfigParser"><a href="#ConfigParser" class="headerlink" title="ConfigParser"></a>ConfigParser</h3><h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><p>​    读取写入配置文件</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[my_config]</span></span><br><span class="line"><span class="attr">host</span>=<span class="number">192.168</span>.<span class="number">88.107</span></span><br><span class="line"><span class="attr">user</span>=root</span><br><span class="line"><span class="section">[com_config]</span></span><br><span class="line"><span class="attr">host</span>=<span class="number">10.119</span>.<span class="number">10.13</span></span><br></pre></td></tr></table></figure><p>config.ini配置文件如上</p><h4 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ConfigParser</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">config=ConfigParser()</span><br><span class="line">config.read(<span class="string">'/usr/local/config.ini'</span>)</span><br><span class="line"><span class="comment"># 打印所有节点标题</span></span><br><span class="line"><span class="keyword">print</span> config.sections()<span class="comment"># ['my_config','com_config']</span></span><br><span class="line"><span class="comment"># 删除指定节点</span></span><br><span class="line">config.remove_sections(<span class="string">'my_config'</span>)<span class="comment"># True</span></span><br><span class="line"><span class="comment"># 打印所有键值对</span></span><br><span class="line"><span class="keyword">print</span> config.items(<span class="string">'my_config'</span>)<span class="comment"># [('host','192.168.88.107'),('user','root')]</span></span><br><span class="line"><span class="comment"># 添加新的节点</span></span><br><span class="line">config.add_section(<span class="string">'new_config'</span>)</span><br><span class="line"><span class="comment"># 写入指定的节点，添加键值对</span></span><br><span class="line">config.set(<span class="string">'new_config'</span>,<span class="string">'host'</span>,<span class="string">'192.168.88.102'</span>)</span><br><span class="line"><span class="comment"># 写入实际的配置文件</span></span><br><span class="line">config.write(open(<span class="string">'/usr/local/config.ini'</span>,<span class="string">'w'</span>))</span><br></pre></td></tr></table></figure><h4 id="官网-2"><a href="#官网-2" class="headerlink" title="官网"></a>官网</h4><p><a href="https://docs.python.org/2/library/configparser.html" target="_blank" rel="noopener">https://docs.python.org/2/library/configparser.html</a></p><hr><h3 id="Jenkins"><a href="#Jenkins" class="headerlink" title="Jenkins"></a>Jenkins</h3><h4 id="是什么-2"><a href="#是什么-2" class="headerlink" title="是什么"></a>是什么</h4><ol><li>能够驱动其他软件一起工作，可以持续、自动地构建的一个集成工具</li><li>能够执行定时的任务，并进行监控，跟踪版本的发布，生成对应的日志</li><li>能够进行持续集成、交付、部署，能够配置RSS或者邮件等进行通知发送</li><li>能够构建测试软件，生成对应的测试报告</li></ol><h4 id="使用流程"><a href="#使用流程" class="headerlink" title="使用流程"></a>使用流程</h4><ol><li><p>版本控制、集成工具、运行环境的安装</p><p>​    插件：git、maven、svn、jdk、tomcat</p></li><li><p>yum安装jenkins，安装目录、配置文件、日志目录，</p><p>​    形式有三种：yum、war包、docker安装</p></li><li><p>jenkins部署（部署在tomcat上等web容器）</p></li><li><p>在web主页，配置maven、GIT、jdk、svn</p></li><li><p>邮件配置、ssh配置、插件安装</p></li><li><p>项目构建</p></li></ol><h4 id="官网-3"><a href="#官网-3" class="headerlink" title="官网"></a>官网</h4><p>​    <a href="https://jenkins.io/" target="_blank" rel="noopener">https://jenkins.io/</a></p><hr><h3 id="smtplib"><a href="#smtplib" class="headerlink" title="smtplib"></a>smtplib</h3><h4 id="是什么-3"><a href="#是什么-3" class="headerlink" title="是什么"></a>是什么</h4><p>​    SMTP协议，即发送邮件的协议；python支持通过smtplib模块进行邮件发送。</p><p>​    它工作的方式是：通过与src地址到dir地址传送邮件的规则，通过smtplib来控制邮件的中转方式。</p><p>​    并且支持：纯文本、带附件、html格式的邮件发送</p><p>​    </p><h4 id="官网-4"><a href="#官网-4" class="headerlink" title="官网"></a>官网</h4><p>​    <a href="https://docs.python.org/2/library/smtplib.html" target="_blank" rel="noopener">https://docs.python.org/2/library/smtplib.html</a></p><hr><h3 id="Selenium"><a href="#Selenium" class="headerlink" title="Selenium"></a>Selenium</h3><h4 id="是什么-4"><a href="#是什么-4" class="headerlink" title="是什么"></a>是什么</h4><p>​    Selenium是一系列基于Web的自动化工具，提供一套测试函数，用于支持Web自动化测试。</p><h2 id="参考网址"><a href="#参考网址" class="headerlink" title="参考网址"></a>参考网址</h2><ol><li>自动化测试：<a href="https://blog.csdn.net/huilan_same/article/details/52559711" target="_blank" rel="noopener">https://blog.csdn.net/huilan_same/article/details/52559711</a></li><li>unitest： <a href="https://www.cnblogs.com/feng0815/p/8045850.html" target="_blank" rel="noopener">https://www.cnblogs.com/feng0815/p/8045850.html</a></li><li>unitest： <a href="https://www.jianshu.com/p/a5550835f361" target="_blank" rel="noopener">https://www.jianshu.com/p/a5550835f361</a></li><li>xrld： <a href="https://www.cnblogs.com/insane-Mr-Li/p/9092619.html" target="_blank" rel="noopener">https://www.cnblogs.com/insane-Mr-Li/p/9092619.html</a></li><li>ConfigParser： <a href="https://www.cnblogs.com/snifferhu/p/4368904.html" target="_blank" rel="noopener">https://www.cnblogs.com/snifferhu/p/4368904.html</a> </li><li>ConfigParser：<a href="https://blog.csdn.net/miner_k/article/details/77857292" target="_blank" rel="noopener">https://blog.csdn.net/miner_k/article/details/77857292</a></li></ol><hr><ol start="7"><li>Jenkins：<a href="https://www.jianshu.com/p/6aa1c9b9ae01" target="_blank" rel="noopener">https://www.jianshu.com/p/6aa1c9b9ae01</a></li><li>jenkins详细部署：<a href="https://blog.csdn.net/qq_26848099/article/details/78901240" target="_blank" rel="noopener">https://blog.csdn.net/qq_26848099/article/details/78901240</a></li><li>smtplib：<a href="https://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/001386832745198026a685614e7462fb57dbf733cc9f3ad000" target="_blank" rel="noopener">https://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/001386832745198026a685614e7462fb57dbf733cc9f3ad000</a></li><li>smtplib：<a href="http://www.runoob.com/python/python-email.html" target="_blank" rel="noopener">http://www.runoob.com/python/python-email.html</a></li></ol><hr><ol start="12"><li>Selenium：<a href="https://blog.csdn.net/wanglian2017/article/details/72843984" target="_blank" rel="noopener">https://blog.csdn.net/wanglian2017/article/details/72843984</a></li><li></li></ol><hr><h2 id="PlusUltra"><a href="#PlusUltra" class="headerlink" title="PlusUltra"></a>PlusUltra</h2>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 知识框架 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>外币银行卡的区别</title>
      <link href="./2018/10/09/BankCard/"/>
      <url>./2018/10/09/BankCard/</url>
      
        <content type="html"><![CDATA[<p>信用卡，国际有六大信用卡公司：</p><ul><li>美国：VISA（威士国际）、MasterCard（万事达卡国际）、AE blue（美国运通国际）、Diners Club（大来）</li><li>中国：UnionPay（银联）</li><li>日本：JCB</li></ul><hr><p>区别：</p><p>Visa：第一大卡，在亚洲和澳大利亚的受理商户比较多</p><p>MasterCard：第二大卡，在欧洲和北美较多</p><div class="article-img"><p><img src="https://pinksmallfan.github.io/WenChongAndJiaoKou/uploads/currencyBankCard.png" alt="外币通用的银行卡"></p></div>]]></content>
      
      
      
        <tags>
            
            <tag> other </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>linmaogui loveZoe</title>
      <link href="./2018/10/01/%E9%83%A8%E9%95%BF-loveZoe/"/>
      <url>./2018/10/01/%E9%83%A8%E9%95%BF-loveZoe/</url>
      
        <content type="html"><![CDATA[<div class="article-img"><p><img src="https://pinksmallfan.github.io/WenChongAndJiaoKou/uploads/my_nymph.jpg" alt="美美哒zoe"></p></div><hr><h2 id="有女朋友之前"><a href="#有女朋友之前" class="headerlink" title="有女朋友之前"></a>有女朋友之前</h2><h3 id="迷糊的梦想，不知道的未来"><a href="#迷糊的梦想，不知道的未来" class="headerlink" title="迷糊的梦想，不知道的未来"></a>迷糊的梦想，不知道的未来</h3><ol><li>没有想过自己的未来会是怎么样，也没有真正意义上思考自己的未来应该会长什么样，生活也就缺少内在的驱动力，所以做一件事的时候，视野也比较窄小。</li><li>以前的我，会选择有什么做什么，不关心自己到底缺什么，需要先做好什么？同时也没有注意哪一些是真正能够提高自己价值、提高自己工资的事。</li><li>盲目的学习一项技术、并且学习技术的同时，也没有针对性，没有想好方法论，只是盲目的看书，做笔记，而没有真正理解透知识，吸收并消化为自己的知识架构。</li></ol><h3 id="懒散的执行力"><a href="#懒散的执行力" class="headerlink" title="懒散的执行力"></a>懒散的执行力</h3><ol><li>还没有女朋友之前，想做的事挺多，计划做的事也不少，但是都是想到就做，做了一点就废，执行力低。</li><li>缺少驱动力，缺少美好未来的憧憬。</li><li>总会被新的念头，打碎目前计划想做的事</li></ol><h3 id="随波逐流，低质量的生活"><a href="#随波逐流，低质量的生活" class="headerlink" title="随波逐流，低质量的生活"></a>随波逐流，低质量的生活</h3><ol><li>生活过得比较平平淡淡，自己过自己的，当有人约的时候不会拒绝（普通朋友的聚会，不是集体聚会）</li><li>没有女朋友的时候，时间比较廉价，不会在意一天下来，有多少时间逝去</li><li>下班后就一直躺在沙发上，吃饭看新闻，有时候会忘记时间，结果就十点了，想要学习，却缺少动力了</li><li>没有女朋友的时候，在宿舍看的书比较少</li><li>在下完班回来，只要内心有一些压抑（不是很想学习），就会玩手游，有时候一玩起手游，就没日没夜，有过三四次通宵手游（周末，非工作日的时候）</li><li>相对来说，没有人约的时候，也就宅宿舍，周末会一觉到中午，煮个中午饭、晚饭，一天就很快过去了。</li></ol><h3 id="买很多不实用的东西"><a href="#买很多不实用的东西" class="headerlink" title="买很多不实用的东西"></a>买很多不实用的东西</h3><ol><li>宿舍囤了不少货，老是吃不完</li><li>买了很多不实用的东西，比如说一些很少穿的衣服、各种各样的配料（总认为花钱买了食材了，自己就应该会有动力了，其实不一定，重要的还是到底有没有做了这件事，有没有按照规划做这件事）</li><li>买了过多的食材（蔬菜、肉），导致过了几天不能吃</li></ol><h3 id="自以为良好的穿衣打扮"><a href="#自以为良好的穿衣打扮" class="headerlink" title="自以为良好的穿衣打扮"></a>自以为良好的穿衣打扮</h3><ol><li>买了长辈类型的衣服，工衣，大叔同款衣服。</li><li>总认为自己穿的还凑合，比普通人好很多了，但是后面才知道自己错了</li><li>审美观停留在有领了就行，衣服搭配相对来说还是比较混乱，没想过如果从小哥哥视角看待自己穿着会怎么样？</li></ol><h3 id="我会有女朋友嘛？"><a href="#我会有女朋友嘛？" class="headerlink" title="我会有女朋友嘛？"></a>我会有女朋友嘛？</h3><ol><li><p>没有女朋友的时候，会怀疑自己，会想，到底自己未来的女朋友会是什么样子的？</p></li><li><p>自我感觉良好，认为自己很多行为都挺好的</p></li><li><p>也有过一两个念头，自己没有女朋友后，会怎么样？要一直单身下去？还是听从父母安排，根据叔叔阿姨等介绍对象？</p></li><li><p>没有女朋友之前，我一直渴望着以后要好好疼爱自己的女友，要和她一起成长，宠她，一起开开心心的。</p></li></ol><h2 id="有女朋友之后"><a href="#有女朋友之后" class="headerlink" title="有女朋友之后"></a>有女朋友之后</h2><h3 id="美好的梦想，明亮的未来"><a href="#美好的梦想，明亮的未来" class="headerlink" title="美好的梦想，明亮的未来"></a>美好的梦想，明亮的未来</h3><ol><li>每天都有期望，想到未来的生活就会感到动力十足，不敢马虎，当不想做什么事的时候，只要想到未来，就会动起来，坐到座位上，开始做必须要做的事（在过去，这种觉悟还是比较低的，没有女朋友的时候，不想做的时候，就会选择放松自己）</li><li>归心似箭，当zoe在我身边的时候，都会有期盼，要怎样让zoe开心，临时离开的时候，想着怎样才可以快一点见到zoe，要怎样和zoe过得充实有意义~</li><li>有女朋友后，开始规划自己的将来，写下了自己的未来计划，3年、5年等的计划，感觉自己的未来已经开始勾画好了一片蓝图。</li><li>会想到自己结婚要做什么、准备什么，生小孩要什么时候。</li><li>每次约会，都会规划要怎么过，有什么备用的方案，一起想办法解决可能遇到的问题</li><li>开始忙碌了起来，有很多需要做的事，闲不下来，但是很开心</li><li>每天开始早睡早起，皮肤越来越好，吃的东西越来越健康</li></ol><h3 id="一起看做了很多事"><a href="#一起看做了很多事" class="headerlink" title="一起看做了很多事"></a>一起看做了很多事</h3><ol><li>一起看了很多书，小狗钱钱、吉田医生哈佛求学记、如何阅读一本书、考拉小巫的英语学习日记、零秒工作、零秒思考、爱你就像爱生命一样、我不爱世界只爱你、目送、亲爱的安德烈、孩子你慢慢走、房思琪的初恋乐园、女人这东西、亲密关系、不可承受生命之轻、请停止无效努力</li><li>一起看了很多电视剧、电影，初恋50次，雪山凶铃，喜剧之王，让子弹飞，燃烧，厕所英雄，新婚日记，13个原因，我不是药神，wood job，信号， 西虹市首富，极限挑战3期，韩国网剧等（应该还有漏）</li><li>一起看了少女漫，心动计划，徐小熊和许兔兔，六月的不可思议等</li><li>一起买情侣杯、牙刷，，小黑与小白</li></ol><h3 id="知道了"><a href="#知道了" class="headerlink" title="知道了"></a>知道了</h3><ol><li><p>知道了逛街、一起吃饭的感觉</p><p>​    以前逛街吃饭，都是和男生群一起，聊聊生活上的事，不过也会经常看到情侣，那个时候没啥感觉，不过可能还是有点羡慕吧，以前也没有想过有女朋友一起吃饭一起逛街会是怎么样。网上有很多人会说，男生不喜欢和他的女朋友逛街，因为会嫌时间长，逛街不感兴趣什么的。有了女朋友后，我觉得不完全是这样子吧，我还是挺喜欢和女友逛街吃饭的，因为逛街，会激起很多联想与话题，将你与我产生了更多有意思的关联~</p></li><li><p>知道了吃醋是什么感觉。</p><p>​    听到你说有男生主动请你吃水果，心里边还是挺吃醋的，想问清楚，又怕误会了，被你嫌弃，从男生的角度上看水果事件，会认为有一些行为是有意的，但是在我不确定的时候，我就只能吃醋了，而我想问清楚，却表达得很含糊，我现在明白，那个时候，我把照顾自己的内心，和照顾你的内心放在同样重要的位置，我不知道怎么用语言表达出，能够照顾两者的一个平衡。</p></li><li><p>知道了真心心疼的感觉</p><p>​    当你说，你腿疼、你卡住鱼骨了，说到你挺疼的时候，我想跑到你身边照顾你的，我有一种控制欲，想知道你怎么样了、有什么可以让我帮忙的，需要怎么处理，我都想知道，我想照顾你。</p><p>​    当暑假结束，开始异地，你做高铁回去，我送你走的时候，那种心疼，我才明白是念念的不舍，我还想和你在一起生活，不想和你分开，明白你已经住在我心中了，我的世界已经满是你的痕迹。</p></li></ol><h3 id="天天都想要抱抱亲亲"><a href="#天天都想要抱抱亲亲" class="headerlink" title="天天都想要抱抱亲亲"></a>天天都想要抱抱亲亲</h3><ol><li>性幻想很猛烈，想一直好好宠你，好想好想和你做那种事</li></ol><h3 id="学会了，一起成长"><a href="#学会了，一起成长" class="headerlink" title="学会了，一起成长"></a>学会了，一起成长</h3><ol><li><p>拍照的技巧</p><p>​    现在也会注意要怎么找角度，多用手机的特性拍一张照片，拍照，现在给我的感触是：要学会抓拍，要时刻准备好角度，要多多积累拍照的一些知识。</p><p>​    抓怕：因为不是每个人在相机面前会表现得很完美，但是放松的时候，自然的动作会展现出特别的美，好几次看到zoe美美哒样子，很自然很可爱，但是拿起手机，却来不及了。</p><p>​    时刻准备好角度：zoe有了很不错的状态，可是匆匆忙忙掏出手机，进行拍照，没有好的构图与设计，导致背景、角度都差强人意。或者说，在其他人准备好了，但是没有注意到角度、采光、构图比例，就拍下来了，以数量取胜是不可取的，因为准备好了，只要一张就可以成为经典了。</p><p>​    积累知识：积累就是厚积薄发，虽然学的内容会很多，但是一张好照片都是需要日积月累的实践与知识补充。记得那次厦门和zoe约会，zoe穿JK制服，美丽的景色，哪里都是拍照的地方，相片里的zoe也很美，我挺喜欢的。</p></li><li><p>知道了自己的语言会多么有杀伤力，学会留意自己的一言一行</p><p>​    曾经，因为想要给zoe改简历，想要突出一些内容，而采取了过于夸张的表达方式，没有注意到这样子的句子，在那个时候的zoe看来会是什么样子。而那个时候你落泪了，因为我，我那个时候真的不知所措，想了很多话，也打了不少字（都没发出去），我很懊悔，也觉得自己很糟糕，所以不到说什么好的情况下，就打了一个“嗯”，现在想起来觉得，真是更加糟糕透顶。</p><p>​    经历了那一次风波，我还是会无保留的表达自己的建议，但我也时时刻刻留意自己的一言一行，不会让这种行为再伤害zoe，我也在成长着，我想要宠爱zoe~</p></li><li><p>注意自己的打扮、穿搭，穿起了靓靓的衣服</p><p>​    对比过去，确实自己以前穿的衣服太老气了，我也想要让自己帅帅的，但是自己的品味就定格在那里，也不愿意尝试太过潮流的衣服（之前总觉得自己会不搭，没太多想法回去接受），不过，有女朋友后，听了女友的建议，买了第一件大大的白T，一开始选的时候，会比较慎重，买后穿起来，zoe说不错的时候，才知道确实适合自己，从此审美也开始提高，敢于尝试起来。</p></li><li><p>喜欢旅游、房屋改造</p><p>​    旅游，以前可能会觉得费钱，花了就没了，但是现在不一样了，有了女友，觉得是一种灵魂伴侣，可以一起去旅游，有了新的动力，可以一起探索未知的事，一起见见我们所不知道的世界。</p><p>​    房屋改造，以前对这东西没太多感觉，但是我确实比较喜欢设计，对设计敏感。而女友喜欢房屋改造，也让一下子喜欢起来，房屋是心灵的归属，也是zoe和我一起畅想更多未来的地方，而房屋改造成舒适的样子，能够让人联想到更多美好的生活，一直都想和zoe赶紧做一起，想抱着zoe睡。</p></li><li><p>懂了很多知识：化妆、女性生理、断舍离</p><p>​    在男生的话题中，几乎绝对不会提到的是化妆、女性生理的话题（最多就面膜、润肤膏、上课有女生请假，说xxx来那个，没了）。所以这些话题还是可望不可即，有了女友，这些话题打开了，了解了不少，比如最佳生理年龄，生理周期，有什么样子的m巾。化妆的工序有多少种…等等，还是挺开心能够了解这些的，这方面也让我更加能够理解女性的不易，女友与妈妈最伟大~</p><p>​    断舍离的概念，也是我需要去完成的事，收纳、精简生活，而不是堆东西、买不需要的东西、任何东西有根有据，不会让自己丢这丢那。虽然我现在还没有真正做到，但是断舍离的概念，已经让我有目标、有方向，过什么样子的生活，想和zoe一起过想过的生活，精致的生活。</p></li></ol><h3 id="只想陪女朋友，想要和你做好多好多事情"><a href="#只想陪女朋友，想要和你做好多好多事情" class="headerlink" title="只想陪女朋友，想要和你做好多好多事情"></a>只想陪女朋友，想要和你做好多好多事情</h3><ol><li><p>开始理财，想要好好的努力赚钱</p><p>​    每个月的工资开始划分，哪一些事固定要存钱（用来基金），哪一些事用来旅游，哪一些事生活费，哪一些是闲钱用来预防万一的。虽然，从6月到10月，每个月都超，现在也还超了一些，但放宽心态，以后会慢慢补上来的。</p><p>​    从这一方面看出来，我在花钱的需求上大于工资，所以我也在想怎么赚钱，现在的我，还没有能够额外获得副业的能力（写书、讲课、给其他公司接单），只能做好自己现在的工资，不断通过写博客+看书，理解更加深入的知识，给自己提供价值（实战经验+知识+知识框架+个人品牌）。所以，现在积累知识为主，但也时刻关注一切机会，能够多一条渠道，就多一份福利。</p><p>​    总之，我得好好加油才是！另外，基金，也需要好好去了解相关知识（比如说，定投、智能定投、指数基金、股票基金、债券基金等等概念），将钱存起来。通过基金给钱注入生命力，让钱能够生钱。</p></li><li><p>和你早睡早起学习，吃健康的食物</p><p>​    现在改变了自己的作息习惯，从以前凌晨1点睡觉、早上8点起床，改为晚上11点睡觉，6点起床，这种方式虽然一开始还真的有点不习惯，但是对身体来说，是有好处的，毕竟感觉气色好一些，身体不会显得迟钝。而且开始吃起了黑豆黑米黑芝麻，开始注意不吃太甜的食物（防止衰老）。</p></li><li><p>开始不乱花钱，只买最需要的东西，和女友想要的任何东西</p><p>​    可能我宠爱女友的一方面，是有钱的时候，给女友买她想要的任何东西。</p><p>​    有了女朋友后，我开始正视自己购买的东西，已有的东西，我也会厌烦那些占地方不用、买来的东西，以前以为只要买了，就会用，其实并不是这样子。所以，现在会停止购买，先把冰箱的库存、现在已有的东西先优先处理，国庆采取了清库行动，我不需要出门，国庆结束，终于把库存的面、冰箱的食品解决掉了，也和zoe一样有爽快感~现在只买自己真的需要的，确保一定用得完的东西。</p><p>​    一个月下来，那些原本浪费在：比较一般的人际关系的支出、不必要的购物消费、多余的食材花费，这些钱转化为投资zoe和自己的费用，感觉内心会更加充实、也花得更加开心一些~~    </p></li><li><p>很多事情不在是自己做决定了，都会想到女友</p><p>​    买东西都会想到女朋友，这个适不适合买？女朋友的话要不要？总想着以后同居，我们需要什么？</p><p>​    有女友后，很多事情，就会开始联想到了zoe和我的未来，所以理所当然，买的东西、用的东西都会想到和zoe一起生活的时候的样子。</p><p>​    现在买的桌子、买的电饭煲、棉被、衣服、牙刷、透明玻璃碗等，都会一起讨论，一起决策是不是必要的、和以后搭不搭，对未来的生活有什么用。这是一个很开心的过程，因为我们畅想着未来，我们一起决策我们的事，我们都会想到对方，需要对方，我们想过的是属于我们别一无二的生活。</p></li><li><p>想和你同步做同样的事：情侣杯、情侣衫、牙刷、一起学习、一起看剧</p><p>​    可能对于我来说，我的爱情观中，会比较喜欢照顾女朋友，所以和女友同步做同样的事，也是我很乐意的事，这样子，能够让我切实的觉得，即使身处异地的我们，我们还是相连的。</p><p>​    我们有了情侣杯，有了同样的牙刷，我们一起认真学习、一起笑呵呵的看剧，是美滋滋的事，我很享受，很开心我的另一半，是你，亲爱的zoe~</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Love </category>
          
      </categories>
      
      
    </entry>
    
  
  
</search>
