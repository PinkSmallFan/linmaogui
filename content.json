{"meta":{"title":"WenChongAndJiaoKou","subtitle":null,"description":null,"author":"WenChongAndJiaoKou","url":"https://pinksmallfan.github.io/WenChongAndJiaoKou"},"pages":[{"title":"Hello World","date":"2018-10-10T16:06:20.687Z","updated":"2018-10-09T15:07:58.556Z","comments":true,"path":"bak/hello-world.html","permalink":"https://pinksmallfan.github.io/WenChongAndJiaoKou/bak/hello-world.html","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment"}],"posts":[{"title":"write to my brother","slug":"2018-10-15-write-to-my-brother","date":"2018-10-15T15:15:52.000Z","updated":"2018-10-15T15:18:48.157Z","comments":true,"path":"2018/10/15/2018-10-15-write-to-my-brother/","link":"","permalink":"https://pinksmallfan.github.io/WenChongAndJiaoKou/2018/10/15/2018-10-15-write-to-my-brother/","excerpt":"","text":"随笔 见识 考拉小巫","categories":[],"tags":[]},{"title":"给VPS加固安全设置","slug":"VPS设置安全加固","date":"2018-10-13T17:02:15.000Z","updated":"2018-10-14T16:14:52.493Z","comments":true,"path":"2018/10/14/VPS设置安全加固/","link":"","permalink":"https://pinksmallfan.github.io/WenChongAndJiaoKou/2018/10/14/VPS设置安全加固/","excerpt":"","text":"参数 系统：CentOS 7 运行内存：500M 内存：500G 默认端口 修改默认的端口 账户安全管理修改密码长度12vi /etc/login.defs#PASS_MIN_LEN 18 修改加密密码算法12vi /etc/login.defs#ENCRYPT_METHOD SHA512 denyhosts减缓暴力试错错误12345678yum install epel-release # 安装Epel存储库来安装denyhosts软件包yum install denyhosts vi /etc/denyhosts.conf# 参考修改如下：# DENY_THRESHOLD_INVALID = 5# DENY_THRESHOLD_VALID = 10# DENY_THRESHOLD_ROOT = 10# DENY_THRESHOLD_RESTRICTED = 1 创建普通用户账户12useradd pinksmallfanpasswd pinksmallfan 禁用不用的账号123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354who /var/log/wtmp #查看用户登录的状态vi /etc/passwd #查看账号vi /etc/group #查看系统的用户组# /etc/passwd # /sbin/nologin的用户就不要删啦！不然会重启会导致进不去登录页面，以下#的执行# userdel bin # userdel daemonuserdel admuserdel lpuserdel syncuserdel shutdownuserdel operatoruserdel ftp# userdel mail# userdel nobody# userdel systemd-bus-proxy# userdel system-network# userdel dbususerdel tssuserdel sshd# userdel postix# userdel chrony# /etc/groupgroupdel admgroupdel lpgroupdel newsgroupdel uucp# groupdel sys# groupdel tty# groupdel disk# groupdel mem# groupdel kmem# groupdel wheel# groupdel cdrom# # groupdel mail# groupdel man# groupdel dialout# groupdel floppygroupdel games# groupdel tape# groupdel video# groupdel lock# groupdel audio# groupdel users# groupdel utmp# groupdel utempter# groupdel input# groupdel systemd-journal# groupdel ssh_keysgroupdel dip# groupdel postdropgroupdel pppusers 禁用非授权用户获得权限1234chattr +i /etc/passwdchattr +i /etc/shadowchattr +i /etc/groupchattr +i /etc/gshadow ps: 如果想要创建用户or修改密码，就用chattr -i命令来恢复 禁用ctrl+alt+delete命令12vi /etc/inittab# ca::ctrlaltdel:/sbin/shutdown -t3 -r now # 注释 设置/etc/profile123echo \"TIMEOUT=3600\" &gt;&gt;/etc/profilesed -i \"s/HISTSIZE=1000/HISTSIZE=10/\" /etc/profilesource /etc/profile 设置/etc/rcd/init.d/文件的许可权限1chmod -R 700 /etc/rcd/init.d/* ssh 安全配置1234567yum install sshcp /etc/ssh/sshd_config /etc/ssh/sshd_config.bakvi /etc/ssh/sshd_config# Port 9102 # 修改默认参考# PermitRootLogin no# PermitEmptyPasswords no# UseDns no 防止攻击防止ping12345# 临时改防止pingecho 1 &gt;/proc/sys/net/ipv4/icmp_echo_ignore_all# 永久改防止pingvi /etc/rc.d/rc.local # echo 1 /proc/sys/net/ipv4/icmp_echo_ignore_all #添加 防止IP欺骗攻击1234vi /etc/host.conf# order bind, hosts# multi off# nospoof on 防止Dos攻击1234567vi /etc/security/limits.conf# hard core 0 #禁止文件的调试# hard rss 5000 #限制内存的使用，设定值为5MB# hard nproc 20 #限制进程为20vi /etc/pam.d/login# session required /lib64/security/pam_limits.so #添加，如果是32位系统用lib（不然可能会出现重启登录不上的问题，显示module is unknown，可以采用救援模式来修改回来，后面章节会讲）！64位用lib64 系统配置+性能调优使用ntp服务更新服务器时间12345yum -y install ntpntpdate ntp.aliyun.comcrontab -e# * */12 * * * ntpdate tp.aliyun.com #将会根据vps所在地址更新时间源，比如上海17点，vps在美国，显示的是05点cp /usr/share/zoneinfo/Asia/Shanghai/etc/localtime # 设置上海时间 删除系统相关信息12echo \"helloworld!\" &gt;/etc/issueecho \"helloworld!\" &gt;/etc/redhat-release 系统备份与应急处理设置系统镜像123456# 备份镜像tar cvpzf back_up.tgz --exclude=/proc --exclude=/lost+found --exclude=/mnt --exclude=/sys --exclude=back_up.tgz /# 将proc、lost+found、mnt、sys、back_up.tgz自身都排除掉，不列入备份的一部分#还原镜像tar xvpzf back_up.tgz -C / rescue mode进入原系统123456789101112131415# rescue mode（救援模式）# 进入系统后，查看原系统的挂载路径# 会出现一个大的，和一个小的boot，其中通常小的boot即救援模式的linux# 比如，我的vps下，进入救援模式，会有两个设备，/dev/vda和/dev/vdb，与对应boot的/dev/vda1和/dev/vdb1,另外也可以通过df -h查看当前的挂载情况fdisk -l# 创建两个路径用来挂载mkdir /mnt/linuxmkdir /mnt/linux/boot# 将设备vdb挂载在linux下，boot的vdb1挂载在linux/boot下mount /dev/vdb/ /mnt/linux/mount /dev/vdb1/ /mnt/linux/bootchroot /mnt/linux/boot# /mnt/linux/root/目录下就是对应原系统的/ls -l /mnt/linux/boot/ 参考资料 https://blog.csdn.net/shentianzhi2009/article/details/40340941 解决Module is notknow https://blog.csdn.net/lzx_bupt/article/details/6792335 镜像备份：https://www.jianshu.com/p/69ce20effe7d?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation","categories":[],"tags":[{"name":"配置","slug":"配置","permalink":"https://pinksmallfan.github.io/WenChongAndJiaoKou/tags/配置/"},{"name":"other","slug":"other","permalink":"https://pinksmallfan.github.io/WenChongAndJiaoKou/tags/other/"}]},{"title":"idea使用技巧大放送","slug":"idea-use-tips","date":"2018-10-11T15:00:00.000Z","updated":"2018-10-11T15:03:12.921Z","comments":true,"path":"2018/10/11/idea-use-tips/","link":"","permalink":"https://pinksmallfan.github.io/WenChongAndJiaoKou/2018/10/11/idea-use-tips/","excerpt":"","text":"将普通的项目转为maven项目 解决步骤： 项目（右键）- Add Framework Support - 弹框勾选maven - OK 配置pom","categories":[],"tags":[{"name":"idea","slug":"idea","permalink":"https://pinksmallfan.github.io/WenChongAndJiaoKou/tags/idea/"},{"name":"工具","slug":"工具","permalink":"https://pinksmallfan.github.io/WenChongAndJiaoKou/tags/工具/"}]},{"title":"高并发测试","slug":"highConcurrencyTest","date":"2018-10-11T13:36:24.000Z","updated":"2018-10-11T16:05:06.538Z","comments":true,"path":"2018/10/11/highConcurrencyTest/","link":"","permalink":"https://pinksmallfan.github.io/WenChongAndJiaoKou/2018/10/11/highConcurrencyTest/","excerpt":"","text":"高并发代码123456789101112131415161718192021222324252627282930@Test public void testConcurrency() throws Exception&#123; final int threadSize = 100; final CountDownLatch countDownLatch = new CountDownLatch(1); // 创建一个刚好有100个线程槽的线程池 final ExecutorService executorService = Executors.newFixedThreadPool(threadSize); for(int i = 0;i&lt;threadSize; i++)&#123; final int number = i+1; Runnable runnable = new Runnable() &#123; public void run() &#123; try &#123; countDownLatch.await(); // TODO 需要进行并发测试的函数 &#125; catch (Exception e)&#123; e.printStackTrace(); &#125; &#125; &#125;; // 线程池的申请线程 executorService.submit(runnable); &#125; System.out.println(\"Start!!\"); // 开始执行并发测试 countDownLatch.countDown(); // 等待之前申请线程的时间 executorService.awaitTermination(1000,TimeUnit.MILLISECONDS); &#125; ### 任务 通过IDEA构建一个spring-boot的maven项目 连接mysql数据库，能够进行简单的增删改查，搭建为一个模板项目[Spring-boot_mysql] 进行高并发sql的查询测试 添加mybatis模块 添加redis模块 添加zookeeper模块 添加dubbo模块 添加webSocket模块 添加netty模块-&gt;与tomcat切入（对比） 未完待续 idea 项目搭建、部署的流程步骤 技术原理的执行步骤 业务的流程步骤 ​","categories":[],"tags":[{"name":"测试","slug":"测试","permalink":"https://pinksmallfan.github.io/WenChongAndJiaoKou/tags/测试/"},{"name":"高并发","slug":"高并发","permalink":"https://pinksmallfan.github.io/WenChongAndJiaoKou/tags/高并发/"},{"name":"代码","slug":"代码","permalink":"https://pinksmallfan.github.io/WenChongAndJiaoKou/tags/代码/"}]},{"title":"故事化应用","slug":"tellAYarn","date":"2018-10-10T15:39:29.000Z","updated":"2018-10-10T16:41:02.728Z","comments":true,"path":"2018/10/10/tellAYarn/","link":"","permalink":"https://pinksmallfan.github.io/WenChongAndJiaoKou/2018/10/10/tellAYarn/","excerpt":"","text":"简介 创建一个笔记，收集灵感，收集有用的学习知识点 共同点：这些博客内容都有一个点，故事化 通过故事来讲明白一个技术点，需要对技术深刻的了解、具有很强的表达能力 需要多读多看，多反复多琢磨，寻找与形成属于自己语言的表达方式 重点：扩展自己表达方面的思维能力，做一个会讲故事的专业人员 格言：日积月累就是超越，一点一滴就是实力的见证。 RESTful故事化： https://blog.csdn.net/hzy38324/article/details/78360525 阮一峰：http://www.ruanyifeng.com/blog/2018/10/restful-api-best-practices.html 持续更新中…","categories":[],"tags":[{"name":"other","slug":"other","permalink":"https://pinksmallfan.github.io/WenChongAndJiaoKou/tags/other/"},{"name":"知识框架","slug":"知识框架","permalink":"https://pinksmallfan.github.io/WenChongAndJiaoKou/tags/知识框架/"}]},{"title":"Spring boot","slug":"Spring-boot","date":"2018-10-10T13:54:55.000Z","updated":"2018-10-10T17:05:24.653Z","comments":true,"path":"2018/10/10/Spring-boot/","link":"","permalink":"https://pinksmallfan.github.io/WenChongAndJiaoKou/2018/10/10/Spring-boot/","excerpt":"","text":"简介 创建一个笔记，收集灵感，收集有用的学习知识点 方便以后开始学习一样技术的时候，能够快速定位 写下学习计划，制定学习方向、模板，做好二次学习的准备 需要记录技术点的详细的官网地址，知识点参考的网址 定位：这里的文章大多不是原创，以收集资料为主 重点：扩展自己的知识面 要求：标题、简单的概括、简单的示例（可选）、应用场景（可选） 格言：日积月累就是超越，一点一滴就是实力的见证。 Spring boot亮点 简单 变简单 自动配置 简化依赖 概述 采用了Spring boot，能够解决什么问题呢？ Spring boot能够使编码变精简、配置变简单、部署变快捷、监控变容易 Spring boot默认快速启动一个web容器，不需要外置web容器，将注意力集中在编码上，而不是配置容器等方面上。 Spring boot是Spring框架扬长避短的杰作，简化了spring冗余的配置，从xml配置到java Config配置，从setBean的方式配置到自动注解，从多个properties+xml到只要一个yml就完成了配置。 Spring boot 默认配置；额很多框架的使用方式，整合了所有框架 Spring boot能够对主流开发的框架，进行无配置集成，提高了开发、部署的效率，不用再花额外的时间，研究不同框架的整合与集成上 Spring boot支持的配置文件application.yml，减少了传统的properties的链式麻烦 Spring boot提供了热部署，实时刷新后台服务，能将服务改动后的效果，呈现出来 Spring boot一键启动，只需要一个jar、war，甚至一段代码就可以了，不需要预部署应用服务器 configprops：属性配置、dump：线程工作状态、env/name：环境变量、metrics/name：JVM性能指标、mapping：RESTful path与服务类的映射关系 Spring boot有什么不足？ 缺少服务注册、发现等外围方案、配套功能 缺少外围监控集成方案，自身的acturator所提供的监控功能，还没有集成与现有的监控对接 缺少外围安全管理方案、缺少REST落地的URI规划方案 内置tomcat和Jetty容器 比较适合做微服务，而不太适合做比较大型的项目。 Spring boot 相关技术（以下关键词都可以另外写一章进行记录） Mock 测试，用来模拟不容易构造、比较复杂的对象，方便并行的开发工作，可以用来极速演示、隔离系统（避免数据库污染）、模拟驱动开发、无法访问的资源、提高测试的覆盖率 Docker 装满需要应用程序的容器，让更多的应用只需要在同一个硬件运行，即连即用，让开发人员易于快速构建可随时运行的容器化应用程序，大大简化了管理和部署应用程序的任务。 RESTful API 设计规范，用于 Web 数据接口的设计。让客户端发出的数据操作指令都是”动词 + 宾语”的结构 MicroService 部署流程关键点附录 Spring Boot 浅谈：https://blog.csdn.net/fly_zhyu/article/details/76407830 自动配置：https://www.jianshu.com/p/3d788198efab 极简的Spring boot：https://www.jianshu.com/p/1936a23d6a56 未完待续…","categories":[],"tags":[{"name":"Spring-boot","slug":"Spring-boot","permalink":"https://pinksmallfan.github.io/WenChongAndJiaoKou/tags/Spring-boot/"},{"name":"知识框架","slug":"知识框架","permalink":"https://pinksmallfan.github.io/WenChongAndJiaoKou/tags/知识框架/"}]},{"title":"日积月累就是超越，一点一滴就是实力的见证","slug":"inspiration","date":"2018-10-09T15:08:42.000Z","updated":"2018-10-11T13:20:24.457Z","comments":true,"path":"2018/10/09/inspiration/","link":"","permalink":"https://pinksmallfan.github.io/WenChongAndJiaoKou/2018/10/09/inspiration/","excerpt":"","text":"简介 创建一个笔记，收集灵感，收集有用的学习知识点 方便以后开始学习一样技术的时候，能够快速定位 写下学习计划，制定学习方向、模板，做好二次学习的准备 需要记录技术点的详细的官网地址，知识点参考的网址 定位：这里的文章大多不是原创，以收集资料为主 重点：扩展自己的知识面 要求：标题、简单的概括、简单的示例（可选）、应用场景（可选） 格言：日积月累就是超越，一点一滴就是实力的见证。 pythonunitest是什么​ 单元测试框架 简单的测试用例12345678910111213141516171819202122232425262728293031import unittestclass MyTest(unittest.TestCase): # 继承unittest.TestCase # 每个测试用例执行之后做操作 def tearDown(self): print('111') # 每个测试用例执行之前做操作 def setUp(self): print('22222') # 必须使用 @ classmethod装饰器, 所有test运行完后运行一次 @classmethod def tearDownClass(self): print('4444444') # 必须使用@classmethod 装饰器,所有test运行前运行一次 @classmethod def setUpClass(self): print('33333') # 测试用例 def test_a_run(self): self.assertEqual(1, 1) # 测试用例 def test_b_run(self): self.assertEqual(2, 2) #运行所有的测试用例 if __name__ == '__main__': unittest.main() 常用断言12345678assertEqual(a, b) # a == b assertNotEqual(a, b) # a != b assertTrue(x) # bool(x) is True assertFalse(x) # bool(x) is False assertIsNone(x) # x is None assertIsNotNone(x) # x is not None assertIn(a, b) # a in b assertNotIn(a, b) # a not in b HTMLTestRunner介绍：测试报告，引用模板 12345678910111213if __name__ == '__main__': #创建一个测试集合 test_suite = unittest.TestSuite() #测试套件中添加测试用例 test_suite.addTest(MyTest('test_run1')) #使用makeSuite方法添加所有的测试方法 #test_suite.addTest(unittest.makeSuite(MyTest)) #打开一个保存结果的html文件 fp = open('res.html','wb') #生成执行用例的对象 runner = HTMLTestRunner.HTMLTestRunner(stream=fp,title='api测试报告',description='测试情况') #执行测试套件 runner.run(test_suite) xmlrunner介绍：jenkins识别的测试报告，引用模板 123456if __name__=='__main__': test_suite = unittest.TestSuite() test_suite.addTest(unittest.makeSuite(My)) #指定报告放的目录 runner = xmlrunner.XMLTestRunner(output='report') runner.run(test_suite) testsuite介绍：组织测试模块 12345678if __name__=='__main__': #创建模块管理 test_suite=unittest.TestSuite() test_suite.addTest(Test1('Test1')) test_suite.addTest(Test2('Test2')) #使用run()方法运行测试套件 runner=unittest.TextTestRunner() runner.run(test_suite) 官网https://docs.python.org/2/library/unittest.html xrld、xlwt是什么​ python的excel操作 12345678910111213141516171819202122import xlrd#打开excel表excel=xlrd.open_workbook(u\"excel.xlsx\")#获取sheet表格（索引、顺序、表名）sheet=excel.sheets()[0]sheet=excel.sheet_by_index(0)sheet=excel.sheet_by_name(u\"Sheet1\")#获取行数rowsCount=sheet.nrows#获取列数columnsCount=sheet.ncols#获取行内容rowsContent=sheet.row_values(0)#获取列内容rowsContent=sheet.col_values(0)#返回单元格对象table.cell(rowx,colx)#返回单元格中的数据类型table.cell_type(rowx,colx)#返回单元格中的数据table.cell_value(rowx,colx) 官网https://xlrd.readthedocs.io/en/latest/api.html ConfigParser介绍​ 读取写入配置文件 12345[my_config]host=192.168.88.107user=root[com_config]host=10.119.10.13 config.ini配置文件如上 基本使用12345678910111213141516import ConfigParserimport osconfig=ConfigParser()config.read('/usr/local/config.ini')# 打印所有节点标题print config.sections() # ['my_config','com_config']# 删除指定节点config.remove_sections('my_config') # True# 打印所有键值对print config.items('my_config') # [('host','192.168.88.107'),('user','root')]# 添加新的节点config.add_section('new_config')# 写入指定的节点，添加键值对config.set('new_config','host','192.168.88.102')# 写入实际的配置文件config.write(open('/usr/local/config.ini','w')) 官网https://docs.python.org/2/library/configparser.html Jenkins是什么 能够驱动其他软件一起工作，可以持续、自动地构建的一个集成工具 能够执行定时的任务，并进行监控，跟踪版本的发布，生成对应的日志 能够进行持续集成、交付、部署，能够配置RSS或者邮件等进行通知发送 能够构建测试软件，生成对应的测试报告 使用流程 版本控制、集成工具、运行环境的安装 ​ 插件：git、maven、svn、jdk、tomcat yum安装jenkins，安装目录、配置文件、日志目录， ​ 形式有三种：yum、war包、docker安装 jenkins部署（部署在tomcat上等web容器） 在web主页，配置maven、GIT、jdk、svn 邮件配置、ssh配置、插件安装 项目构建 官网​ https://jenkins.io/ smtplib是什么​ SMTP协议，即发送邮件的协议；python支持通过smtplib模块进行邮件发送。 ​ 它工作的方式是：通过与src地址到dir地址传送邮件的规则，通过smtplib来控制邮件的中转方式。 ​ 并且支持：纯文本、带附件、html格式的邮件发送 ​ 官网​ https://docs.python.org/2/library/smtplib.html 参考网址 自动化测试：https://blog.csdn.net/huilan_same/article/details/52559711 unitest： https://www.cnblogs.com/feng0815/p/8045850.html unitest： https://www.jianshu.com/p/a5550835f361 xrld： https://www.cnblogs.com/insane-Mr-Li/p/9092619.html ConfigParser： https://www.cnblogs.com/snifferhu/p/4368904.html ConfigParser：https://blog.csdn.net/miner_k/article/details/77857292 Jenkins：https://www.jianshu.com/p/6aa1c9b9ae01 jenkins详细部署：https://blog.csdn.net/qq_26848099/article/details/78901240 smtplib：https://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/001386832745198026a685614e7462fb57dbf733cc9f3ad000 smtplib：http://www.runoob.com/python/python-email.html PlusUltra","categories":[],"tags":[{"name":"知识框架","slug":"知识框架","permalink":"https://pinksmallfan.github.io/WenChongAndJiaoKou/tags/知识框架/"},{"name":"python","slug":"python","permalink":"https://pinksmallfan.github.io/WenChongAndJiaoKou/tags/python/"}]},{"title":"外币银行卡的区别","slug":"BankCard","date":"2018-10-08T17:10:00.000Z","updated":"2018-10-09T15:35:35.782Z","comments":true,"path":"2018/10/09/BankCard/","link":"","permalink":"https://pinksmallfan.github.io/WenChongAndJiaoKou/2018/10/09/BankCard/","excerpt":"","text":"信用卡，国际有六大信用卡公司： 美国：VISA（威士国际）、MasterCard（万事达卡国际）、AE blue（美国运通国际）、Diners Club（大来） 中国：UnionPay（银联） 日本：JCB 区别： Visa：第一大卡，在亚洲和澳大利亚的受理商户比较多 MasterCard：第二大卡，在欧洲和北美较多","categories":[],"tags":[{"name":"other","slug":"other","permalink":"https://pinksmallfan.github.io/WenChongAndJiaoKou/tags/other/"}]},{"title":"linmaogui loveZoe","slug":"linmaogui-loveZoe","date":"2018-10-01T06:42:59.000Z","updated":"2018-10-15T17:59:41.774Z","comments":true,"path":"2018/10/01/linmaogui-loveZoe/","link":"","permalink":"https://pinksmallfan.github.io/WenChongAndJiaoKou/2018/10/01/linmaogui-loveZoe/","excerpt":"","text":"有女朋友之前迷糊的梦想，不知道的未来 没有想过自己的未来会是怎么样，也没有真正意义上思考自己的未来应该会长什么样，生活也就缺少内在的驱动力，所以做一件事的时候，视野也比较窄小。 以前的我，会选择有什么做什么，不关心自己到底缺什么，需要先做好什么？同时也没有注意哪一些是真正能够提高自己价值、提高自己工资的事。 盲目的学习一项技术、并且学习技术的同时，也没有针对性，没有想好方法论，只是盲目的看书，做笔记，而没有真正理解透知识，吸收并消化为自己的知识架构。 懒散的执行力 还没有女朋友之前，想做的事挺多，计划做的事也不少，但是都是想到就做，做了一点就废，执行力低。 缺少驱动力，缺少美好未来的憧憬。 总会被新的念头，打碎目前计划想做的事 随波逐流，低质量的生活 生活过得比较平平淡淡，自己过自己的，当有人约的时候不会拒绝（普通朋友的聚会，不是集体聚会） 没有女朋友的时候，时间比较廉价，不会在意一天下来，有多少时间逝去 下班后就一直躺在沙发上，吃饭看新闻，有时候会忘记时间，结果就十点了，想要学习，却缺少动力了 没有女朋友的时候，在宿舍看的书比较少 在下完班回来，只要内心有一些压抑（不是很想学习），就会玩手游，有时候一玩起手游，就没日没夜，有过三四次通宵手游（周末，非工作日的时候） 相对来说，没有人约的时候，也就宅宿舍，周末会一觉到中午，煮个中午饭、晚饭，一天就很快过去了。 买很多不实用的东西 宿舍囤了不少货，老是吃不完 买了很多不实用的东西，比如说一些很少穿的衣服、各种各样的配料（总认为花钱买了食材了，自己就应该会有动力了，其实不一定，重要的还是到底有没有做了这件事，有没有按照规划做这件事） 买了过多的食材（蔬菜、肉），导致过了几天不能吃 自以为良好的穿衣打扮 买了长辈类型的衣服，工衣，大叔同款衣服。 总认为自己穿的还凑合，比普通人好很多了，但是后面才知道自己错了 审美观停留在有领了就行，衣服搭配相对来说还是比较混乱，没想过如果从小哥哥视角看待自己穿着会怎么样？ 我会有女朋友嘛？ 没有女朋友的时候，会怀疑自己，会想，到底自己未来的女朋友会是什么样子的？ 自我感觉良好，认为自己很多行为都挺好的 也有过一两个念头，自己没有女朋友后，会怎么样？要一直单身下去？还是听从父母安排，根据叔叔阿姨等介绍对象？ 没有女朋友之前，我一直渴望着以后要好好疼爱自己的女友，要和她一起成长，宠她，一起开开心心的。 有女朋友之后美好的梦想，明亮的未来 每天都有期望，想到未来的生活就会感到动力十足，不敢马虎，当不想做什么事的时候，只要想到未来，就会动起来，坐到座位上，开始做必须要做的事（在过去，这种觉悟还是比较低的，没有女朋友的时候，不想做的时候，就会选择放松自己） 归心似箭，当zoe在我身边的时候，都会有期盼，要怎样让zoe开心，临时离开的时候，想着怎样才可以快一点见到zoe，要怎样和zoe过得充实有意义~ 有女朋友后，开始规划自己的将来，写下了自己的未来计划，3年、5年等的计划，感觉自己的未来已经开始勾画好了一片蓝图。 会想到自己结婚要做什么、准备什么，生小孩要什么时候。 每次约会，都会规划要怎么过，有什么备用的方案，一起想办法解决可能遇到的问题 开始忙碌了起来，有很多需要做的事，闲不下来，但是很开心 一起看做了很多事 一起看了很多书，小狗钱钱、吉田医生哈佛求学记、如何阅读一本书、考拉小巫的英语学习日记、零秒工作、零秒思考、爱你就像爱生命一样、我不爱世界只爱你、目送、亲爱的安德烈、孩子你慢慢走、房思琪的初恋乐园、女人这东西、亲密关系、不可承受生命之轻、请停止无效努力 一起看了很多电视剧、电影，初恋50次，雪山凶铃，喜剧之王，让子弹飞，燃烧，厕所英雄，新婚日记，13个原因，我不是药神，wood job，信号， 西虹市首富，极限挑战3期等（应该还有漏） 一起看了少女漫，心动计划，徐小熊和许兔兔，六月的不可思议等 一起买情侣杯、牙刷，，小黑与小白 知道了 知道了逛街、一起吃饭的感觉 ​ 以前逛街吃饭，都是和男生群一起，聊聊生活上的事，不过也会经常看到情侣，那个时候没啥感觉，不过可能还是有点羡慕吧，以前也没有想过有女朋友一起吃饭一起逛街会是怎么样。网上有很多人会说，男生不喜欢和他的女朋友逛街，因为会嫌时间长，逛街不感兴趣什么的。有了女朋友后，我觉得不完全是这样子吧，我还是挺喜欢和女友逛街吃饭的，因为逛街，会激起很多联想与话题，将你与我产生了更多有意思的关联~ 知道了吃醋是什么感觉。 ​ 听到你说有男生主动请你吃水果，心里边还是挺吃醋的，想问清楚，又怕误会了，被你嫌弃，从男生的角度上看水果事件，会认为有一些行为是有意的，但是在我不确定的时候，我就只能吃醋了，而我想问清楚，却表达得很含糊，我现在明白，那个时候，我把照顾自己的内心，和照顾你的内心放在同样重要的位置，我不知道怎么用语言表达出，能够照顾两者的一个平衡。 知道了真心心疼的感觉 ​ 当你说，你腿疼、你卡住鱼骨了，说到你挺疼的时候，我想跑到你身边照顾你的，我有一种控制欲，想知道你怎么样了、有什么可以让我帮忙的，需要怎么处理，我都想知道，我想照顾你。 ​ 当暑假结束，开始异地，你做高铁回去，我送你走的时候，那种心疼，我才明白是念念的不舍，我还想和你在一起生活，不想和你分开，明白你已经住在我心中了，我的世界已经满是你的痕迹。 天天都想要抱抱亲亲 性幻想很猛烈，想一直好好宠你，好想好想和你做那种事 学会了，一起成长 拍照的技巧 ​ 现在也会注意要怎么找角度，多用手机的特性拍一张照片，拍照，现在给我的感触是：要学会抓拍，要时刻准备好角度，要多多积累拍照的一些知识。 ​ 抓怕：因为不是每个人在相机面前会表现得很完美，但是放松的时候，自然的动作会展现出特别的美，好几次看到zoe美美哒样子，很自然很可爱，但是拿起手机，却来不及了。 ​ 时刻准备好角度：zoe有了很不错的状态，可是匆匆忙忙掏出手机，进行拍照，没有好的构图与设计，导致背景、角度都差强人意。或者说，在其他人准备好了，但是没有注意到角度、采光、构图比例，就拍下来了，以数量取胜是不可取的，因为准备好了，只要一张就可以成为经典了。 ​ 积累知识：积累就是厚积薄发，虽然学的内容会很多，但是一张好照片都是需要日积月累的实践与知识补充。记得那次厦门和zoe约会，zoe穿JK制服，美丽的景色，哪里都是拍照的地方，相片里的zoe也很美，我挺喜欢的。 知道了自己的语言会多么有杀伤力，学会留意自己的一言一行 ​ 曾经，因为想要给zoe改简历，想要突出一些内容，而采取了过于夸张的表达方式，没有注意到这样子的句子，在那个时候的zoe看来会是什么样子。而那个时候你落泪了，因为我，我那个时候真的不知所措，想了很多话，也打了不少字（都没发出去），我很懊悔，也觉得自己很糟糕，所以不到说什么好的情况下，就打了一个“嗯”，现在想起来觉得，真是更加糟糕透顶。 ​ 经历了那一次风波，我还是会无保留的表达自己的建议，但我也时时刻刻留意自己的一言一行，不会让这种行为再伤害zoe，我也在成长着，我想要宠爱zoe~ 注意自己的打扮、穿搭，穿起了靓靓的衣服 ​ 对比过去，确实自己以前穿的衣服太老气了，我也想要让自己帅帅的，但是自己的品味就定格在那里，也不愿意尝试太过潮流的衣服（之前总觉得自己会不搭，没太多想法回去接受），不过，有女朋友后，听了女友的建议，买了第一件大大的白T，一开始选的时候，会比较慎重，买后穿起来，zoe说不错的时候，才知道确实适合自己，从此审美也开始提高，敢于尝试起来。 喜欢旅游、房屋改造 ​ 旅游，以前可能会觉得费钱，花了就没了，但是现在不一样了，有了女友，觉得是一种灵魂伴侣，可以一起去旅游，有了新的动力，可以一起探索未知的事，一起见见我们所不知道的世界。 ​ 房屋改造，以前对这东西没太多感觉，但是我确实比较喜欢设计，对设计敏感。而女友喜欢房屋改造，也让一下子喜欢起来，房屋是心灵的归属，也是zoe和我一起畅想更多未来的地方，而房屋改造成舒适的样子，能够让人联想到更多美好的生活，一直都想和zoe赶紧做一起，想抱着zoe睡。 懂了很多知识：化妆、女性生理、断舍离 ​ 在男生的话题中，几乎绝对不会提到的是化妆、女性生理的话题（最多就面膜、润肤膏、上课有女生请假，说xxx来那个，没了）。所以这些话题还是可望不可即，有了女友，这些话题打开了，了解了不少，比如最佳生理年龄，生理周期，有什么样子的m巾。化妆的工序有多少种…等等，还是挺开心能够了解这些的，这方面也让我更加能够理解女性的不易，女友与妈妈最伟大~ ​ 断舍离的概念，也是我需要去完成的事，收纳、精简生活，而不是堆东西、买不需要的东西、任何东西有根有据，不会让自己丢这丢那。虽然我现在还没有真正做到，但是断舍离的概念，已经让我有目标、有方向，过什么样子的生活，想和zoe一起过想过的生活，精致的生活。 只想陪女朋友，想要和你做好多好多事情 开始理财，想要好好的努力赚钱 开始不乱花钱，只买最需要的东西，和女友想要的任何东西 很多事情不在是自己做决定了 买东西都会想到女朋友，这个适不适合买？女朋友的话要不要？总想着以后同居，我们需要什么？ 想和你同步做同样的事：情侣杯、情侣衫、牙刷、一起学习、一起看剧","categories":[],"tags":[]}]}